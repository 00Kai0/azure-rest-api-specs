{
  "swagger": "2.0",
  "info": {
    "title": "Server Threat Detection Policy APIs",
    "description": "Provides create, read and update functionality for Azure SQL server Threat Detection policies.",
    "version": "2015-05-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}/operationResults/{operationId}": {
      "get": {
        "tags": [
          "ServerSecurityAlertOperationResults"
        ],
        "description": "Get the active server Threat Detection operation result.",
        "operationId": "ServerThreatDetectionOperationResult_Get",
        "x-ms-examples": {
          "Get server security alert operation result": { "$ref": "../examples/ServerSecurityAlertOperationResult.json" }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityAlertPolicyNameParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The server Threat Detection operation id to retrieve.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the server Threat Detection operation results.",
            "schema": {
              "$ref": "#/definitions/SecurityAlertOperationResultResource"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 405 ServerSecurityAlertOperationResultsNotImplemented - Operations on Server Threat Detection security alert operation results are not enabled yet\n\n * 500 GetServerSecurityAlertOperationResultsFailed - Failed to get Threat Detection security Alert operation results"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}/operationResults/": {
      "get": {
        "tags": [
          "ServerSecurityAlertOperationResults"
        ],
        "description": "Get a list of server Threat Detection operation results.",
        "operationId": "ServerThreatDetectionOperationResultsList_Get",
        "x-ms-examples": {
          "Get server security alert operation results list": { "$ref": "../examples/ServerSecurityAlertOperationResultsList.json" }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityAlertPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the server Threat Detection operation results.",
            "schema": {
              "$ref": "#/definitions/SecurityAlertOperationListResult"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 405 ServerSecurityAlertOperationResultsNotImplemented - Operations on Server Threat Detection security alert operation results are not enabled yet\n\n * 500 GetServerSecurityAlertOperationResultsFailed - Failed to get Threat Detection security Alert operation results"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}": {
      "get": {
        "tags": [
          "SecurityAlert"
        ],
        "description": "Get a Threat Detection policy associated with a server.",
        "operationId": "ServerThreatDetectionPolicies_Get",
        "x-ms-examples": {
          "Get server security alert policy": { "$ref": "../examples/ServerSecurityAlertGet.json" }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityAlertPolicyNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the server Threat Detection policy.",
            "schema": {
              "$ref": "#/definitions/ServerSecurityAlertPolicyResource"
            }
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 500 GetServerSecurityAlertPolicyFailed - Failed to get Threat Detection settings * 500 DatabaseIsUnavailable - Your settings are currently unavailable, please try again later"
          }
        }
      },
      "put": {
        "tags": [
          "SecurityAlert"
        ],
        "description": "Creates or updates a Threat Detection policy for a server.",
        "operationId": "ServerThreatDetectionPolicies_CreateOrUpdate",
        "x-ms-examples": {
          "Create server security alert policy max": { "$ref": "../examples/ServerSecurityAlertCreateMax.json" },
          "Create server security alert policy min": { "$ref": "../examples/ServerSecurityAlertCreateMin.json" }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/SecurityAlertPolicyNameParameter"
          },
          {
            "name": "serverSecurityAlertPolicy",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServerSecurityAlertPolicyResource"
            },
            "description": "The name of the server security alert policy."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerSecurityAlertPolicyResource"
            }
          },
          "202": {
            "description": "Successfully set the server Threat Detection policy."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidServerSecurityAlertPolicyCreateRequest - The create server Threat Detection security alert policy request does not exist or has no properties object.\n\n * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 500 UpsertServerSecurityAlertPolicyFailed - An error has occurred while saving Threat detection settings, please try again later * 500 DatabaseIsUnavailable - Your settings are currently unavailable, please try again later"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Resource": {
      "description": "Resource properties",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "SecurityAlertOperationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAlertOperationResultResource"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "description": "Represents the response to a list security alert operation request."
    },
    "SecurityAlertOperationResultResource": {
      "description": "Contains information about a server Threat Detection policy operation result.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecurityAlertOperationResultResourceProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SecurityAlertOperationResultResourceProperties": {
      "description": "Properties for a database Threat Detection operation result.",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "Specifies the Threat Detection operation ID.",
          "type": "string"
        },
        "state": {
          "description": "Specifies the state of the Threat Detection operation.",
          "type": "string"
        },
        "startTime": {
          "description": "Specifies the start time of the Threat Detection operation.",
          "type": "string"
        }
      }
    },
    "ServerSecurityAlertPolicyResource": {
      "description": "Contains information about a server Threat Detection policy.",
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerSecurityAlertPolicyResourceProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ServerSecurityAlertPolicyResourceProperties": {
      "description": "Properties for a server Threat Detection policy.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Specifies the state of the policy. Options are Enabled or Disabled.",
          "type": "string",
          "enum": [
            "New",
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SecurityAlertPolicyState"
          }
        },
        "disabledAlerts": {
          "description": "Specifies the comma-separated list of alerts that are disabled, or empty string to disable no alerts.",
          "type": "string",
          "enum": [
            "Sql_Injection",
            "Sql_Injection_Vulnerability",
            "Access_Anomaly",
            "Usage_Anomaly",
            "Preview"
          ],
          "x-ms-enum": {
            "name": "SecurityAlert",
            "modelAsString": true
          }
        },
        "emailAddresses": {
          "description": "Specifies the semicolon-separated list of e-mail addresses to which the alert is sent.",
          "type": "string"
        },
        "emailAccountAdmins": {
          "description": "Specifies that the alert is sent to the account administrators. Options are Enabled or Disabled.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SecurityAlertPolicyEmailAccountAdmins"
          }
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
          "type": "string"
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the Threat Detection audit storage account.",
          "type": "string"
        },
        "retentionDays": {
          "format": "int32",
          "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
          "type": "integer"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription ID that identifies an Azure subscription.",
      "required": true,
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for the request.",
      "required": true,
      "x-ms-parameter-location": "client",
      "type": "string"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "ServerNameParameter": {
      "name": "serverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the server.",
      "x-ms-parameter-location": "method"
    },
    "SecurityAlertPolicyNameParameter":{
      "name": "securityAlertPolicyName",
      "in": "path",
      "description": "The name of the Threat Detection policy.",
      "required": true,
      "type": "string",
      "enum": [
        "Default"
      ],
      "x-ms-parameter-location": "method"
    }
  }
}