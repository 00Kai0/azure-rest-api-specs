{
  "swagger": "2.0",
  "info": {
    "title": "DataLakeAnalyticsManagementClient",
    "description": "Creates an Azure Data Lake Analytics account management client.",
    "version": "2015-10-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json",
    "application/octet-stream"
  ],
  "produces": [
    "application/json",
    "text/json",
    "application/octet-stream"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}": {
      "get": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_GetStorageAccount",
        "description": "Gets the specified Azure storage account details in the specified Data Lake Analytics account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the account to retrieve the Azure storage account details from"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the account to retrieve"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_DeleteStorageAccount",
        "description": "Updates the Data Lake Analytics account specified to remove the specified Azure Storage account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Analytics account name to remove the Azure Storage account from"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Storage account to remove"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_UpdateStorageAccount",
        "description": "Updates the specified storage account. This is currently only supported for Azure blob accounts to update their access keys and suffix.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Analytics account name to modify storage accounts in"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Azure Storage account to modify"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountProperties"
            },
            "description": "The parameters containing the access key and suffix to update the storage account with."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_AddStorageAccount",
        "description": "Updates the Data Lake Analytics account specified to include the additional Azure Storage account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Analytics account name to add the Azure Storage account to"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure Storage account to add"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountProperties"
            },
            "description": "The parameters containing the access key and optional suffix for the Azure Storage Account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}/Containers/{containerName}": {
      "get": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_GetStorageContainer",
        "description": "Gets the specified Azure Storage container object associated with the specified Data Lake Analytics and Azure Storage accounts.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to retrieve blob container for"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure storage account to retrieve the blob container from"
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure storage container to retrieve"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/BlobContainer"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}/Containers": {
      "get": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_ListStorageContainers",
        "description": "Gets the Azure Storage containers object associated with the specified Data Lake Analytics and Azure Storage accounts.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to retrieve blob containers for"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure storage account to retrieve blob containers from"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListBlobContainersResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{nextLink}": {
      "get": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_StorageContainersListNext",
        "description": "Gets the next page of the Azure Storage Container objects within the specified Azure Storage account, if any.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The url to the next Azure Storage Container page.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListBlobContainersResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      },
      "post": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_SasTokensListNext",
        "description": "Gets the next page of the SAS token objects within the specified Azure Storage account and container, if any.",
        "parameters": [
          {
            "name": "nextLink",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The url to the next Azure Storage Container SAS token page.",
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListSasTokensResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/{storageAccountName}/Containers/{containerName}/listSasTokens": {
      "post": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_ListSasTokens",
        "description": "Gets the SAS token associated with the specified Data Lake Analytics and WASB storage account and container combination.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to get the SAS token for"
          },
          {
            "name": "storageAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure storage account to retrieve the blob container from"
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Azure storage container to retrieve"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ListSasTokensResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/DataLakeStoreAccounts/{dataLakeStoreAccountName}": {
      "get": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_GetDataLakeStoreAccount",
        "description": "Gets the specified Data Lake Store account details in the specified Data Lake Analytics account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the account to retrieve the Data Lake Store account details from"
          },
          {
            "name": "dataLakeStoreAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the account to retrieve"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccount"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_DeleteDataLakeStoreAccount",
        "description": "Updates the Data Lake Analytics account specified to remove the specified Data Lake Store account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Analytics account name to remove the Data Lake Store account from"
          },
          {
            "name": "dataLakeStoreAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to remove"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_AddDataLakeStoreAccount",
        "description": "Updates the Data Lake Analytics account specified to include the additional Data Lake Store account.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Analytics account name to add the Data Lake Store account to"
          },
          {
            "name": "dataLakeStoreAccountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to add"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DataLakeStoreAccountProperties"
            },
            "description": "The parameters containing the optional properties associated with the named Data Lake account."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/StorageAccounts/": {
      "get": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_ListStorageAccounts",
        "description": "Gets the first page of the Data Lake Analytics account objects within the subscription or within a specific resource group. This includes a link to the next page, if any.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to list Storage accounts for."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Gets or sets the number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Gets or sets the number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories/$expand=Products would expand Product data in line with each Category entry. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets the OrderBy clause. One or more comma-separated expressions with an optional “asc” (the default) or “desc” depending on the order you’d like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Gets or sets a Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "name": "$search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets a free form search. A free-text search expression to match for whether a particular entry should be included in the feed, e.g. Categories?$search=blue OR green. Optional."
          },
          {
            "name": "$format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets the return format. Return the response in particular formatxii without access to request headers for standard content-type negotiation (e.g Orders?$format=json). Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccountListStorageAccountsResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/StorageAccount"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/DataLakeStoreAccounts/": {
      "get": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_ListDataLakeStoreAccounts",
        "description": "Gets the first page of the Data Lake Store account objects within the specified Data Lake Analytics account. This includes a link to the next page, if any.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to list Data Lake Store accounts for."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Gets or sets the number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Gets or sets the number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories/$expand=Products would expand Product data in line with each Category entry. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets the OrderBy clause. One or more comma-separated expressions with an optional “asc” (the default) or “desc” depending on the order you’d like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Gets or sets a Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "name": "$search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets a free form search. A free-text search expression to match for whether a particular entry should be included in the feed, e.g. Categories?$search=blue OR green. Optional."
          },
          {
            "name": "$format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets the return format. Return the response in particular formatxii without access to request headers for standard content-type negotiation (e.g Orders?$format=json). Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccountListDataLakeStoreResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DataLakeStoreAccount"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts": {
      "get": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_List",
        "description": "Gets the first page of the Data Lake Analytics account objects within the subscription or within a specific resource group. This includes a link to the next page, if any.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets OData filter. Optional."
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Gets or sets the number of items to return. Optional."
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Gets or sets the number of items to skip over before returning elements. Optional."
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets OData expansion. Expand related resources in line with the retrieved resources, e.g. Categories/$expand=Products would expand Product data in line with each Category entry. Optional."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional."
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets the OrderBy clause. One or more comma-separated expressions with an optional “asc” (the default) or “desc” depending on the order you’d like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional."
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Gets or sets a Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional."
          },
          {
            "name": "$search",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets a free form search. A free-text search expression to match for whether a particular entry should be included in the feed, e.g. Categories?$search=blue OR green. Optional."
          },
          {
            "name": "$format",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets the return format. Return the response in particular formatxii without access to request headers for standard content-type negotiation (e.g Orders?$format=json). Optional."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccountListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/DataLakeAnalyticsAccount"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}": {
      "get": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_Get",
        "description": "Gets the Data Lake Analytics account object specified by the account name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the account to retrieve"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_Delete",
        "description": "Begins the delete delete process for the Data Lake Analytics account object specified by the account name.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the account to delete"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "202": {
            "description": ""
          },
          "404": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{name}": {
      "put": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_Create",
        "description": "Begins the creation process for the specified Data Lake Analytics account.This supplies the user with computation services for Data Lake Analytics workloads",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group the account will be associated with."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to create."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            },
            "description": "Parameters supplied to the create Data Lake Analytics account operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "DataLakeAnalyticsAccount"
        ],
        "operationId": "DataLakeAnalyticsAccount_Update",
        "description": "Updates the Data Lake Analytics account object specified by the accountName with the contents of the account object.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group."
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Analytics account to update."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            },
            "description": "Parameters supplied to the update Data Lake Analytics account operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DataLakeAnalyticsAccount"
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "StorageAccountProperties": {
      "properties": {
        "accessKey": {
          "type": "string",
          "description": "Gets or sets the access key associated with this Azure Storage account that will be used to connect to it."
        },
        "suffix": {
          "type": "string",
          "description": "Gets or sets the optional suffix for the Data Lake account."
        }
      },
      "description": "Azure Storage account properties information."
    },
    "StorageAccount": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the account name associated with the Azure storage account."
        },
        "properties": {
          "$ref": "#/definitions/StorageAccountProperties",
          "description": "Gets or sets the properties associated with this storage account."
        }
      },
      "description": "Azure Storage account information."
    },
    "BlobContainerProperties": {
      "properties": {
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the last modified time of the blob container."
        }
      },
      "description": "Azure Storage blob container properties information."
    },
    "BlobContainer": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the blob container."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the unique identifier of the blob container."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the blob container."
        },
        "properties": {
          "$ref": "#/definitions/BlobContainerProperties",
          "description": "Gets or sets the properties of the blob container."
        }
      },
      "description": "Azure Storage blob container information."
    },
    "ListBlobContainersResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlobContainer"
          },
          "description": "Gets or set the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the link (url) to the next page of results."
        }
      },
      "description": "The list of blob containers associated with the storage account attached to the Data Lake Analytics account."
    },
    "SasTokenInfo": {
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "Gets or sets the access token for the associated Azure Storage Container."
        }
      },
      "description": "SAS token information."
    },
    "ListSasTokensResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SasTokenInfo"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the link (url) to the next page of results."
        }
      },
      "description": "The SAS response that contains the storage account, container and associated SAS token for connection use."
    },
    "DataLakeStoreAccountProperties": {
      "properties": {
        "suffix": {
          "type": "string",
          "description": "Gets or sets the optional suffix for the Data Lake Store account."
        }
      },
      "description": "Data Lake Store account properties information."
    },
    "DataLakeStoreAccount": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the account name of the Data Lake Store account."
        },
        "properties": {
          "$ref": "#/definitions/DataLakeStoreAccountProperties",
          "description": "Gets or sets the properties associated with this Data Lake Store account."
        }
      },
      "description": "Data Lake Store account information."
    },
    "DataLakeAnalyticsAccountListStorageAccountsResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccount"
          },
          "description": "Gets or set the results of the list operation"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets total number of results."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the link (url) to the next page of results."
        }
      },
      "description": "Azure Storage Account list information."
    },
    "DataLakeAnalyticsAccountListDataLakeStoreResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeStoreAccount"
          },
          "description": "Gets or set the results of the list operation"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets total number of results."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the link (url) to the next page of results."
        }
      },
      "description": "Data Lake Account list information."
    },
    "DataLakeAnalyticsAccountProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the provisioning status of the Data Lake Analytics account.",
          "enum": [
            "Failed",
            "Creating",
            "Running",
            "Succeeded",
            "Patching",
            "Suspending",
            "Resuming",
            "Deleting",
            "Deleted"
          ],
          "x-ms-enum": {
            "name": "DataLakeAnalyticsAccountStatus",
            "modelAsString": "False"
          }
        },
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "Gets the state of the Data Lake Analytics account.",
          "enum": [
            "active",
            "suspended"
          ],
          "x-ms-enum": {
            "name": "DataLakeAnalyticsAccountState",
            "modelAsString": "False"
          }
        },
        "defaultDataLakeStoreAccount": {
          "type": "string",
          "description": "Gets or sets the default data lake storage account associated with this Data Lake Analytics account."
        },
        "maxDegreeOfParallelism": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the maximum supported degree of parallelism for this acocunt."
        },
        "maxJobCount": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the maximum supported jobs running under the account at the same time."
        },
        "dataLakeStoreAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeStoreAccount"
          },
          "description": "Gets or sets the list of Data Lake storage accounts associated with this account."
        },
        "storageAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccount"
          },
          "description": "Gets or sets the list of Azure Blob storage accounts associated with this account."
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the account creation time."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the account last modified time."
        },
        "endpoint": {
          "type": "string",
          "description": "Gets or sets the full CName endpoint for this account."
        }
      },
      "description": "The account specific properties that are associated with an underlying Data Lake Analytics account."
    },
    "DataLakeAnalyticsAccount": {
      "properties": {
        "location": {
          "type": "string",
          "description": "Gets or sets the account regional location."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the account name."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the namespace and type of the account."
        },
        "id": {
          "type": "string",
          "description": "Gets or sets the account subscription ID."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Gets or sets the value of custom properties."
        },
        "properties": {
          "$ref": "#/definitions/DataLakeAnalyticsAccountProperties",
          "description": "Gets or sets the properties defined by Data Lake Analytics all properties are specific to each resource provider."
        }
      },
      "description": "A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account."
    },
    "DataLakeAnalyticsAccountListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeAnalyticsAccount"
          },
          "description": "Gets or set the results of the list operation"
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the link (url) to the next page of results."
        }
      },
      "description": "DataLakeAnalytics Account list information."
    },
    "ErrorDetails": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets or sets the HTTP status code or error code associated with this error"
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the error message localized based on Accept-Language"
        },
        "target": {
          "type": "string",
          "description": "Gets or sets the target of the particular error (for example, the name of the property in error)."
        }
      },
      "description": "Generic resource error details information."
    },
    "InnerError": {
      "properties": {
        "trace": {
          "type": "string",
          "description": "Gets or sets the stack trace for the error"
        },
        "context": {
          "type": "string",
          "description": "Gets or sets the context for the error message"
        }
      },
      "description": "Generic resource inner error information."
    },
    "Error": {
      "properties": {
        "code": {
          "type": "string",
          "description": "Gets or sets the HTTP status code or error code associated with this error"
        },
        "message": {
          "type": "string",
          "description": "Gets or sets the error message to display."
        },
        "target": {
          "type": "string",
          "description": "Gets or sets the target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetails"
          },
          "description": "Gets or sets the list of error details"
        },
        "innerError": {
          "$ref": "#/definitions/InnerError",
          "description": "Gets or sets the inner exceptions or errors, if any"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "description": "Generic resource error information."
    },
    "AzureAsyncOperationResult": {
      "properties": {
        "status": {
          "type": "string",
          "description": "Gets or sets the status of the AzureAsuncOperation",
          "enum": [
            "InProgress",
            "Succeeded",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "OperationStatus",
            "modelAsString": "False"
          }
        },
        "error": {
          "$ref": "#/definitions/Error"
        }
      },
      "description": "The response body contains the status of the specified asynchronous operation, indicating whether it has succeeded, is inprogress, or has failed. Note that this status is distinct from the HTTP status code returned for the Get Operation Status operation itself. If the asynchronous operation succeeded, the response body includes the HTTP status code for the successful request. If the asynchronous operation failed, the response body includes the HTTP status code for the failed request and error information regarding the failure."
    },
    "Resource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "SubResource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource Id"
        }
      },
      "x-ms-azure-resource": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}