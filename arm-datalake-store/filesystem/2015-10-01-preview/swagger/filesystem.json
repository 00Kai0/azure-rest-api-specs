{
  "swagger": "2.0",
  "info": {
    "title": "DataLakeStoreFileSystemManagementClient",
    "description": "Creates an Azure Data Lake Store filesystem client.",
    "version": "2015-10-01-preview",
    "x-ms-code-generation-settings": {
      "internalConstructors": true
    }
  },
  "x-ms-parameterized-host": {
    "hostTemplate": "{accountName}.{adlsFilesystemDnsSuffix}",
    "parameters": [
      {
        "name": "accountName",
        "description": "The Azure Data Lake Store account to execute filesystem operations on.",
        "required": true,
        "type": "string",
        "in": "path",
        "x-ms-skip-url-encoding": true
      },
      {
        "$ref": "#/parameters/adlsFilesystemDnsSuffixInPath"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "text/json",
    "application/octet-stream"
  ],
  "produces": [
    "application/json",
    "text/json",
    "application/octet-stream"
  ],
  "paths": {
    "/WebHdfsExt/{filePath}": {
      "get": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_GetFileInfo",
        "description": "Gets the file information object containing the expiration time for the file at the file path.",
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file for which you want the file expiration information."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "GETFILEINFO"
            ],
            "description": "The constant value for the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileInfoResult"
            }
          }
        }
      },
      "post": {
        "tags": [
          "FileSystem"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "operationId": "FileSystem_ConcurrentAppend",
        "description": "Appends to the specified file. This method supports multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option.",
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file to which to append using concurrent append."
          },
          {
            "name": "accountname",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account that the file lives in."
          },
          {
            "name": "streamContents",
            "in": "body",
            "schema": {
              "type": "object",
              "format": "file"
            },
            "required": true,
            "description": "The file contents to include when appending to the file."
          },
          {
            "name": "appendMode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "autocreate"
            ],
            "x-ms-enum": {
              "name": "AppendModeType",
              "modelAsString": false
            },
            "description": "Indicates the concurrent append call should create the file if it doesn't exist or just open the existing file for append"
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum":["CONCURRENTAPPEND"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_SetFileExpiry",
        "description": "Sets or removes the expiration time on the specified file. This operation can only be executed against files. Folders are not supported.",
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time."
          },
          {
            "name": "expiryOption",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "NeverExpire",
              "RelativeToNow",
              "RelativeToCreationDate",
              "Absolute"
            ],
            "x-ms-enum": {
              "name": "ExpiryOptionType",
              "modelAsString": false
            },
            "description": "Indicates the type of expiration to use for the file: 1. NeverExpire: ExpireTime is ignored. 2. RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated. 3. RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation. 4. Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00."
          },
          {
            "name": "expireTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "The time that the file will expire, corresponding to the ExpiryOption that was set."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["SETEXPIRY"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/webhdfs/v1/{path}": {
      "get": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_CheckAccess",
        "description": "Checks if the specified access is available at the given path.",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory for which to check access."
          },
          {
            "name": "fsaction",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'"
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["CHECKACCESS"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_Mkdirs",
        "description": "Creates a directory.",
        "parameters": [
          {
            "name": "path",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the directory to create."
          },
          {
            "name": "permission",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The optional permission to set on the directory."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["MKDIRS"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileOperationResult"
            }
          }
        }
      }
    },
    "/webhdfs/v1/{destinationPath}": {
      "post": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_Concat",
        "description": "Concatenates the list of source files into the destination file.",
        "parameters": [
          {
            "name": "destinationPath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation."
          },
          {
            "name": "sources",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "A list of comma seperated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["CONCAT"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/webhdfs/v1/{msConcatDestinationPath}": {
      "post": {
        "tags": [
          "FileSystem"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "operationId": "FileSystem_MsConcat",
        "description": "Concatenates the list of source files into the destination file. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version.",
        "parameters": [
          {
            "name": "msConcatDestinationPath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation."
          },
          {
            "name": "deletesourcedirectory",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Caution: Setting this parameter to true will delete the parent directory of all source files provided to the MsConcat method."
          },
          {
            "name": "streamContents",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "format": "file"
            },
            "description": "A list of Data Lake Store paths (starting with '/') of the source files. Must be in the format: sources=<comma separated list>"
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["MSCONCAT"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/webhdfs/v1/{listFilePath}": {
    "get": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_ListFileStatus",
        "description": "Get the list of file status objects specified by the file path, with optional pagination parameters",
        "parameters": [
          {
            "name": "listFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the directory to list."
          },
          {
            "name": "listSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Gets or sets the number of items to return. Optional."
          },
          {
            "name": "listAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets the item or lexographical index after which to begin returning results. For example, a file list of 'a','b','d' and listAfter='b' will return 'd', and a listAfter='c' will also return 'd'. Optional."
          },
          {
            "name": "listBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Gets or sets the item or lexographical index before which to begin returning results. For example, a file list of 'a','b','d' and listBefore='d' will return 'a','b', and a listBefore='c' will also return 'a','b'. Optional."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["MSLISTSTATUS"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileStatusesResult"
            }
          }
        }
      }
    },
    "/webhdfs/va/{getContentSummaryFilePath}": {
      "get": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_GetContentSummary",
        "description": "Gets the file content summary object specified by the file path.",
        "parameters": [
          {
            "name": "getContentSummaryFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file for which to retrieve the summary."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["GETCONTENTSUMMARY"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContentSummaryResult"
            }
          }
        }
      }
    },
    "/webhdfs/v1/{getFilePath}": {
      "get": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_GetFileStatus",
        "description": "Get the file status object specified by the file path.",
        "parameters": [
          {
            "name": "getFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["GETFILESTATUS"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileStatusResult"
            }
          }
        }
      }
    },
    "/webhdfs/v1/{directFilePath}": {
      "post": {
        "tags": [
          "FileSystem"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "operationId": "FileSystem_Append",
        "description": "Appends to the specified file. This method does not support multiple concurrent appends to the file. NOTE: Concurrent append and normal (serial) append CANNOT be used interchangeably. Once a file has been appended to using either append option, it can only be appended to using that append option. Use the ConcurrentAppend option if you would like support for concurrent appends.",
        "parameters": [
          {
            "name": "directFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file to which to append."
          },
          {
            "name": "streamContents",
            "in": "body",
            "schema": {
              "type": "object",
              "format": "file"
            },
            "required": true,
            "description": "The file contents to include when appending to the file."
          },
          {
            "name": "buffersize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "The optional buffer size to use when appending data"
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["APPEND"]
          },
          {
            "name": "append",
            "in": "query",
            "required": true,
            "description": "The constant value for the operation.",
            "type": "string",
            "enum": ["true"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": [
          "FileSystem"
        ],
        "consumes": [
          "application/octet-stream"
        ],
        "operationId": "FileSystem_Create",
        "description": "Creates a file with optionally specified content.",
        "parameters": [
          {
            "name": "directFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file to create."
          },
          {
            "name": "streamContents",
            "in": "body",
            "schema": {
              "type": "object",
              "format": "file"
            },
            "required": false,
            "description": "The file contents to include when creating the file. This parameter is optional, resulting in an empty file if not specified."
          },
          {
            "name": "buffersize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "The size of the buffer used in transferring data."
          },
          {
            "name": "overwrite",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "The indication of if the file should be overwritten."
          },
          {
            "name": "blocksize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "The block size of a file, in bytes."
          },
          {
            "name": "replication",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int16",
            "description": "The number of replications of a file."
          },
          {
            "name": "permission",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The permissions of a file or directory."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["CREATE"]
          },
          {
            "name": "write",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["true"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_Open",
        "description": "Opens and reads from the specified file.",
        "parameters": [
          {
            "name": "directFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file to open."
          },
          {
            "name": "length",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "buffersize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["OPEN"]
          },
          {
            "name": "read",
            "in": "query",
            "required": true,
            "description": "The constant value for the operation.",
            "type": "string",
            "enum": ["true"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": 
            {
              "type": "file"
            }
          }
        }
      }
    },
    "/webhdfs/v1/{setAclFilePath}": {
      "put": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_SetAcl",
        "description": "Sets the Access Control List (ACL) for a file or folder.",
        "parameters": [
          {
            "name": "setAclFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL."
          },
          {
            "name": "aclspec",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'"
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["SETACL"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/webhdfs/v1/{modifyAclFilePath}": {
      "put": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_ModifyAclEntries",
        "description": "Modifies existing Access Control List (ACL) entries on a file or folder.",
        "parameters": [
          {
            "name": "modifyAclFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified."
          },
          {
            "name": "aclspec",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'"
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["MODIFYACLENTRIES"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/webhdfs/v1/{removeAclFilePath}": {
      "put": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_RemoveAclEntries",
        "description": "Removes existing Access Control List (ACL) entries for a file or folder.",
        "parameters": [
          {
            "name": "removeAclFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed."
          },
          {
            "name": "aclspec",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The ACL spec included in ACL removal operations in the format '[default:]user|group|other'"
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["REMOVEACLENTRIES"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/webhdfs/v1/{removeDefaultAclFilePath}": {
      "put": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_RemoveDefaultAcl",
        "description": "Removes default Access Control List (ACL) entries of the specified directory.",
        "parameters": [
          {
            "name": "removeDefaultAclFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the directory with the default ACL being removed."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["REMOVEDEFAULTACL"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/webhdfs/v1/{aclFilePath}": {
      "put": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_RemoveAcl",
        "description": "Removes the existing Access Control List (ACL) of the specified file or directory.",
        "parameters": [
          {
            "name": "aclFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["REMOVEACL"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "get": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_GetAclStatus",
        "description": "Gets Access Control List (ACL) entries for the specified file or directory.",
        "parameters": [
          {
            "name": "aclFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["GETACLSTATUS"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AclStatusResult"
            }
          }
        }
      }
    },
    "/webhdfs/v1/{filePath}": {
      "delete": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_Delete",
        "description": "Deletes the requested file or directory, optionally recursively.",
        "parameters": [
          {
            "name": "filePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory to delete."
          },
          {
            "name": "recursive",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "The optional switch indicating if the delete should be recursive"
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["DELETE"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileOperationResult"
            }
          }
        }
      }
    },
    "/webhdfs/v1/{renameFilePath}": {
      "put": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_Rename",
        "description": "Rename a file or directory.",
        "parameters": [
          {
            "name": "renameFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory to move/rename."
          },
          {
            "name": "destination",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The path to move/rename the file or folder to"
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["RENAME"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FileOperationResult"
            }
          }
        }
      }
    },
    "/webhdfs/v1/{setOwnerFilePath}": {
      "put": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_SetOwner",
        "description": "Sets the owner of a file or directory.",
        "parameters": [
          {
            "name": "setOwnerFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory for which to set the owner."
          },
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The AAD Object ID of the user owner of the file or directory. If empty, the property will remain unchanged."
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The AAD Object ID of the group owner of the file or directory. If empty, the property will remain unchanged."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["SETOWNER"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/webhdfs/v1/{setPermissionFilePath}": {
      "put": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_SetPermission",
        "description": "Sets the permission of the file or folder.",
        "parameters": [
          {
            "name": "setPermissionFilePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory for which to set the permission."
          },
          {
            "name": "permission",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A string representation of the permission (i.e 'rwx'). If empty, this property remains unchanged."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["SETPERMISSION"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/webhdfs/v1/{sourcePath}": {
      "put": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_SetTimes",
        "description": "Sets the access or modification time on a file or directory.",
        "parameters": [
          {
            "name": "sourcePath",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Data Lake Store path (starting with '/') of the file or directory for which to set the modification time."
          },
          {
            "name": "modificationtime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "The modification time of the file or directory. If -1, this property remains unchanged"
          },
          {
            "name": "accesstime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "The access time of the file or directory. If -1, this property remains unchanged"
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["SETTIMES"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/webhdfs/v1/": {
      "get": {
        "tags": [
          "FileSystem"
        ],
        "operationId": "FileSystem_GetHomeDirectory",
        "description": "Get the home directory for the specified account.",
        "parameters": [
          {
            "name": "accountname",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Data Lake Store account to use."
          },
          {
            "name": "op",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The constant value for the operation.",
            "enum": ["GETHOMEDIRECTORY"]
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/HomeDirectoryResult"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "FileOperationResult": {
      "properties": {
        "boolean": {
          "type": "boolean",
          "description": "Gets or sets the result of the operation or request."
        }
      },
      "description": "The result of the request or operation."
    },
    "AclStatus": {
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the list of ACLSpec entries on a file or directory."
        },
        "group": {
          "type": "string",
          "description": "Gets or sets the group owner, an AAD Object ID."
        },
        "owner": {
          "type": "string",
          "description": "Gets or sets the user owner, an AAD Object ID."
        },
        "stickyBit": {
          "type": "boolean",
          "description": "Gets or sets the indicator of whether the sticky bit is on or off."
        }
      },
      "description": "Data Lake Store file or directory Access Control List information."
    },
    "AclStatusResult": {
      "properties": {
        "AclStatus": {
          "$ref": "#/definitions/AclStatus",
          "description": "Gets or sets the AclStatus object for a given file or directory."
        }
      },
      "description": "Data Lake Store file or directory Access Control List information."
    },
    "HomeDirectoryResult": {
      "properties": {
        "Path": {
          "type": "string",
          "description": "Gets or sets the path to the home directory"
        }
      },
      "description": "Data Lake Store filesystem home path response."
    },
    "ContentSummary": {
      "properties": {
        "directoryCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the number of directories."
        },
        "fileCount": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the number of files."
        },
        "length": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the number of bytes used by the contet."
        },
        "quota": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the namespace quota of this directory."
        },
        "spaceConsumed": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the disk space consumed by the content."
        },
        "spaceQuota": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the disk space quota."
        }
      },
      "description": "Data Lake Store content summary information"
    },
    "ContentSummaryResult": {
      "properties": {
        "ContentSummary": {
          "$ref": "#/definitions/ContentSummary",
          "description": "Gets or sets the content summary for the specified path"
        }
      },
      "description": "Data Lake Store filesystem content summary information response."
    },
    "FileStatusProperties": {
      "properties": {
        "accessTime": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the last access time as ticks since the epoch."
        },
        "blockSize": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the block size for the file."
        },
        "childrenNum": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the number of children in the directory."
        },
        "fileId": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the file identifier."
        },
        "group": {
          "type": "string",
          "description": "Gets or sets the group owner."
        },
        "length": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the number of bytes in a file."
        },
        "modificationTime": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the modification time as ticks since the epoch."
        },
        "owner": {
          "type": "string",
          "description": "Gets or sets the user who is the owner."
        },
        "pathSuffix": {
          "type": "string",
          "description": "Gets or sets the path suffix."
        },
        "permission": {
          "type": "string",
          "description": "Gets or sets the permission represented as an string."
        },
        "replication": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the number of replications of a file."
        },
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the path object.",
          "enum": [
            "File",
            "Directory"
          ],
          "x-ms-enum": {
            "name": "FileType",
            "modelAsString": false
          }
        }
      },
      "description": "Data Lake Store file or directory information."
    },
    "FileInfoProperties": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Gets or sets the file unique identifier (as a GUID)."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the file name."
        },
        "length": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the number of bytes in a file."
        },
        "modificationTime": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the modification time as ticks since the epoch."
        },
        "creationTime": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the creation time as ticks since the epoch."
        },
        "expirationTime": {
          "type": "integer",
          "format": "int64",
          "description": "Gets or sets the expiration time, if any, as ticks since the epoch. If this is set to 0 or DateTime.MaxValue there is no expiration."
        }
      },
      "description": "Data Lake Store file information."
    },
    "FileStatuses": {
      "properties": {
        "FileStatus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileStatusProperties"
          },
          "description": "Gets or sets the object containing the list of properties of the files."
        }
      },
      "description": "Data Lake Store file status list information."
    },
    "FileStatusesResult": {
      "properties": {
        "FileStatuses": {
          "$ref": "#/definitions/FileStatuses",
          "description": "Gets or sets the object representing the list of file statuses."
        }
      },
      "description": "Data Lake Store filesystem file status list information response."
    },
    "FileStatusResult": {
      "properties": {
        "FileStatus": {
          "$ref": "#/definitions/FileStatusProperties",
          "description": "Gets or sets the file status object associated with the specified path."
        }
      },
      "description": "Data Lake Store filesystem file status information response."
    },
    "FileInfoResult": {
      "properties": {
        "FileInfo": {
          "$ref": "#/definitions/FileInfoProperties",
          "description": "Gets or sets the file information object associated with the specified file path."
        }
      },
      "description": "Data Lake Store filesystem file information response used with file expiration."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "header",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "adlsFilesystemDnsSuffixInPath": {
      "name": "adlsFileSystemDnsSuffix",
      "in": "path",
      "required": true,
      "type": "string",
      "default": "azuredatalakestore.net",
      "description": "Gets the URI used as the base for all cloud service requests."
    }
  }
}
