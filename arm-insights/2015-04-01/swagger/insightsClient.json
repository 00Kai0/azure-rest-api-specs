{
  "swagger": "2.0",
  "info": {
    "title": "InsightsClient",
    "version": "2015-04-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/providers/microsoft.insights/eventtypes/management/eventcategories": {
      "get": {
        "tags": [
          "EventCategories"
        ],
        "operationId": "EventCategories_List",
        "description": "The list of event categories.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get the list of event categories",
            "schema": {
              "$ref": "#/definitions/EventCategoryCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.insights/eventtypes/management/values": {
      "get": {
        "tags": [
          "Events"
        ],
        "operationId": "Events_List",
        "description": "The List Event Values operation lists the events.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The list of property names to be returned. Valid values are: authorization, channels, claims, correlationId, description, eventDataId, eventName, eventTimestamp, httpRequest, level, operationId, operationName, properties, resourceGroupName, resourceProviderName, resourceId, status, submissionTimestamp, subStatus, subscriptionId"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get a page of events",
            "schema": {
              "$ref": "#/definitions/EventDataCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/EventData"
      }
    },
    "/providers/microsoft.insights/eventtypes/management/values": {
      "get": {
        "tags": [
          "TenantEvents"
        ],
        "operationId": "TenantEvents_List",
        "description": "The list tenant event values operation lists the tenant events.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "name": "$select",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The list of property names to be returned. Valid values are: authorization, channels, claims, correlationId, description, eventDataId, eventName, eventTimestamp, httpRequest, level, operationId, operationName, properties, resourceGroupName, resourceProviderName, resourceId, status, submissionTimestamp, subStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get a page of tenant events",
            "schema": {
              "$ref": "#/definitions/EventDataCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/EventData"
      }
    },
    "/{resourceUri}/providers/microsoft.insights/metricDefinitions": {
      "get": {
        "tags": [
          "MetricDefinitions"
        ],
        "operationId": "MetricDefinitions_List",
        "description": "The List Metric Definitions operation lists the metric definitions for the resource.",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier of the target resource to get metrics for.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "api-version",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "2016-03-01",
            "description": "The api-version to send to the server"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get the list of metric definitions",
            "schema": {
              "$ref": "#/definitions/MetricDefinitionCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-odata": "#/definitions/MetricDefinition"
      }
    },
    "/{resourceUri}/providers/microsoft.insights/metrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "operationId": "Metrics_List",
        "description": "The List Metric operation lists the metric value sets for the resource metrics.",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier of the target resource to get metrics for.",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "2016-06-01",
            "description": "The api-version to send to the server"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get the list of metric values",
            "schema": {
              "$ref": "#/definitions/MetricCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-odata": "#/definitions/Metric"
      }
    },
    "/{resourceUri}/usages": {
      "get": {
        "tags": [
          "UsageMetrics"
        ],
        "operationId": "UsageMetrics_List",
        "description": "The List operation lists the usage metrics for the resource.",
        "parameters": [
          {
            "name": "resourceUri",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The resource identifier of the target resource to get usages for."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "2014-04-01",
            "description": "The api-version to send to the server"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The odata filter string to use in the query"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get the list of usage metric values",
            "schema": {
              "$ref": "#/definitions/UsageMetricCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-odata": "#/definitions/UsageMetric"
      }
    }
  },
  "definitions": {
    "LocalizableString": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "the invariant value."
        },
        "localizedValue": {
          "readOnly": true,
          "type": "string",
          "description": "the locale specific value."
        }
      },
      "description": "The localizable string class."
    },
    "EventCategoryCollection": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalizableString"
          },
          "description": "the list that includes the Azure event categories."
        }
      },
      "description": "Represents collection of event categories."
    },
    "SenderAuthorization": {
      "properties": {
        "action": {
          "readOnly": true,
          "type": "string",
          "description": "the Action."
        },
        "condition": {
          "readOnly": true,
          "type": "string",
          "description": "the condition."
        },
        "role": {
          "readOnly": true,
          "type": "string",
          "description": "the role."
        },
        "scope": {
          "readOnly": true,
          "type": "string",
          "description": "the scope."
        }
      },
      "description": "The authorization class."
    },
    "HttpRequestInfo": {
      "properties": {
        "clientRequestId": {
          "readOnly": true,
          "type": "string",
          "description": "the client request id."
        },
        "clientIpAddress": {
          "readOnly": true,
          "type": "string",
          "description": "the client Ip Address"
        },
        "method": {
          "readOnly": true,
          "type": "string",
          "description": "the method."
        },
        "uri": {
          "readOnly": true,
          "type": "string",
          "description": "the Uri."
        }
      },
      "description": "The HttpInfo class."
    },
    "EventData": {
      "required": [ "channels", "level", "eventTimestamp", "submissionTimestamp" ],
      "properties": {
        "authorization": {
          "readOnly": true,
          "$ref": "#/definitions/SenderAuthorization",
          "description": "the authorization.This is the authorization used by the user who has performed the operation that led to this event."
        },
        "channels": {
          "type": "string",
          "description": "the event channels.The regular event logs, that you see in the Azure Management Portals, flow through the 'Operation' channel.",
          "enum": [
            "Admin",
            "Operation",
            "Debug",
            "Analytics"
          ],
          "x-ms-enum": {
            "name": "EventChannels",
            "modelAsString": false
          }
        },
        "claims": {
          "readOnly": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "key value pairs to identify ARM permissions"
        },
        "caller": {
          "readOnly": true,
          "type": "string",
          "description": "the caller"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "the description of the event."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "the Id"
        },
        "eventDataId": {
          "readOnly": true,
          "type": "string",
          "description": "the event data Id.This is a unique identifier for an event."
        },
        "correlationId": {
          "readOnly": true,
          "type": "string",
          "description": "the correlation Id.The correlation Id is shared among the events that belong to the same deployment."
        },
        "eventName": {
          "readOnly": true,
          "$ref": "#/definitions/LocalizableString",
          "description": "the event name.This value should not be confused with OperationName.For practical purposes, OperationName might be more appealing to end users."
        },
        "category": {
          "readOnly": true,
          "$ref": "#/definitions/LocalizableString",
          "description": "the event category."
        },
        "httpRequest": {
          "readOnly": true,
          "$ref": "#/definitions/HttpRequestInfo",
          "description": "the HTTP request info.The client IP address of the user who initiated the event is captured as part of the HTTP request info."
        },
        "level": {
          "type": "string",
          "description": "the event level",
          "enum": [
            "Critical",
            "Error",
            "Warning",
            "Informational",
            "Verbose"
          ],
          "x-ms-enum": {
            "name": "EventLevel",
            "modelAsString": false
          }
        },
        "resourceGroupName": {
          "readOnly": true,
          "externalDocs": {
            "url": "http://msdn.microsoft.com/en-us/library/azure/dn790546.aspx"
          },
          "type": "string",
          "description": "the resource group name."
        },
        "resourceProviderName": {
          "readOnly": true,
          "$ref": "#/definitions/LocalizableString",
          "externalDocs": {
            "url": "http://msdn.microsoft.com/en-us/library/azure/dn790572.aspx"
          },
          "description": "the resource provider name."
        },
        "resourceId": {
          "readOnly": true,
          "externalDocs": {
            "url": "http://msdn.microsoft.com/en-us/library/azure/dn790569.aspx"
          },
          "type": "string",
          "description": "the resource uri"
        },
        "resourceType": {
          "readOnly": true,
          "$ref": "#/definitions/LocalizableString",
          "externalDocs": {
            "url": "http://msdn.microsoft.com/en-us/library/azure/dn790569.aspx"
          },
          "description": "the resource type"
        },
        "operationId": {
          "readOnly": true,
          "type": "string",
          "description": "the operation id. This value should not be confused with EventName."
        },
        "operationName": {
          "readOnly": true,
          "$ref": "#/definitions/LocalizableString",
          "description": "the operation name."
        },
        "properties": {
          "readOnly": true,
          "x-ms-client-flatten": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "the property bag"
        },
        "status": {
          "readOnly": true,
          "$ref": "#/definitions/LocalizableString",
          "description": "the event status.Some typical values are: Started, Succeeded, Failed"
        },
        "subStatus": {
          "readOnly": true,
          "$ref": "#/definitions/LocalizableString",
          "description": "the event sub status.Most of the time, when included, this captures the HTTP status code."
        },
        "eventTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "the occurrence time of event"
        },
        "submissionTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "the event submission time.This value should not be confused eventTimestamp. As there might be a delay between the occurence time of the event, and the time that the event is submitted to the Azure logging infrastructure."
        },
        "subscriptionId": {
          "readOnly": true,
          "type": "string",
          "description": "the Azure subscription Id"
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "the Azure tenant Id"
        }
      },
      "description": "The Azure event log entries are of type EventData"
    },
    "EventDataCollection": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventData"
          },
          "description": "this list that includes the Azure audit logs."
        }
      },
      "description": "Represents collection of events."
    },
    "MetricAvailability": {
      "properties": {
        "timeGrain": {
          "readOnly": true,
          "type": "string",
          "format": "duration",
          "description": "the time grain specifies the aggregation interval for the metric."
        },
        "retention": {
          "readOnly": true,
          "type": "string",
          "format": "duration",
          "description": "the retention period for the metric at the specified timegrain."
        }
      },
      "description": "Metric availability specifies the time grain (aggregation interval or frequency) and the retention period for that time grain."
    },
    "Unit": {
      "readOnly": true,
      "type": "string",
      "description": "the unit of the metric.",
      "enum": [
        "Count",
        "Bytes",
        "Seconds",
        "CountPerSecond",
        "BytesPerSecond",
        "Percent",
        "MilliSeconds"
      ],
      "x-ms-enum": {
        "name": "Unit",
        "modelAsString": false
      }
    },
    "MetricDefinition": {
      "properties": {
        "resourceId": {
          "readOnly": true,
          "type": "string",
          "description": "the resource identifier of the resource that has emitted the metric."
        },
        "name": {
          "readOnly": true,
          "$ref": "#/definitions/LocalizableString",
          "description": "the name and the display name of the metric."
        },
        "unit": {
          "readOnly": true,
          "$ref": "#/definitions/Unit",
          "description": "the unit of the metric."
        },
        "primaryAggregationType": {
          "readOnly": true,
          "type": "string",
          "description": "the primary aggregation type value defining how to use the values for display.",
          "enum": [
            "None",
            "Average",
            "Count",
            "Minimum",
            "Maximum",
            "Total"
          ],
          "x-ms-enum": {
            "name": "AggregationType",
            "modelAsString": false
          }
        },
        "metricAvailabilities": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricAvailability"
          },
          "description": "the collection of what aggregation intervals are available to be queried."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "the resource identifier of the metric definition."
        }
      },
      "description": "Metric definition class specifies the metadata for a metric."
    },
    "MetricDefinitionCollection": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricDefinition"
          },
          "description": "the values for the metric definitions."
        }
      },
      "description": "Represents collection of metric definitions."
    },
    "MetricValue": {
      "required": [ "timestamp" ],
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "the timestamp for the metric value."
        },
        "average": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "the average value in the time range."
        },
        "minimum": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "the least value in the time range."
        },
        "maximum": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "the greatest value in the time range."
        },
        "total": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "the sum of all of the values in the time range."
        },
        "count": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "the number of samples in the time range. Can be used to determine the number of values that contributed to the average value."
        }
      },
      "description": "Represents a metric value."
    },
    "Metric": {
      "required": [ "name", "unit", "data" ],
      "properties": {
        "name": {
          "$ref": "#/definitions/LocalizableString",
          "description": "the name and the display name of the metric."
        },
        "unit": {
          "$ref": "#/definitions/Unit",
          "description": "the unit of the metric."
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricValue"
          },
          "description": "Array of data points representing the metric values."
        }
      },
      "description": "A metric value set represents a set of metric values in a time period."
    },
    "MetricCollection": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metric"
          },
          "description": "the value of the collection."
        }
      },
      "description": "The collection of metric value sets."
    },
    "UsageMetric": {
      "properties": {
        "name": {
          "readOnly": true,
          "$ref": "#/definitions/LocalizableString",
          "description": "the usage metric name and display name."
        },
        "currentValue": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "the current value for the usage metric."
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "the id for the usage metric."
        },
        "limit": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "the quota limit the usage metric."
        },
        "unit": {
          "readOnly": true,
          "type": "string",
          "description": "the unit for the usage metric."
        },
        "nextResetTime": {
          "readOnly": true,
          "type": "string",
          "description": "the next reset time for the current value."
        },
        "quotaPeriod": {
          "readOnly": true,
          "type": "integer",
          "format": "int64",
          "description": "the amount of time it takes to reset the value."
        }
      },
      "description": "Usage Metric data."
    },
    "UsageMetricCollection": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageMetric"
          },
          "description": "the usage values."
        }
      },
      "description": "Represents collection of usage metrics."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    }
  }
}