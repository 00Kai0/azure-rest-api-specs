{
  "swagger": "2.0",
  "info": {
    "title": "InsightsManagementClient",
    "version": "2015-04-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/alertrules/{ruleName}/incidents/{incidentName}": {
      "get": {
        "description": "Gets an incident associated to an alert rule",
        "tags": [
          "AlertRuleIncidents"
        ],
        "operationId": "AlertRuleIncidents_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RuleNameParameter"
          },
          {
            "name": "incidentName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the incident to retrieve."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for one alert rule related incident",
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/alertrules/{ruleName}/incidents": {
      "get": {
        "description": "Gets a list of incidents associated to an alert rule",
        "tags": [
          "AlertRuleIncidents"
        ],
        "operationId": "AlertRuleIncidents_ListByAlertRule",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for a list of alert rule related incidents",
            "schema": {
              "$ref": "#/definitions/IncidentListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/alertrules/{ruleName}": {
      "put": {
        "description": "Creates or updates an alert rule",
        "tags": [
          "AlertRules"
        ],
        "operationId": "AlertRules_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RuleCreateOrUpdateParameters"
            },
            "description": "The parameters of the rule to create or update."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to create or update an alert rule",
            "schema": {
              "$ref": "#/definitions/RuleResource"
            }
          },
          "201": {
            "description": "Created alert rule",
            "schema": {
              "$ref": "#/definitions/RuleResource"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes an alert rule",
        "tags": [
          "AlertRules"
        ],
        "operationId": "AlertRules_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No content: the request was successful, but the response is empty"
          },
          "200": {
            "description": "Successful request to delete an alert rule"
          }
        }
      },
      "get": {
        "description": "Gets an alert rule",
        "tags": [
          "AlertRules"
        ],
        "operationId": "AlertRules_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get an alert rule",
            "schema": {
              "$ref": "#/definitions/RuleResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/alertrules": {
      "get": {
        "tags": [
          "AlertRules"
        ],
        "operationId": "AlertRules_ListByResourceGroup",
        "description": "List the alert rules within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for a list of alert rules",
            "schema": {
              "$ref": "#/definitions/RuleResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-odata": "#/definitions/RuleResource"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/autoscalesettings": {
      "get": {
        "description": "Lists the autoscale settings for a resource group",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_List",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for a list of autoscale settings",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResourceCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "x-ms-odata": "#/definitions/AutoscaleSettingResource"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/autoscalesettings/{autoscaleSettingName}": {
      "put": {
        "description": "Creates or updates and autoscale setting",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleSettingNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingCreateOrUpdateParameters"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/AutoscaleApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to create or update an autoscale setting",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            }
          },
          "201": {
            "description": "Created autoscale setting",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes and autoscale setting",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleSettingNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to delete an autoscale setting"
          },
          "204": {
            "description": "No content: Successful request to delete an autoscale setting, but the response is intentionally empty"
          }
        }
      },
      "get": {
        "description": "Gets an autoscale setting",
        "tags": [
          "AutoscaleSettings"
        ],
        "operationId": "AutoscaleSettings_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleSettingNameParameter"
          },
          {
            "$ref": "#/parameters/AutoscaleApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get one autoscale setting",
            "schema": {
              "$ref": "#/definitions/AutoscaleSettingResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.insights/logprofiles/{name}": {
      "delete": {
        "tags": [
          "LogProfiles"
        ],
        "operationId": "LogProfiles_Delete",
        "description": "Deletes the log profile.",
        "parameters": [
          {
            "$ref": "#/parameters/LogProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to delete a log profile"
          }
        }
      },
      "get": {
        "tags": [
          "LogProfiles"
        ],
        "operationId": "LogProfiles_Get",
        "description": "Gets the log profile.",
        "parameters": [
          {
            "$ref": "#/parameters/LogProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get one log profile",
            "schema": {
              "$ref": "#/definitions/LogProfileResource"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LogProfiles"
        ],
        "operationId": "LogProfiles_CreateOrUpdate",
        "description": "Create or update the log profile.",
        "parameters": [
          {
            "$ref": "#/parameters/LogProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogProfileCreateOrUpdateParameters"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to create or update a log profile",
            "schema": {
              "$ref": "#/definitions/LogProfileResource"
            }
          },
          "201": {
            "description": "Created log profile",
            "schema": {
              "$ref": "#/definitions/LogProfileResource"
            }
          },
          "202": {
            "description": "Accepted request to create or update log profile",
            "schema": {
              "$ref": "#/definitions/LogProfileResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.insights/logprofiles": {
      "get": {
        "tags": [
          "LogProfiles"
        ],
        "operationId": "LogProfiles_List",
        "description": "List the log profiles.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to list log profiles",
            "schema": {
              "$ref": "#/definitions/LogProfileCollection"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/{resourceUri}/providers/microsoft.insights/diagnosticSettings/service": {
      "get": {
        "tags": [
          "ServiceDiagnosticSettings"
        ],
        "operationId": "ServiceDiagnosticSettings_Get",
        "description": "Gets the active diagnostic settings. To get the diagnostic settings being applied, use GetStatus.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticSettingsApiVersionParameter"          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get one service diagnostic setting",
            "schema": {
              "$ref": "#/definitions/ServiceDiagnosticSettingsResource"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ServiceDiagnosticSettings"
        ],
        "operationId": "ServiceDiagnosticSettings_Put",
        "description": "Create or update new diagnostic settings for the specified resource.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/DiagnosticSettingsApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceDiagnosticSettingsPutParameters"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created service diagnostic setting",
            "schema": {
              "$ref": "#/definitions/ServiceDiagnosticSettingsResource"
            }
          },
          "200": {
            "description": "Successful request to create a service diagnostic setting",
            "schema": {
              "$ref": "#/definitions/ServiceDiagnosticSettingsResource"
            }
          },
          "202": {
            "description": "Accepted request to create a service diagnostic setting",
            "schema": {
              "$ref": "#/definitions/ServiceDiagnosticSettingsResource"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Incident": {
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Incident name."
        },
        "ruleName": {
          "readOnly": true,
          "type": "string",
          "description": "Rule name that is associated with the incident."
        },
        "isActive": {
          "readOnly": true,
          "type": "boolean",
          "description": "A boolean to indicate whether the incident is active or resolved."
        },
        "activatedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time at which the incident was activated."
        },
        "resolvedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time at which the incident was resolved. If null, it means the incident is still active."
        }
      },
      "description": "An alert incident indicates the activation status of an alert rule."
    },
    "IncidentListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Incident"
          },
          "description": "the incident collection."
        }
      },
      "description": "The List incidents operation response."
    },
    "RuleCondition": {
      "type": "object",
      "discriminator": "odata.type",
      "properties": {
        "odata.type": {
          "type": "string"
        }
      },
      "required": [ "odata.type" ],
      "description": "The condition that results in the alert rule being activated."
    },
    "RuleDataSource": {
      "type": "object",
      "discriminator": "odata.type",
      "properties": {
        "odata.type": {
          "type": "string"
        }
      },
      "required": [ "odata.type" ],
      "description": "The resource from which the rule collects its data."
    },
    "RuleMetricDataSource": {
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RuleDataSource"
        }
      ],
      "properties": {
        "resourceUri": {
           "type": "string",
           "description": "the resource identifier of the resource the rule monitors."
        },
        "metricName": {
          "type": "string",
          "description": "the name of the metric that defines what the rule monitors."
        }
      },
      "description": "A rule metric data source."
    },
    "RuleManagementEventClaimsDataSource": {
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "the email address."
        }
      },
      "description": "The claims for a rule management event data source."
    },
    "RuleManagementEventDataSource": {
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleManagementEventDataSource",
      "type": "object",
      "allOf": [
        {
          "$ref" : "#/definitions/RuleDataSource"
        }
      ],
      "properties": {
        "eventName": {
          "type": "string",
          "description": "the event name."
        },
        "eventSource": {
          "type": "string",
          "description": "the event source."
        },
        "level": {
          "type": "string",
          "description": "the level."
        },
        "operationName": {
          "type": "string",
          "description": "the operation name."
        },
        "resourceGroupName": {
          "type": "string",
          "description": "the resource group name."
        },
        "resourceProviderName": {
          "type": "string",
          "description": "the resource provider name."
        },
        "resourceUri": {
          "type": "string",
          "description": "the resource uri."
        },
        "status": {
          "type": "string",
          "description": "the status."
        },
        "subStatus": {
          "type": "string",
          "description": "the substatus."
        },
        "claims": {
          "$ref": "#/definitions/RuleManagementEventClaimsDataSource",
          "description": "the claims."
        }
      },
      "description": "A rule management event data source."
    },
    "ConditionOperator": {
      "type": "string",
      "enum": [
        "GreaterThan",
        "GreaterThanOrEqual",
        "LessThan",
        "LessThanOrEqual"
      ],
      "x-ms-enum": {
        "name": "ConditionOperator",
        "modelAsString": false
      }
    },
    "TimeAggregationOperator": {
       "type": "string",
       "enum": [
         "Average",
         "Minimum",
         "Maximum",
         "Total",
         "Last"
       ],
      "x-ms-enum": {
        "name": "TimeAggregationOperator",
        "modelAsString": false
      }
    },
    "ThresholdRuleCondition": {
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
      "type": "object",
      "allOf": [
        {
          "$ref" : "#/definitions/RuleCondition"
        }
      ],
      "required": [ "threshold", "operator" ],
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/RuleDataSource",
          "description": "the resource from which the rule collects its data."
        },
        "operator": {
          "$ref": "#/definitions/ConditionOperator",
          "description": "the operator used to compare the data and the threshold."
        },
        "threshold": {
          "type": "number",
          "format": "double",
          "description": "the threshold value that activates the alert."
        },
        "windowSize": {
          "type": "string",
          "format": "duration",
          "description": "the period of time that is used to monitor alert activity based on the threshold. Must be between 5 minutes and 1 day."
        },
        "timeAggregation": {
          "$ref": "#/definitions/TimeAggregationOperator",
          "description": "the time aggregation operator. How the data that is collected should be combined over time. The default value is the PrimaryAggregationType of the Metric."
        }
      },
      "description": "A rule condition based on a metric crossing a threshold."
    },
    "LocationThresholdRuleCondition": {
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition",
      "type": "object",
      "allOf": [
        {
           "$ref" : "#/definitions/RuleCondition"
        }
      ],
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/RuleDataSource",
          "description": "the resource from which the rule collects its data."
        },
        "windowSize": {
          "type": "string",
          "format": "duration",
          "description": "the period of time that is used to monitor alert activity based on the threshold. Must be between 5 minutes and 1 day."
        },
        "failedLocationCount": {
          "type": "integer",
          "format": "int32",
          "description": "the number of locations that must fail to activate the alert."
        }
      },
      "required": [ "failedLocationCount" ],
      "description": "A rule condition based on a certain number of locations failing."
    },
    "ManagementEventAggregationCondition": {
      "properties": {
        "operator": {
           "$ref": "#/definitions/ConditionOperator",
           "description": "the condition operator."
        },
        "threshold": {
           "type": "number",
           "format": "double",
           "description": "the condition threshold."
        },
        "windowSize": {
          "type": "string",
          "format": "duration",
          "description": "the time period over which the alert rule is evaluated."
        }
      },
      "description": "A management event aggregation condition."
    },
    "ManagementEventRuleCondition": {
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.ManagementEventRuleCondition",
      "type": "object",
      "allOf": [
        {
           "$ref" : "#/definitions/RuleCondition"
        }
      ],
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/RuleDataSource",
          "description": "the resource from which the rule collects its data."
        },
        "aggregation": {
          "$ref": "#/definitions/ManagementEventAggregationCondition",
          "description": "the aggregation condition."
        }
      },
      "description": "A management event rule condition."
    },
    "RuleAction": {
      "type": "object",
      "discriminator": "odata.type",
      "properties": {
        "odata.type": {
          "type": "string"
        }
      },
      "required": [ "odata.type" ],
      "description": "The action that is performed when the alert rule becomes active, and when an alert condition is resolved."
    },
    "RuleEmailAction": {
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RuleAction"
        }
      ],
      "properties": {
        "sendToServiceOwners": {
            "type": "boolean",
            "description": "the flag to send e-mails to the service owners. Whether the administrators (service and co-adiminstrators) of the service should be notified when the alert is activated."
        },
        "customEmails": {
            "type": "array",
            "items": {
              "type" : "string"
            },
            "description": "the list of administrator's custom email addresses notifiy of the activation of the alert."
        }
      },
      "description": "Specifies the action to send email when the rule condition is evaluated."
    },
    "RuleWebhookAction": {
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleWebhookAction",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/RuleAction"
        }
      ],
      "properties": {
         "serviceUri": {
           "type": "string",
           "description": "the service uri to Post the notitication."
         },
         "properties": {
           "x-ms-client-flatten": true,
           "type": "object",
           "additionalProperties": {
              "type": "string"
           },
           "description": "the dictionary of custom properties to include with the post operation."
         }
      },
      "description": "Specifies the action to post to service when the rule condition is evaluated."
    },
    "Rule": {
      "properties": {
        "name": {
          "type": "string",
          "description": "the name of the alert rule."
        },
        "description": {
          "type": "string",
          "description": "the description of the alert rule that will be included in the alert email."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "the flag that indicates whether the alert rule is enabled."
        },
        "condition": {
          "$ref": "#/definitions/RuleCondition",
          "description": "the condition that results in the alert rule being activated."
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleAction"
          },
          "description": "the actions that are performed when the alert rule becomes active, and when an alert condition is resolved."
        },
        "lastUpdatedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Last time the rule was updated."
        }
      },
      "required": [ "isEnabled" ],
      "description": "An alert rule."
    },
    "RuleCreateOrUpdateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "the location of the rule."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "the tags of the rule."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/Rule",
          "description": "the rule to create or update."
        }
      },
      "description": "Parameters supplied to the Create or Update Rule operation."
    },
    "Resource": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource Id"
        },
        "name": {
          "type": "string",
          "description": "Azure resource name"
        },
        "type": {
          "type": "string",
          "description": "Azure resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true,
      "description": "An azure resource object"
    },
    "RuleResource": {
      "type": "object",
      "allOf": [
          {
            "$ref": "#/definitions/Resource"
          }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/Rule"
        }
      },
      "description": "The alert rule resource."
    },
    "RuleResourceCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleResource"
          },
          "description": "the values for the alert rule resources."
        }
      },
      "description": "Represents a collection of alert rule resources."
    },
    "ScaleCapacity": {
      "properties": {
        "minimum": {
          "type": "string",
          "description": "the minimum number of instances for the resource."
        },
        "maximum": {
          "type": "string",
          "description": "the maximum number of instances for the resource. The actual maximum number may be limited by the cores that are available."
        },
        "default": {
          "type": "string",
          "description": "the number of instances that will be set if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default."
        }
      },
      "description": "The number of instances that can be used during this profile."
    },
    "MetricTrigger": {
      "properties": {
        "metricName": {
          "type": "string",
          "description": "the name of the metric that defines what the rule monitors."
        },
        "metricResourceUri": {
          "type": "string",
          "description": "the resource identifier of the resource the rule monitors."
        },
        "timeGrain": {
          "type": "string",
          "format": "duration",
          "description": "the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for the metric. Must be between 12 hours and 1 minute."
        },
        "statistic": {
          "type": "string",
          "description": "the metric statistic type.How the metrics from multiple instances are combined.",
          "enum": [
            "Average",
            "Min",
            "Max",
            "Sum"
          ],
          "x-ms-enum": {
            "name": "MetricStatisticType",
            "modelAsString": false
          }
        },
        "timeWindow": {
          "type": "string",
          "format": "duration",
          "description": "the range of time in which instance data is collected. This value must be greater than the delay in metric collection, which can vary from resource-to-resource. Must be between 12 hours and 5 minutes."
        },
        "timeAggregation": {
          "type": "string",
          "description": "time aggregation type.How the data that is collected should be combined over time. The default value is Average.",
          "enum": [
            "Average",
            "Minimum",
            "Maximum",
            "Total",
            "Count"
          ],
          "x-ms-enum": {
            "name": "TimeAggregationType",
            "modelAsString": false
          }
        },
        "operator": {
          "type": "string",
          "description": "the operator that is used to compare the metric data and the threshold.",
          "enum": [
            "Equals",
            "NotEquals",
            "GreaterThan",
            "GreaterThanOrEqual",
            "LessThan",
            "LessThanOrEqual"
          ],
          "x-ms-enum": {
            "name": "ComparisonOperationType",
            "modelAsString": false
          }
        },
        "threshold": {
          "type": "number",
          "format": "double",
          "description": "the threshold of the metric that triggers the scale action."
        }
      },
      "description": "The trigger that results in a scaling action."
    },
    "ScaleAction": {
      "properties": {
        "direction": {
          "type": "string",
          "description": "the scale direction. Whether the scaling action increases or decreases the number of instances.",
          "enum": [
            "None",
            "Increase",
            "Decrease"
          ],
          "x-ms-enum": {
            "name": "ScaleDirection",
            "modelAsString": false
          }
        },
        "type": {
          "type": "string",
          "description": "the type of action that should occur, this must be set to ChangeCount.",
          "enum": [
            "ChangeSize",
            "ChangeCount",
            "PercentChangeCount",
            "ExactCount"
          ],
          "x-ms-enum": {
            "name": "ScaleType",
            "modelAsString": false
          }
        },
        "value": {
          "type": "string",
          "description": "the number of instances that are involved in the scaling action. This value must be 1 or greater. The default value is 1."
        },
        "cooldown": {
          "type": "string",
          "format": "duration",
          "description": "the amount of time to wait since the last scaling action before this action occurs. Must be between 1 week and 1 minute."
        }
      },
      "description": "The parameters for the scaling action."
    },
    "ScaleRule": {
      "properties": {
        "metricTrigger": {
          "$ref": "#/definitions/MetricTrigger",
          "description": "the trigger that results in a scaling action."
        },
        "scaleAction": {
          "$ref": "#/definitions/ScaleAction",
          "description": "the parameters for the scaling action."
        }
      },
      "description": "A rule that provide the triggers and parameters for the scaling action."
    },
    "TimeWindow": {
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "the time zone of the start and end times for the profile."
        },
        "start": {
          "type": "string",
          "format": "date-time",
          "description": "the start time for the profile."
        },
        "end": {
          "type": "string",
          "format": "date-time",
          "description": "the end time for the profile."
        }
      },
      "required": [ "start", "end" ],
      "description": "A specific date for the profile. This element is not used if the Recurrence element is used."
    },
    "RecurrentSchedule": {
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "the time zone for the hours of the profile."
        },
        "days": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the collection of days that the profile takes effect on."
        },
        "hours": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "the collection of hours at which the profile takes effect at."
        },
        "minutes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "the collection of minutes at which the profile takes effect at."
        }
      },
      "description": "The scheduling constraints for when the profile begins."
    },
    "Recurrence": {
      "properties": {
        "frequency": {
          "type": "string",
          "description": "the recurrence frequency. How often the schedule profile should take effect. This value must be Week, meaning each week will have the same set of profiles.",
          "enum": [
            "None",
            "Second",
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Year"
          ],
          "x-ms-enum": {
            "name": "RecurrenceFrequency",
            "modelAsString": false
          }
        },
        "schedule": {
          "$ref": "#/definitions/RecurrentSchedule",
          "description": "the scheduling constraints for when the profile begins."
        }
      },
      "description": "The repeating times at which this profile begins. This element is not used if the FixedDate element is used."
    },
    "AutoscaleProfile": {
      "properties": {
        "name": {
          "type": "string",
          "description": "the name of the profile."
        },
        "capacity": {
          "$ref": "#/definitions/ScaleCapacity",
          "description": "the number of instances that can be used during this profile."
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleRule"
          },
          "description": "the collection of rules that provide the triggers and parameters for the scaling action. A maximum of 10 rules can be specified."
        },
        "fixedDate": {
          "$ref": "#/definitions/TimeWindow",
          "description": "the specific date for the profile. This element is not used if the Recurrence element is used."
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence",
          "description": "the repeating times at which this profile begins. This element is not used if the FixedDate element is used."
        }
      },
      "description": "Autoscale profile."
    },
    "EmailNotification": {
      "properties": {
        "sendToSubscriptionAdministrator": {
          "type": "boolean",
          "description": "a value indicating whether to send email to subscription administrator."
        },
        "sendToSubscriptionCoAdministrators": {
          "type": "boolean",
          "description": "a value indicating whether to send email to subscription co-administrators."
        },
        "customEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the custom email list."
        }
      },
      "description": "Email notification."
    },
    "WebhookNotification": {
      "properties": {
        "serviceUri": {
          "type": "string",
          "description": "the service address to receive the notification."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "a property bag of settings."
        }
      },
      "description": "Webhook notification."
    },
    "AutoscaleNotification": {
      "properties": {
        "operation": {
          "type": "string",
          "description": "the operation associated with the notification."
        },
        "email": {
          "$ref": "#/definitions/EmailNotification",
          "description": "the email notification."
        },
        "webhooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebhookNotification"
          },
          "description": "the collection of webhook notifications."
        }
      },
      "description": "Autoscale notification."
    },
    "AutoscaleSetting": {
      "properties": {
        "profiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoscaleProfile"
          },
          "description": "the collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified."
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoscaleNotification"
          },
          "description": "the collection of notifications."
        },
        "enabled": {
          "type": "boolean",
          "description": "the enabled flag.Specifies whether automatic scaling is enabled for the resource."
        },
        "name": {
          "type": "string",
          "description": "the name of the autoscale setting."
        },
        "targetResourceUri": {
          "type": "string",
          "description": "the resource identifier of the resource that the autoscale setting should be added to."
        }
      },
      "description": "A setting that contains all of the configuration for the automatic scaling of a resource."
    },
    "AutoscaleSettingResource": {
      "type": "object",
      "allOf": [
        {
           "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AutoscaleSetting"
        }
      },
      "description": "The autoscale setting resource."
    },
    "AutoscaleSettingResourceCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoscaleSettingResource"
          },
          "description": "the values for the autoscale setting resources."
        }
      },
      "description": "Represents a collection of autoscale setting resources."
    },
    "AutoscaleSettingCreateOrUpdateParameters": {
      "properties": {
        "location": {
          "type": "string",
          "description": "the location of the setting."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "the tags of the rule."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AutoscaleSetting",
          "description": "the setting to create or update."
        }
      },
      "description": "Parameters supplied to the Create or Update autoscale setting operation."
    },
    "RetentionPolicy": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "a value indicating whether the retention policy is enabled."
        },
        "days": {
          "type": "integer",
          "format": "int32",
          "description": "the number of days for the retention."
        }
      },
      "required": [ "enabled", "days" ],
      "description": "Part of MultiTenantDiagnosticSettings. Child of MetricSettings. Specifies the retention policy for the specific metric."
    },
    "LogProfileCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LogProfile",
          "description": "The properties envelope to create a Log Profile."
        }
      },
      "description": "Paramters to create a new Log Profile"
    },
    "LogProfile": {
      "properties": {
        "storageAccountId": {
          "type": "string",
          "description": "the resource id of the storage account."
        },
        "serviceBusRuleId": {
          "type": "string",
          "description": "the resource id of the service bus rule."
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "the locations."
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": " the categories."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "the retention policy for this log."
        }
      },
      "description": "The log profile."
    },
    "LogProfileResource": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
       "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LogProfile"
        }
      },
      "description": "The log profile resource."
    },
    "LogProfileCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogProfileResource"
          },
          "description": "the values of the log profiles."
        }
      },
      "description": "Represents a collection of log profiles."
    },
    "MetricSettings": {
      "properties": {
        "timeGrain": {
          "type": "string",
          "format": "duration",
          "description": "the timegrain of the metric."
        },
        "enabled": {
          "type": "boolean",
          "description": "a value indicating whether this timegrain is enabled."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "the retention policy for this timegrain."
        }
      },
      "required": [ "enabled", "timeGrain" ],
      "description": "Part of MultiTenantDiagnosticSettings. Specifies the settings for a particular metric."
    },
    "LogSettings": {
      "properties": {
        "category": {
          "type": "string",
          "description": "the name of the logs to which this setting is applied."
        },
        "enabled": {
          "type": "boolean",
          "description": "a value indicating whether this log is enabled."
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "the retention policy for this log."
        }
      },
      "required": [ "enabled" ],
      "description": "Part of MultiTenantDiagnosticSettings. Specifies the settings for a particular log."
    },
    "ServiceDiagnosticSettings": {
      "properties": {
        "storageAccountId": {
          "type": "string",
          "description": "the resource id of the storage account."
        },
        "serviceBusRuleId": {
          "type": "string",
          "description": "the id of the service bus rule."
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSettings"
          },
          "description": "the list of metrics."
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogSettings"
          },
          "description": "the list of logs."
        },
        "workspaceId": {
          "type": "string",
          "description": "the OMS workspace Id"
        }
      },
      "description": "The diagnostic settings for service."
    },
    "ServiceDiagnosticSettingsResource": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServiceDiagnosticSettings"
        }
      },
      "description": "Description of a service diagnostic setting"
    },
    "ServiceDiagnosticSettingsPutParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServiceDiagnosticSettings",
          "description": "the public configuration settings."
        }
      },
      "description": "Parameters supplied to the Create or Update service configuration."
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [ "2016-03-01" ],
      "description": "Client Api Version."
    },
    "AutoscaleApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [ "2015-04-01" ],
      "description": "The api-version to send to the server",
      "x-ms-parameter-location": "method"
    },
    "DiagnosticSettingsApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [ "2015-07-01" ],
      "description": "The api-version to send to the server",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "RuleNameParameter": {
      "name": "ruleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the rule.",
      "x-ms-parameter-location": "method"
    },
    "FilterParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "The filter to apply on the operation.",
      "x-ms-parameter-location": "method"
    },
    "ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The identifier of the resource.",
      "x-ms-parameter-location": "method"
    },
    "AutoscaleSettingNameParameter": {
      "name": "autoscaleSettingName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The autoscale setting name.",
      "x-ms-parameter-location": "method"
    },
    "LogProfileNameParameter": {
      "name": "name",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the log profile.",
      "x-ms-parameter-location": "method"
    }
  }
}