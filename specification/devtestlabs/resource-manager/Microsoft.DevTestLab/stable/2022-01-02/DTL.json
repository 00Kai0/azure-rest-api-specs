{
  "swagger": "2.0",
  "info": {
    "title": "Dynamics 365 Business Central",
    "description": "Business Central Standard APIs",
    "version": "1.0.0"
  },
  "host": "api.businesscentral.dynamics.com",
  "basePath": "/v1.0/api/v1.0",
  "schemes": [
    "https"
  ],
  "paths": {
    "/companies": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "Returns a list of companies",
        "operationId": "getCompanies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "systemVersion",
                "name",
                "displayName",
                "businessProfileId"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of companies",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/company"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companies({company_id})": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "Retrieve the properties and relationships of an company object for Dynamics 365 Business Central.",
        "operationId": "getCompanyById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "systemVersion",
                "name",
                "displayName",
                "businessProfileId"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested company",
            "schema": {
              "$ref": "#/definitions/company"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/items": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Returns a list of items",
        "operationId": "getItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "picture",
                "defaultDimensions",
                "itemCategory"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "displayName",
                "type",
                "itemCategoryId",
                "itemCategoryCode",
                "blocked",
                "baseUnitOfMeasureId",
                "baseUnitOfMeasure",
                "gtin",
                "inventory",
                "unitPrice",
                "priceIncludesTax",
                "unitCost",
                "taxGroupId",
                "taxGroupCode",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of items",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/item"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "item"
        ],
        "summary": "Creates a item in Dynamics 365 Business Central",
        "operationId": "postItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the item entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the item entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the item entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "type": {
                  "description": "The type property for the item entity",
                  "type": "string"
                },
                "itemCategoryId": {
                  "format": "uuid",
                  "description": "The itemCategoryId property for the item entity",
                  "type": "string"
                },
                "itemCategoryCode": {
                  "description": "The itemCategoryCode property for the item entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "blocked": {
                  "description": "The blocked property for the item entity",
                  "type": "boolean"
                },
                "baseUnitOfMeasureId": {
                  "format": "uuid",
                  "description": "The baseUnitOfMeasureId property for the item entity",
                  "type": "string"
                },
                "baseUnitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "gtin": {
                  "description": "The gtin property for the item entity",
                  "maxLength": 14,
                  "type": "string"
                },
                "inventory": {
                  "format": "decimal",
                  "description": "The inventory property for the item entity",
                  "type": "number"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the item entity",
                  "type": "number"
                },
                "priceIncludesTax": {
                  "description": "The priceIncludesTax property for the item entity",
                  "type": "boolean"
                },
                "unitCost": {
                  "format": "decimal",
                  "description": "The unitCost property for the item entity",
                  "type": "number"
                },
                "taxGroupId": {
                  "format": "uuid",
                  "description": "The taxGroupId property for the item entity",
                  "type": "string"
                },
                "taxGroupCode": {
                  "description": "The taxGroupCode property for the item entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the item entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new itemhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/item"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/items({item_id})": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Retrieve the properties and relationships of an item object for Dynamics 365 Business Central.",
        "operationId": "getItemById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "picture",
                "defaultDimensions",
                "itemCategory"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "displayName",
                "type",
                "itemCategoryId",
                "itemCategoryCode",
                "blocked",
                "baseUnitOfMeasureId",
                "baseUnitOfMeasure",
                "gtin",
                "inventory",
                "unitPrice",
                "priceIncludesTax",
                "unitCost",
                "taxGroupId",
                "taxGroupCode",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested item",
            "schema": {
              "$ref": "#/definitions/item"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "item"
        ],
        "summary": "Delete an item in Dynamics 365 Business Central",
        "operationId": "deleteItemById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified item"
          }
        }
      },
      "patch": {
        "tags": [
          "item"
        ],
        "summary": "Lets the user patch the specified item",
        "operationId": "patchItemById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the item entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the item entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the item entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "type": {
                  "description": "The type property for the item entity",
                  "type": "string"
                },
                "itemCategoryId": {
                  "format": "uuid",
                  "description": "The itemCategoryId property for the item entity",
                  "type": "string"
                },
                "itemCategoryCode": {
                  "description": "The itemCategoryCode property for the item entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "blocked": {
                  "description": "The blocked property for the item entity",
                  "type": "boolean"
                },
                "baseUnitOfMeasureId": {
                  "format": "uuid",
                  "description": "The baseUnitOfMeasureId property for the item entity",
                  "type": "string"
                },
                "baseUnitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "gtin": {
                  "description": "The gtin property for the item entity",
                  "maxLength": 14,
                  "type": "string"
                },
                "inventory": {
                  "format": "decimal",
                  "description": "The inventory property for the item entity",
                  "type": "number"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the item entity",
                  "type": "number"
                },
                "priceIncludesTax": {
                  "description": "The priceIncludesTax property for the item entity",
                  "type": "boolean"
                },
                "unitCost": {
                  "format": "decimal",
                  "description": "The unitCost property for the item entity",
                  "type": "number"
                },
                "taxGroupId": {
                  "format": "uuid",
                  "description": "The taxGroupId property for the item entity",
                  "type": "string"
                },
                "taxGroupCode": {
                  "description": "The taxGroupCode property for the item entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the item entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifieditem",
            "schema": {
              "$ref": "#/definitions/item"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "item_id",
          "description": "id for item",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/items({item_id})/picture": {
      "get": {
        "tags": [
          "picture"
        ],
        "summary": "Returns a list of picture",
        "operationId": "getPictureForItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "width",
                "height",
                "contentType",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of picture",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/picture"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "item_id",
          "description": "id for item",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/items({item_id})/picture({picture_id})": {
      "get": {
        "tags": [
          "picture"
        ],
        "summary": "Retrieve the properties and relationships of an picture object for Dynamics 365 Business Central.",
        "operationId": "getPictureForItemById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "width",
                "height",
                "contentType",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested picture",
            "schema": {
              "$ref": "#/definitions/picture"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "picture"
        ],
        "summary": "Delete an picture in Dynamics 365 Business Central",
        "operationId": "deletePictureForItemByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified picture"
          }
        }
      },
      "patch": {
        "tags": [
          "picture"
        ],
        "summary": "Lets the user patch the specified picture",
        "operationId": "patchPictureForItemByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the picture entity",
                  "type": "string"
                },
                "width": {
                  "format": "int32",
                  "description": "The width property for the picture entity",
                  "type": "integer"
                },
                "height": {
                  "format": "int32",
                  "description": "The height property for the picture entity",
                  "type": "integer"
                },
                "contentType": {
                  "description": "The contentType property for the picture entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the picture entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedpicture",
            "schema": {
              "$ref": "#/definitions/picture"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "item_id",
          "description": "id for item",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "picture_id",
          "description": "id for picture",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/items({item_id})/defaultDimensions": {
      "get": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Returns a list of defaultDimensions",
        "operationId": "getDefaultDimensionsForItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account",
                "dimension",
                "dimensionValue"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "dimensionId",
                "dimensionCode",
                "dimensionValueId",
                "dimensionValueCode",
                "postingValidation"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of defaultDimensions",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/defaultDimensions"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Creates a defaultDimensions in Dynamics 365 Business Central",
        "operationId": "postDefaultDimensionsForItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionId": {
                  "format": "uuid",
                  "description": "The dimensionId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionCode": {
                  "description": "The dimensionCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "dimensionValueId": {
                  "format": "uuid",
                  "description": "The dimensionValueId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionValueCode": {
                  "description": "The dimensionValueCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingValidation": {
                  "description": "The postingValidation property for the defaultDimensions entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new defaultDimensionshas been succesfully created",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "item_id",
          "description": "id for item",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/items({item_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
      "get": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Retrieve the properties and relationships of an defaultDimensions object for Dynamics 365 Business Central.",
        "operationId": "getDefaultDimensionsForItemByDimensionIdByParentId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account",
                "dimension",
                "dimensionValue"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "dimensionId",
                "dimensionCode",
                "dimensionValueId",
                "dimensionValueCode",
                "postingValidation"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested defaultDimensions",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Delete an defaultDimensions in Dynamics 365 Business Central",
        "operationId": "deleteDefaultDimensionsForItemByDimensionIdByParentIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified defaultDimensions"
          }
        }
      },
      "patch": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Lets the user patch the specified defaultDimensions",
        "operationId": "patchDefaultDimensionsForItemByDimensionIdByParentIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionId": {
                  "format": "uuid",
                  "description": "The dimensionId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionCode": {
                  "description": "The dimensionCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "dimensionValueId": {
                  "format": "uuid",
                  "description": "The dimensionValueId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionValueCode": {
                  "description": "The dimensionValueCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingValidation": {
                  "description": "The postingValidation property for the defaultDimensions entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifieddefaultDimensions",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "item_id",
          "description": "id for item",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "defaultDimensions_parentId",
          "description": "parentId for defaultDimensions",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "defaultDimensions_dimensionId",
          "description": "dimensionId for defaultDimensions",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/picture": {
      "get": {
        "tags": [
          "picture"
        ],
        "summary": "Returns a list of picture",
        "operationId": "getPicture",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "width",
                "height",
                "contentType",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of picture",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/picture"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/picture({picture_id})": {
      "get": {
        "tags": [
          "picture"
        ],
        "summary": "Retrieve the properties and relationships of an picture object for Dynamics 365 Business Central.",
        "operationId": "getPictureById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "width",
                "height",
                "contentType",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested picture",
            "schema": {
              "$ref": "#/definitions/picture"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "picture"
        ],
        "summary": "Delete an picture in Dynamics 365 Business Central",
        "operationId": "deletePictureById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified picture"
          }
        }
      },
      "patch": {
        "tags": [
          "picture"
        ],
        "summary": "Lets the user patch the specified picture",
        "operationId": "patchPictureById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the picture entity",
                  "type": "string"
                },
                "width": {
                  "format": "int32",
                  "description": "The width property for the picture entity",
                  "type": "integer"
                },
                "height": {
                  "format": "int32",
                  "description": "The height property for the picture entity",
                  "type": "integer"
                },
                "contentType": {
                  "description": "The contentType property for the picture entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the picture entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedpicture",
            "schema": {
              "$ref": "#/definitions/picture"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "picture_id",
          "description": "id for picture",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/defaultDimensions": {
      "get": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Returns a list of defaultDimensions",
        "operationId": "getDefaultDimensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account",
                "dimension",
                "dimensionValue"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "dimensionId",
                "dimensionCode",
                "dimensionValueId",
                "dimensionValueCode",
                "postingValidation"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of defaultDimensions",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/defaultDimensions"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Creates a defaultDimensions in Dynamics 365 Business Central",
        "operationId": "postDefaultDimensions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionId": {
                  "format": "uuid",
                  "description": "The dimensionId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionCode": {
                  "description": "The dimensionCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "dimensionValueId": {
                  "format": "uuid",
                  "description": "The dimensionValueId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionValueCode": {
                  "description": "The dimensionValueCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingValidation": {
                  "description": "The postingValidation property for the defaultDimensions entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new defaultDimensionshas been succesfully created",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
      "get": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Retrieve the properties and relationships of an defaultDimensions object for Dynamics 365 Business Central.",
        "operationId": "getDefaultDimensionsByDimensionIdByParentId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account",
                "dimension",
                "dimensionValue"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "dimensionId",
                "dimensionCode",
                "dimensionValueId",
                "dimensionValueCode",
                "postingValidation"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested defaultDimensions",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Delete an defaultDimensions in Dynamics 365 Business Central",
        "operationId": "deleteDefaultDimensionsByDimensionIdByParentId",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified defaultDimensions"
          }
        }
      },
      "patch": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Lets the user patch the specified defaultDimensions",
        "operationId": "patchDefaultDimensionsByDimensionIdByParentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionId": {
                  "format": "uuid",
                  "description": "The dimensionId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionCode": {
                  "description": "The dimensionCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "dimensionValueId": {
                  "format": "uuid",
                  "description": "The dimensionValueId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionValueCode": {
                  "description": "The dimensionValueCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingValidation": {
                  "description": "The postingValidation property for the defaultDimensions entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifieddefaultDimensions",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "defaultDimensions_parentId",
          "description": "parentId for defaultDimensions",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "defaultDimensions_dimensionId",
          "description": "dimensionId for defaultDimensions",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customers": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Returns a list of customers",
        "operationId": "getCustomers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "customerFinancialDetails",
                "picture",
                "defaultDimensions",
                "currency",
                "paymentTerm",
                "shipmentMethod",
                "paymentMethod"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "displayName",
                "type",
                "address",
                "phoneNumber",
                "email",
                "website",
                "taxLiable",
                "taxAreaId",
                "taxAreaDisplayName",
                "taxRegistrationNumber",
                "currencyId",
                "currencyCode",
                "paymentTermsId",
                "shipmentMethodId",
                "paymentMethodId",
                "blocked",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of customers",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/customer"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customer"
        ],
        "summary": "Creates a customer in Dynamics 365 Business Central",
        "operationId": "postCustomer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the customer entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the customer entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the customer entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "type": {
                  "description": "The type property for the customer entity",
                  "type": "string"
                },
                "address": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the customer entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the customer entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "website": {
                  "description": "The website property for the customer entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "taxLiable": {
                  "description": "The taxLiable property for the customer entity",
                  "type": "boolean"
                },
                "taxAreaId": {
                  "format": "uuid",
                  "description": "The taxAreaId property for the customer entity",
                  "type": "string"
                },
                "taxAreaDisplayName": {
                  "description": "The taxAreaDisplayName property for the customer entity",
                  "type": "string"
                },
                "taxRegistrationNumber": {
                  "description": "The taxRegistrationNumber property for the customer entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the customer entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the customer entity",
                  "type": "string"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the customer entity",
                  "type": "string"
                },
                "shipmentMethodId": {
                  "format": "uuid",
                  "description": "The shipmentMethodId property for the customer entity",
                  "type": "string"
                },
                "paymentMethodId": {
                  "format": "uuid",
                  "description": "The paymentMethodId property for the customer entity",
                  "type": "string"
                },
                "blocked": {
                  "description": "The blocked property for the customer entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the customer entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new customerhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customers({customer_id})": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Retrieve the properties and relationships of an customer object for Dynamics 365 Business Central.",
        "operationId": "getCustomerById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "customerFinancialDetails",
                "picture",
                "defaultDimensions",
                "currency",
                "paymentTerm",
                "shipmentMethod",
                "paymentMethod"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "displayName",
                "type",
                "address",
                "phoneNumber",
                "email",
                "website",
                "taxLiable",
                "taxAreaId",
                "taxAreaDisplayName",
                "taxRegistrationNumber",
                "currencyId",
                "currencyCode",
                "paymentTermsId",
                "shipmentMethodId",
                "paymentMethodId",
                "blocked",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested customer",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customer"
        ],
        "summary": "Delete an customer in Dynamics 365 Business Central",
        "operationId": "deleteCustomerById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified customer"
          }
        }
      },
      "patch": {
        "tags": [
          "customer"
        ],
        "summary": "Lets the user patch the specified customer",
        "operationId": "patchCustomerById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the customer entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the customer entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the customer entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "type": {
                  "description": "The type property for the customer entity",
                  "type": "string"
                },
                "address": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the customer entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the customer entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "website": {
                  "description": "The website property for the customer entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "taxLiable": {
                  "description": "The taxLiable property for the customer entity",
                  "type": "boolean"
                },
                "taxAreaId": {
                  "format": "uuid",
                  "description": "The taxAreaId property for the customer entity",
                  "type": "string"
                },
                "taxAreaDisplayName": {
                  "description": "The taxAreaDisplayName property for the customer entity",
                  "type": "string"
                },
                "taxRegistrationNumber": {
                  "description": "The taxRegistrationNumber property for the customer entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the customer entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the customer entity",
                  "type": "string"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the customer entity",
                  "type": "string"
                },
                "shipmentMethodId": {
                  "format": "uuid",
                  "description": "The shipmentMethodId property for the customer entity",
                  "type": "string"
                },
                "paymentMethodId": {
                  "format": "uuid",
                  "description": "The paymentMethodId property for the customer entity",
                  "type": "string"
                },
                "blocked": {
                  "description": "The blocked property for the customer entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the customer entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedcustomer",
            "schema": {
              "$ref": "#/definitions/customer"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customer_id",
          "description": "id for customer",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customers({customer_id})/customerFinancialDetails": {
      "get": {
        "tags": [
          "customerFinancialDetail"
        ],
        "summary": "Returns a list of customerFinancialDetails",
        "operationId": "getCustomerFinancialDetailsForCustomer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "balance",
                "totalSalesExcludingTax",
                "overdueAmount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of customerFinancialDetails",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/customerFinancialDetail"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customer_id",
          "description": "id for customer",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customers({customer_id})/customerFinancialDetails({customerFinancialDetail_id})": {
      "get": {
        "tags": [
          "customerFinancialDetail"
        ],
        "summary": "Retrieve the properties and relationships of an customerFinancialDetail object for Dynamics 365 Business Central.",
        "operationId": "getCustomerFinancialDetailForCustomerById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "balance",
                "totalSalesExcludingTax",
                "overdueAmount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested customerFinancialDetail",
            "schema": {
              "$ref": "#/definitions/customerFinancialDetail"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customer_id",
          "description": "id for customer",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customerFinancialDetail_id",
          "description": "id for customerFinancialDetail",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customers({customer_id})/picture": {
      "get": {
        "tags": [
          "picture"
        ],
        "summary": "Returns a list of picture",
        "operationId": "getPictureForCustomer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "width",
                "height",
                "contentType",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of picture",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/picture"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customer_id",
          "description": "id for customer",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customers({customer_id})/picture({picture_id})": {
      "get": {
        "tags": [
          "picture"
        ],
        "summary": "Retrieve the properties and relationships of an picture object for Dynamics 365 Business Central.",
        "operationId": "getPictureForCustomerById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "width",
                "height",
                "contentType",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested picture",
            "schema": {
              "$ref": "#/definitions/picture"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "picture"
        ],
        "summary": "Delete an picture in Dynamics 365 Business Central",
        "operationId": "deletePictureForCustomerByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified picture"
          }
        }
      },
      "patch": {
        "tags": [
          "picture"
        ],
        "summary": "Lets the user patch the specified picture",
        "operationId": "patchPictureForCustomerByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the picture entity",
                  "type": "string"
                },
                "width": {
                  "format": "int32",
                  "description": "The width property for the picture entity",
                  "type": "integer"
                },
                "height": {
                  "format": "int32",
                  "description": "The height property for the picture entity",
                  "type": "integer"
                },
                "contentType": {
                  "description": "The contentType property for the picture entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the picture entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedpicture",
            "schema": {
              "$ref": "#/definitions/picture"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customer_id",
          "description": "id for customer",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "picture_id",
          "description": "id for picture",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customers({customer_id})/defaultDimensions": {
      "get": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Returns a list of defaultDimensions",
        "operationId": "getDefaultDimensionsForCustomer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account",
                "dimension",
                "dimensionValue"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "dimensionId",
                "dimensionCode",
                "dimensionValueId",
                "dimensionValueCode",
                "postingValidation"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of defaultDimensions",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/defaultDimensions"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Creates a defaultDimensions in Dynamics 365 Business Central",
        "operationId": "postDefaultDimensionsForCustomer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionId": {
                  "format": "uuid",
                  "description": "The dimensionId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionCode": {
                  "description": "The dimensionCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "dimensionValueId": {
                  "format": "uuid",
                  "description": "The dimensionValueId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionValueCode": {
                  "description": "The dimensionValueCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingValidation": {
                  "description": "The postingValidation property for the defaultDimensions entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new defaultDimensionshas been succesfully created",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customer_id",
          "description": "id for customer",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customers({customer_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
      "get": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Retrieve the properties and relationships of an defaultDimensions object for Dynamics 365 Business Central.",
        "operationId": "getDefaultDimensionsForCustomerByDimensionIdByParentId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account",
                "dimension",
                "dimensionValue"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "dimensionId",
                "dimensionCode",
                "dimensionValueId",
                "dimensionValueCode",
                "postingValidation"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested defaultDimensions",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Delete an defaultDimensions in Dynamics 365 Business Central",
        "operationId": "deleteDefaultDimensionsForCustomerByDimensionIdByParentIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified defaultDimensions"
          }
        }
      },
      "patch": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Lets the user patch the specified defaultDimensions",
        "operationId": "patchDefaultDimensionsForCustomerByDimensionIdByParentIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionId": {
                  "format": "uuid",
                  "description": "The dimensionId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionCode": {
                  "description": "The dimensionCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "dimensionValueId": {
                  "format": "uuid",
                  "description": "The dimensionValueId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionValueCode": {
                  "description": "The dimensionValueCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingValidation": {
                  "description": "The postingValidation property for the defaultDimensions entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifieddefaultDimensions",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customer_id",
          "description": "id for customer",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "defaultDimensions_parentId",
          "description": "parentId for defaultDimensions",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "defaultDimensions_dimensionId",
          "description": "dimensionId for defaultDimensions",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customerFinancialDetails": {
      "get": {
        "tags": [
          "customerFinancialDetail"
        ],
        "summary": "Returns a list of customerFinancialDetails",
        "operationId": "getCustomerFinancialDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "balance",
                "totalSalesExcludingTax",
                "overdueAmount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of customerFinancialDetails",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/customerFinancialDetail"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customerFinancialDetails({customerFinancialDetail_id})": {
      "get": {
        "tags": [
          "customerFinancialDetail"
        ],
        "summary": "Retrieve the properties and relationships of an customerFinancialDetail object for Dynamics 365 Business Central.",
        "operationId": "getCustomerFinancialDetailById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "balance",
                "totalSalesExcludingTax",
                "overdueAmount"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested customerFinancialDetail",
            "schema": {
              "$ref": "#/definitions/customerFinancialDetail"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customerFinancialDetail_id",
          "description": "id for customerFinancialDetail",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/vendors": {
      "get": {
        "tags": [
          "vendor"
        ],
        "summary": "Returns a list of vendors",
        "operationId": "getVendors",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "picture",
                "defaultDimensions",
                "currency",
                "paymentTerm",
                "paymentMethod"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "displayName",
                "address",
                "phoneNumber",
                "email",
                "website",
                "taxRegistrationNumber",
                "currencyId",
                "currencyCode",
                "irs1099Code",
                "paymentTermsId",
                "paymentMethodId",
                "taxLiable",
                "blocked",
                "balance",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of vendors",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/vendor"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "vendor"
        ],
        "summary": "Creates a vendor in Dynamics 365 Business Central",
        "operationId": "postVendor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the vendor entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the vendor entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the vendor entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "address": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the vendor entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the vendor entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "website": {
                  "description": "The website property for the vendor entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "taxRegistrationNumber": {
                  "description": "The taxRegistrationNumber property for the vendor entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the vendor entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the vendor entity",
                  "type": "string"
                },
                "irs1099Code": {
                  "description": "The irs1099Code property for the vendor entity",
                  "type": "string"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the vendor entity",
                  "type": "string"
                },
                "paymentMethodId": {
                  "format": "uuid",
                  "description": "The paymentMethodId property for the vendor entity",
                  "type": "string"
                },
                "taxLiable": {
                  "description": "The taxLiable property for the vendor entity",
                  "type": "boolean"
                },
                "blocked": {
                  "description": "The blocked property for the vendor entity",
                  "type": "string"
                },
                "balance": {
                  "format": "decimal",
                  "description": "The balance property for the vendor entity",
                  "type": "number"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the vendor entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new vendorhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/vendor"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/vendors({vendor_id})": {
      "get": {
        "tags": [
          "vendor"
        ],
        "summary": "Retrieve the properties and relationships of an vendor object for Dynamics 365 Business Central.",
        "operationId": "getVendorById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "picture",
                "defaultDimensions",
                "currency",
                "paymentTerm",
                "paymentMethod"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "displayName",
                "address",
                "phoneNumber",
                "email",
                "website",
                "taxRegistrationNumber",
                "currencyId",
                "currencyCode",
                "irs1099Code",
                "paymentTermsId",
                "paymentMethodId",
                "taxLiable",
                "blocked",
                "balance",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested vendor",
            "schema": {
              "$ref": "#/definitions/vendor"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "vendor"
        ],
        "summary": "Delete an vendor in Dynamics 365 Business Central",
        "operationId": "deleteVendorById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified vendor"
          }
        }
      },
      "patch": {
        "tags": [
          "vendor"
        ],
        "summary": "Lets the user patch the specified vendor",
        "operationId": "patchVendorById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the vendor entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the vendor entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the vendor entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "address": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the vendor entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the vendor entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "website": {
                  "description": "The website property for the vendor entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "taxRegistrationNumber": {
                  "description": "The taxRegistrationNumber property for the vendor entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the vendor entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the vendor entity",
                  "type": "string"
                },
                "irs1099Code": {
                  "description": "The irs1099Code property for the vendor entity",
                  "type": "string"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the vendor entity",
                  "type": "string"
                },
                "paymentMethodId": {
                  "format": "uuid",
                  "description": "The paymentMethodId property for the vendor entity",
                  "type": "string"
                },
                "taxLiable": {
                  "description": "The taxLiable property for the vendor entity",
                  "type": "boolean"
                },
                "blocked": {
                  "description": "The blocked property for the vendor entity",
                  "type": "string"
                },
                "balance": {
                  "format": "decimal",
                  "description": "The balance property for the vendor entity",
                  "type": "number"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the vendor entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedvendor",
            "schema": {
              "$ref": "#/definitions/vendor"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "vendor_id",
          "description": "id for vendor",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/vendors({vendor_id})/picture": {
      "get": {
        "tags": [
          "picture"
        ],
        "summary": "Returns a list of picture",
        "operationId": "getPictureForVendor",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "width",
                "height",
                "contentType",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of picture",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/picture"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "vendor_id",
          "description": "id for vendor",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/vendors({vendor_id})/picture({picture_id})": {
      "get": {
        "tags": [
          "picture"
        ],
        "summary": "Retrieve the properties and relationships of an picture object for Dynamics 365 Business Central.",
        "operationId": "getPictureForVendorById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "width",
                "height",
                "contentType",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested picture",
            "schema": {
              "$ref": "#/definitions/picture"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "picture"
        ],
        "summary": "Delete an picture in Dynamics 365 Business Central",
        "operationId": "deletePictureForVendorByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified picture"
          }
        }
      },
      "patch": {
        "tags": [
          "picture"
        ],
        "summary": "Lets the user patch the specified picture",
        "operationId": "patchPictureForVendorByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the picture entity",
                  "type": "string"
                },
                "width": {
                  "format": "int32",
                  "description": "The width property for the picture entity",
                  "type": "integer"
                },
                "height": {
                  "format": "int32",
                  "description": "The height property for the picture entity",
                  "type": "integer"
                },
                "contentType": {
                  "description": "The contentType property for the picture entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the picture entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedpicture",
            "schema": {
              "$ref": "#/definitions/picture"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "vendor_id",
          "description": "id for vendor",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "picture_id",
          "description": "id for picture",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/vendors({vendor_id})/defaultDimensions": {
      "get": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Returns a list of defaultDimensions",
        "operationId": "getDefaultDimensionsForVendor",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account",
                "dimension",
                "dimensionValue"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "dimensionId",
                "dimensionCode",
                "dimensionValueId",
                "dimensionValueCode",
                "postingValidation"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of defaultDimensions",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/defaultDimensions"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Creates a defaultDimensions in Dynamics 365 Business Central",
        "operationId": "postDefaultDimensionsForVendor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionId": {
                  "format": "uuid",
                  "description": "The dimensionId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionCode": {
                  "description": "The dimensionCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "dimensionValueId": {
                  "format": "uuid",
                  "description": "The dimensionValueId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionValueCode": {
                  "description": "The dimensionValueCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingValidation": {
                  "description": "The postingValidation property for the defaultDimensions entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new defaultDimensionshas been succesfully created",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "vendor_id",
          "description": "id for vendor",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/vendors({vendor_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
      "get": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Retrieve the properties and relationships of an defaultDimensions object for Dynamics 365 Business Central.",
        "operationId": "getDefaultDimensionsForVendorByDimensionIdByParentId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account",
                "dimension",
                "dimensionValue"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "dimensionId",
                "dimensionCode",
                "dimensionValueId",
                "dimensionValueCode",
                "postingValidation"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested defaultDimensions",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Delete an defaultDimensions in Dynamics 365 Business Central",
        "operationId": "deleteDefaultDimensionsForVendorByDimensionIdByParentIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified defaultDimensions"
          }
        }
      },
      "patch": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Lets the user patch the specified defaultDimensions",
        "operationId": "patchDefaultDimensionsForVendorByDimensionIdByParentIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionId": {
                  "format": "uuid",
                  "description": "The dimensionId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionCode": {
                  "description": "The dimensionCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "dimensionValueId": {
                  "format": "uuid",
                  "description": "The dimensionValueId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionValueCode": {
                  "description": "The dimensionValueCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingValidation": {
                  "description": "The postingValidation property for the defaultDimensions entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifieddefaultDimensions",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "vendor_id",
          "description": "id for vendor",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "defaultDimensions_parentId",
          "description": "parentId for defaultDimensions",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "defaultDimensions_dimensionId",
          "description": "dimensionId for defaultDimensions",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/companyInformation": {
      "get": {
        "tags": [
          "companyInformation"
        ],
        "summary": "Returns a list of companyInformation",
        "operationId": "getCompanyInformation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "address",
                "phoneNumber",
                "faxNumber",
                "email",
                "website",
                "taxRegistrationNumber",
                "currencyCode",
                "currentFiscalYearStartDate",
                "industry",
                "picture",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of companyInformation",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/companyInformation"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/companyInformation({companyInformation_id})": {
      "get": {
        "tags": [
          "companyInformation"
        ],
        "summary": "Retrieve the properties and relationships of an companyInformation object for Dynamics 365 Business Central.",
        "operationId": "getCompanyInformationById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "address",
                "phoneNumber",
                "faxNumber",
                "email",
                "website",
                "taxRegistrationNumber",
                "currencyCode",
                "currentFiscalYearStartDate",
                "industry",
                "picture",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested companyInformation",
            "schema": {
              "$ref": "#/definitions/companyInformation"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "companyInformation"
        ],
        "summary": "Lets the user patch the specified companyInformation",
        "operationId": "patchCompanyInformationById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the companyInformation entity",
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the companyInformation entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "address": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the companyInformation entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "faxNumber": {
                  "description": "The faxNumber property for the companyInformation entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the companyInformation entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "website": {
                  "description": "The website property for the companyInformation entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "taxRegistrationNumber": {
                  "description": "The taxRegistrationNumber property for the companyInformation entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the companyInformation entity",
                  "type": "string"
                },
                "currentFiscalYearStartDate": {
                  "format": "date-time",
                  "description": "The currentFiscalYearStartDate property for the companyInformation entity",
                  "type": "string"
                },
                "industry": {
                  "description": "The industry property for the companyInformation entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "picture": {
                  "format": "binary",
                  "description": "The picture property for the companyInformation entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the companyInformation entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedcompanyInformation",
            "schema": {
              "$ref": "#/definitions/companyInformation"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "companyInformation_id",
          "description": "id for companyInformation",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoices": {
      "get": {
        "tags": [
          "salesInvoice"
        ],
        "summary": "Returns a list of salesInvoices",
        "operationId": "getSalesInvoices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "salesInvoiceLines",
                "pdfDocument",
                "customer",
                "currency",
                "paymentTerm",
                "shipmentMethod"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "externalDocumentNumber",
                "invoiceDate",
                "dueDate",
                "customerPurchaseOrderReference",
                "customerId",
                "contactId",
                "customerNumber",
                "customerName",
                "billToName",
                "billToCustomerId",
                "billToCustomerNumber",
                "shipToName",
                "shipToContact",
                "sellingPostalAddress",
                "billingPostalAddress",
                "shippingPostalAddress",
                "currencyId",
                "currencyCode",
                "orderId",
                "orderNumber",
                "paymentTermsId",
                "shipmentMethodId",
                "salesperson",
                "pricesIncludeTax",
                "discountAmount",
                "discountAppliedBeforeTax",
                "totalAmountExcludingTax",
                "totalTaxAmount",
                "totalAmountIncludingTax",
                "status",
                "lastModifiedDateTime",
                "phoneNumber",
                "email"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesInvoices",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesInvoice"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesInvoice"
        ],
        "summary": "Creates a salesInvoice in Dynamics 365 Business Central",
        "operationId": "postSalesInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the salesInvoice entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the salesInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the salesInvoice entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "invoiceDate": {
                  "format": "date-time",
                  "description": "The invoiceDate property for the salesInvoice entity",
                  "type": "string"
                },
                "dueDate": {
                  "format": "date-time",
                  "description": "The dueDate property for the salesInvoice entity",
                  "type": "string"
                },
                "customerPurchaseOrderReference": {
                  "description": "The customerPurchaseOrderReference property for the salesInvoice entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the salesInvoice entity",
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the salesInvoice entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the salesInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "customerName": {
                  "description": "The customerName property for the salesInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToName": {
                  "description": "The billToName property for the salesInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToCustomerId": {
                  "format": "uuid",
                  "description": "The billToCustomerId property for the salesInvoice entity",
                  "type": "string"
                },
                "billToCustomerNumber": {
                  "description": "The billToCustomerNumber property for the salesInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "shipToName": {
                  "description": "The shipToName property for the salesInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "shipToContact": {
                  "description": "The shipToContact property for the salesInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "sellingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "billingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "shippingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the salesInvoice entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the salesInvoice entity",
                  "type": "string"
                },
                "orderId": {
                  "format": "uuid",
                  "description": "The orderId property for the salesInvoice entity",
                  "type": "string"
                },
                "orderNumber": {
                  "description": "The orderNumber property for the salesInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the salesInvoice entity",
                  "type": "string"
                },
                "shipmentMethodId": {
                  "format": "uuid",
                  "description": "The shipmentMethodId property for the salesInvoice entity",
                  "type": "string"
                },
                "salesperson": {
                  "description": "The salesperson property for the salesInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "pricesIncludeTax": {
                  "description": "The pricesIncludeTax property for the salesInvoice entity",
                  "type": "boolean"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesInvoice entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesInvoice entity",
                  "type": "boolean"
                },
                "totalAmountExcludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountExcludingTax property for the salesInvoice entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesInvoice entity",
                  "type": "number"
                },
                "totalAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountIncludingTax property for the salesInvoice entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the salesInvoice entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the salesInvoice entity",
                  "type": "string"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the salesInvoice entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the salesInvoice entity",
                  "maxLength": 80,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesInvoicehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesInvoice"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoices({salesInvoice_id})": {
      "get": {
        "tags": [
          "salesInvoice"
        ],
        "summary": "Retrieve the properties and relationships of an salesInvoice object for Dynamics 365 Business Central.",
        "operationId": "getSalesInvoiceById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "salesInvoiceLines",
                "pdfDocument",
                "customer",
                "currency",
                "paymentTerm",
                "shipmentMethod"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "externalDocumentNumber",
                "invoiceDate",
                "dueDate",
                "customerPurchaseOrderReference",
                "customerId",
                "contactId",
                "customerNumber",
                "customerName",
                "billToName",
                "billToCustomerId",
                "billToCustomerNumber",
                "shipToName",
                "shipToContact",
                "sellingPostalAddress",
                "billingPostalAddress",
                "shippingPostalAddress",
                "currencyId",
                "currencyCode",
                "orderId",
                "orderNumber",
                "paymentTermsId",
                "shipmentMethodId",
                "salesperson",
                "pricesIncludeTax",
                "discountAmount",
                "discountAppliedBeforeTax",
                "totalAmountExcludingTax",
                "totalTaxAmount",
                "totalAmountIncludingTax",
                "status",
                "lastModifiedDateTime",
                "phoneNumber",
                "email"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesInvoice",
            "schema": {
              "$ref": "#/definitions/salesInvoice"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesInvoice"
        ],
        "summary": "Delete an salesInvoice in Dynamics 365 Business Central",
        "operationId": "deleteSalesInvoiceById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesInvoice"
          }
        }
      },
      "patch": {
        "tags": [
          "salesInvoice"
        ],
        "summary": "Lets the user patch the specified salesInvoice",
        "operationId": "patchSalesInvoiceById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the salesInvoice entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the salesInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the salesInvoice entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "invoiceDate": {
                  "format": "date-time",
                  "description": "The invoiceDate property for the salesInvoice entity",
                  "type": "string"
                },
                "dueDate": {
                  "format": "date-time",
                  "description": "The dueDate property for the salesInvoice entity",
                  "type": "string"
                },
                "customerPurchaseOrderReference": {
                  "description": "The customerPurchaseOrderReference property for the salesInvoice entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the salesInvoice entity",
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the salesInvoice entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the salesInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "customerName": {
                  "description": "The customerName property for the salesInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToName": {
                  "description": "The billToName property for the salesInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToCustomerId": {
                  "format": "uuid",
                  "description": "The billToCustomerId property for the salesInvoice entity",
                  "type": "string"
                },
                "billToCustomerNumber": {
                  "description": "The billToCustomerNumber property for the salesInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "shipToName": {
                  "description": "The shipToName property for the salesInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "shipToContact": {
                  "description": "The shipToContact property for the salesInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "sellingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "billingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "shippingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the salesInvoice entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the salesInvoice entity",
                  "type": "string"
                },
                "orderId": {
                  "format": "uuid",
                  "description": "The orderId property for the salesInvoice entity",
                  "type": "string"
                },
                "orderNumber": {
                  "description": "The orderNumber property for the salesInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the salesInvoice entity",
                  "type": "string"
                },
                "shipmentMethodId": {
                  "format": "uuid",
                  "description": "The shipmentMethodId property for the salesInvoice entity",
                  "type": "string"
                },
                "salesperson": {
                  "description": "The salesperson property for the salesInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "pricesIncludeTax": {
                  "description": "The pricesIncludeTax property for the salesInvoice entity",
                  "type": "boolean"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesInvoice entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesInvoice entity",
                  "type": "boolean"
                },
                "totalAmountExcludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountExcludingTax property for the salesInvoice entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesInvoice entity",
                  "type": "number"
                },
                "totalAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountIncludingTax property for the salesInvoice entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the salesInvoice entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the salesInvoice entity",
                  "type": "string"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the salesInvoice entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the salesInvoice entity",
                  "maxLength": 80,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesInvoice",
            "schema": {
              "$ref": "#/definitions/salesInvoice"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoice_id",
          "description": "id for salesInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.cancelAndSend": {
      "post": {
        "tags": [
          "salesInvoice"
        ],
        "summary": "Performs the cancelAndSend action for salesInvoices entity",
        "operationId": "cancelAndSendActionSalesInvoices",
        "responses": {
          "204": {
            "description": "Succesfully performed a cancelAndSend action on the salesInvoices entity"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoice_id",
          "description": "id for salesInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.cancel": {
      "post": {
        "tags": [
          "salesInvoice"
        ],
        "summary": "Performs the cancel action for salesInvoices entity",
        "operationId": "cancelActionSalesInvoices",
        "responses": {
          "204": {
            "description": "Succesfully performed a cancel action on the salesInvoices entity"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoice_id",
          "description": "id for salesInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.postAndSend": {
      "post": {
        "tags": [
          "salesInvoice"
        ],
        "summary": "Performs the postAndSend action for salesInvoices entity",
        "operationId": "postAndSendActionSalesInvoices",
        "responses": {
          "204": {
            "description": "Succesfully performed a postAndSend action on the salesInvoices entity"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoice_id",
          "description": "id for salesInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.post": {
      "post": {
        "tags": [
          "salesInvoice"
        ],
        "summary": "Performs the post action for salesInvoices entity",
        "operationId": "postActionSalesInvoices",
        "responses": {
          "204": {
            "description": "Succesfully performed a post action on the salesInvoices entity"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoice_id",
          "description": "id for salesInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoices({salesInvoice_id})/Microsoft.NAV.send": {
      "post": {
        "tags": [
          "salesInvoice"
        ],
        "summary": "Performs the send action for salesInvoices entity",
        "operationId": "sendActionSalesInvoices",
        "responses": {
          "204": {
            "description": "Succesfully performed a send action on the salesInvoices entity"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoice_id",
          "description": "id for salesInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoices({salesInvoice_id})/salesInvoiceLines": {
      "get": {
        "tags": [
          "salesInvoiceLine"
        ],
        "summary": "Returns a list of salesInvoiceLines",
        "operationId": "getSalesInvoiceLinesForSalesInvoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesInvoiceLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesInvoiceLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesInvoiceLine"
        ],
        "summary": "Creates a salesInvoiceLine in Dynamics 365 Business Central",
        "operationId": "postSalesInvoiceLineForSalesInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesInvoiceLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesInvoiceLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesInvoiceLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesInvoiceLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesInvoiceLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesInvoiceLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoice_id",
          "description": "id for salesInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoices({salesInvoice_id})/salesInvoiceLines('{salesInvoiceLine_id}')": {
      "get": {
        "tags": [
          "salesInvoiceLine"
        ],
        "summary": "Retrieve the properties and relationships of an salesInvoiceLine object for Dynamics 365 Business Central.",
        "operationId": "getSalesInvoiceLineForSalesInvoiceById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesInvoiceLine",
            "schema": {
              "$ref": "#/definitions/salesInvoiceLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesInvoiceLine"
        ],
        "summary": "Delete an salesInvoiceLine in Dynamics 365 Business Central",
        "operationId": "deleteSalesInvoiceLineForSalesInvoiceByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesInvoiceLine"
          }
        }
      },
      "patch": {
        "tags": [
          "salesInvoiceLine"
        ],
        "summary": "Lets the user patch the specified salesInvoiceLine",
        "operationId": "patchSalesInvoiceLineForSalesInvoiceByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesInvoiceLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesInvoiceLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesInvoiceLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesInvoiceLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesInvoiceLine",
            "schema": {
              "$ref": "#/definitions/salesInvoiceLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoice_id",
          "description": "id for salesInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoiceLine_id",
          "description": "id for salesInvoiceLine",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/salesInvoices({salesInvoice_id})/pdfDocument": {
      "get": {
        "tags": [
          "pdfDocument"
        ],
        "summary": "Returns a list of pdfDocument",
        "operationId": "getPdfDocumentForSalesInvoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of pdfDocument",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/pdfDocument"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoice_id",
          "description": "id for salesInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoices({salesInvoice_id})/pdfDocument({pdfDocument_id})": {
      "get": {
        "tags": [
          "pdfDocument"
        ],
        "summary": "Retrieve the properties and relationships of an pdfDocument object for Dynamics 365 Business Central.",
        "operationId": "getPdfDocumentForSalesInvoiceById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested pdfDocument",
            "schema": {
              "$ref": "#/definitions/pdfDocument"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoice_id",
          "description": "id for salesInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "pdfDocument_id",
          "description": "id for pdfDocument",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoiceLines": {
      "get": {
        "tags": [
          "salesInvoiceLine"
        ],
        "summary": "Returns a list of salesInvoiceLines",
        "operationId": "getSalesInvoiceLines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesInvoiceLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesInvoiceLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesInvoiceLine"
        ],
        "summary": "Creates a salesInvoiceLine in Dynamics 365 Business Central",
        "operationId": "postSalesInvoiceLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesInvoiceLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesInvoiceLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesInvoiceLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesInvoiceLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesInvoiceLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesInvoiceLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesInvoiceLines('{salesInvoiceLine_id}')": {
      "get": {
        "tags": [
          "salesInvoiceLine"
        ],
        "summary": "Retrieve the properties and relationships of an salesInvoiceLine object for Dynamics 365 Business Central.",
        "operationId": "getSalesInvoiceLineById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesInvoiceLine",
            "schema": {
              "$ref": "#/definitions/salesInvoiceLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesInvoiceLine"
        ],
        "summary": "Delete an salesInvoiceLine in Dynamics 365 Business Central",
        "operationId": "deleteSalesInvoiceLineById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesInvoiceLine"
          }
        }
      },
      "patch": {
        "tags": [
          "salesInvoiceLine"
        ],
        "summary": "Lets the user patch the specified salesInvoiceLine",
        "operationId": "patchSalesInvoiceLineById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesInvoiceLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesInvoiceLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesInvoiceLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesInvoiceLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesInvoiceLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesInvoiceLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesInvoiceLine",
            "schema": {
              "$ref": "#/definitions/salesInvoiceLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesInvoiceLine_id",
          "description": "id for salesInvoiceLine",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/pdfDocument": {
      "get": {
        "tags": [
          "pdfDocument"
        ],
        "summary": "Returns a list of pdfDocument",
        "operationId": "getPdfDocument",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of pdfDocument",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/pdfDocument"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/pdfDocument({pdfDocument_id})": {
      "get": {
        "tags": [
          "pdfDocument"
        ],
        "summary": "Retrieve the properties and relationships of an pdfDocument object for Dynamics 365 Business Central.",
        "operationId": "getPdfDocumentById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested pdfDocument",
            "schema": {
              "$ref": "#/definitions/pdfDocument"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "pdfDocument_id",
          "description": "id for pdfDocument",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customerPaymentJournals": {
      "get": {
        "tags": [
          "customerPaymentJournal"
        ],
        "summary": "Returns a list of customerPaymentJournals",
        "operationId": "getCustomerPaymentJournals",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "customerPayments",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime",
                "balancingAccountId",
                "balancingAccountNumber"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of customerPaymentJournals",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/customerPaymentJournal"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customerPaymentJournal"
        ],
        "summary": "Creates a customerPaymentJournal in Dynamics 365 Business Central",
        "operationId": "postCustomerPaymentJournal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the customerPaymentJournal entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the customerPaymentJournal entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the customerPaymentJournal entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the customerPaymentJournal entity",
                  "type": "string"
                },
                "balancingAccountId": {
                  "format": "uuid",
                  "description": "The balancingAccountId property for the customerPaymentJournal entity",
                  "type": "string"
                },
                "balancingAccountNumber": {
                  "description": "The balancingAccountNumber property for the customerPaymentJournal entity",
                  "maxLength": 20,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new customerPaymentJournalhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/customerPaymentJournal"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customerPaymentJournals({customerPaymentJournal_id})": {
      "get": {
        "tags": [
          "customerPaymentJournal"
        ],
        "summary": "Retrieve the properties and relationships of an customerPaymentJournal object for Dynamics 365 Business Central.",
        "operationId": "getCustomerPaymentJournalById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "customerPayments",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime",
                "balancingAccountId",
                "balancingAccountNumber"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested customerPaymentJournal",
            "schema": {
              "$ref": "#/definitions/customerPaymentJournal"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customerPaymentJournal"
        ],
        "summary": "Delete an customerPaymentJournal in Dynamics 365 Business Central",
        "operationId": "deleteCustomerPaymentJournalById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified customerPaymentJournal"
          }
        }
      },
      "patch": {
        "tags": [
          "customerPaymentJournal"
        ],
        "summary": "Lets the user patch the specified customerPaymentJournal",
        "operationId": "patchCustomerPaymentJournalById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the customerPaymentJournal entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the customerPaymentJournal entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the customerPaymentJournal entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the customerPaymentJournal entity",
                  "type": "string"
                },
                "balancingAccountId": {
                  "format": "uuid",
                  "description": "The balancingAccountId property for the customerPaymentJournal entity",
                  "type": "string"
                },
                "balancingAccountNumber": {
                  "description": "The balancingAccountNumber property for the customerPaymentJournal entity",
                  "maxLength": 20,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedcustomerPaymentJournal",
            "schema": {
              "$ref": "#/definitions/customerPaymentJournal"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customerPaymentJournal_id",
          "description": "id for customerPaymentJournal",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customerPaymentJournals({customerPaymentJournal_id})/customerPayments": {
      "get": {
        "tags": [
          "customerPayment"
        ],
        "summary": "Returns a list of customerPayments",
        "operationId": "getCustomerPaymentsForCustomerPaymentJournal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "journalDisplayName",
                "lineNumber",
                "customerId",
                "customerNumber",
                "contactId",
                "postingDate",
                "documentNumber",
                "externalDocumentNumber",
                "amount",
                "appliesToInvoiceId",
                "appliesToInvoiceNumber",
                "description",
                "comment",
                "dimensions",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of customerPayments",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/customerPayment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customerPayment"
        ],
        "summary": "Creates a customerPayment in Dynamics 365 Business Central",
        "operationId": "postCustomerPaymentForCustomerPaymentJournal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the customerPayment entity",
                  "type": "string"
                },
                "journalDisplayName": {
                  "description": "The journalDisplayName property for the customerPayment entity",
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the customerPayment entity",
                  "type": "integer"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the customerPayment entity",
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the customerPayment entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the customerPayment entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "postingDate": {
                  "format": "date-time",
                  "description": "The postingDate property for the customerPayment entity",
                  "type": "string"
                },
                "documentNumber": {
                  "description": "The documentNumber property for the customerPayment entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the customerPayment entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "amount": {
                  "format": "decimal",
                  "description": "The amount property for the customerPayment entity",
                  "type": "number"
                },
                "appliesToInvoiceId": {
                  "format": "uuid",
                  "description": "The appliesToInvoiceId property for the customerPayment entity",
                  "type": "string"
                },
                "appliesToInvoiceNumber": {
                  "description": "The appliesToInvoiceNumber property for the customerPayment entity",
                  "type": "string"
                },
                "description": {
                  "description": "The description property for the customerPayment entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "comment": {
                  "description": "The comment property for the customerPayment entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimensiontype"
                  }
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the customerPayment entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new customerPaymenthas been succesfully created",
            "schema": {
              "$ref": "#/definitions/customerPayment"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customerPaymentJournal_id",
          "description": "id for customerPaymentJournal",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customerPaymentJournals({customerPaymentJournal_id})/customerPayments({customerPayment_id})": {
      "get": {
        "tags": [
          "customerPayment"
        ],
        "summary": "Retrieve the properties and relationships of an customerPayment object for Dynamics 365 Business Central.",
        "operationId": "getCustomerPaymentForCustomerPaymentJournalById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "journalDisplayName",
                "lineNumber",
                "customerId",
                "customerNumber",
                "contactId",
                "postingDate",
                "documentNumber",
                "externalDocumentNumber",
                "amount",
                "appliesToInvoiceId",
                "appliesToInvoiceNumber",
                "description",
                "comment",
                "dimensions",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested customerPayment",
            "schema": {
              "$ref": "#/definitions/customerPayment"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customerPayment"
        ],
        "summary": "Delete an customerPayment in Dynamics 365 Business Central",
        "operationId": "deleteCustomerPaymentForCustomerPaymentJournalByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified customerPayment"
          }
        }
      },
      "patch": {
        "tags": [
          "customerPayment"
        ],
        "summary": "Lets the user patch the specified customerPayment",
        "operationId": "patchCustomerPaymentForCustomerPaymentJournalByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the customerPayment entity",
                  "type": "string"
                },
                "journalDisplayName": {
                  "description": "The journalDisplayName property for the customerPayment entity",
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the customerPayment entity",
                  "type": "integer"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the customerPayment entity",
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the customerPayment entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the customerPayment entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "postingDate": {
                  "format": "date-time",
                  "description": "The postingDate property for the customerPayment entity",
                  "type": "string"
                },
                "documentNumber": {
                  "description": "The documentNumber property for the customerPayment entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the customerPayment entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "amount": {
                  "format": "decimal",
                  "description": "The amount property for the customerPayment entity",
                  "type": "number"
                },
                "appliesToInvoiceId": {
                  "format": "uuid",
                  "description": "The appliesToInvoiceId property for the customerPayment entity",
                  "type": "string"
                },
                "appliesToInvoiceNumber": {
                  "description": "The appliesToInvoiceNumber property for the customerPayment entity",
                  "type": "string"
                },
                "description": {
                  "description": "The description property for the customerPayment entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "comment": {
                  "description": "The comment property for the customerPayment entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimensiontype"
                  }
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the customerPayment entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedcustomerPayment",
            "schema": {
              "$ref": "#/definitions/customerPayment"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customerPaymentJournal_id",
          "description": "id for customerPaymentJournal",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customerPayment_id",
          "description": "id for customerPayment",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customerPayments": {
      "get": {
        "tags": [
          "customerPayment"
        ],
        "summary": "Returns a list of customerPayments",
        "operationId": "getCustomerPayments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "journalDisplayName",
                "lineNumber",
                "customerId",
                "customerNumber",
                "contactId",
                "postingDate",
                "documentNumber",
                "externalDocumentNumber",
                "amount",
                "appliesToInvoiceId",
                "appliesToInvoiceNumber",
                "description",
                "comment",
                "dimensions",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of customerPayments",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/customerPayment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customerPayment"
        ],
        "summary": "Creates a customerPayment in Dynamics 365 Business Central",
        "operationId": "postCustomerPayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the customerPayment entity",
                  "type": "string"
                },
                "journalDisplayName": {
                  "description": "The journalDisplayName property for the customerPayment entity",
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the customerPayment entity",
                  "type": "integer"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the customerPayment entity",
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the customerPayment entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the customerPayment entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "postingDate": {
                  "format": "date-time",
                  "description": "The postingDate property for the customerPayment entity",
                  "type": "string"
                },
                "documentNumber": {
                  "description": "The documentNumber property for the customerPayment entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the customerPayment entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "amount": {
                  "format": "decimal",
                  "description": "The amount property for the customerPayment entity",
                  "type": "number"
                },
                "appliesToInvoiceId": {
                  "format": "uuid",
                  "description": "The appliesToInvoiceId property for the customerPayment entity",
                  "type": "string"
                },
                "appliesToInvoiceNumber": {
                  "description": "The appliesToInvoiceNumber property for the customerPayment entity",
                  "type": "string"
                },
                "description": {
                  "description": "The description property for the customerPayment entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "comment": {
                  "description": "The comment property for the customerPayment entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimensiontype"
                  }
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the customerPayment entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new customerPaymenthas been succesfully created",
            "schema": {
              "$ref": "#/definitions/customerPayment"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customerPayments({customerPayment_id})": {
      "get": {
        "tags": [
          "customerPayment"
        ],
        "summary": "Retrieve the properties and relationships of an customerPayment object for Dynamics 365 Business Central.",
        "operationId": "getCustomerPaymentById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "customer"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "journalDisplayName",
                "lineNumber",
                "customerId",
                "customerNumber",
                "contactId",
                "postingDate",
                "documentNumber",
                "externalDocumentNumber",
                "amount",
                "appliesToInvoiceId",
                "appliesToInvoiceNumber",
                "description",
                "comment",
                "dimensions",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested customerPayment",
            "schema": {
              "$ref": "#/definitions/customerPayment"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customerPayment"
        ],
        "summary": "Delete an customerPayment in Dynamics 365 Business Central",
        "operationId": "deleteCustomerPaymentById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified customerPayment"
          }
        }
      },
      "patch": {
        "tags": [
          "customerPayment"
        ],
        "summary": "Lets the user patch the specified customerPayment",
        "operationId": "patchCustomerPaymentById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the customerPayment entity",
                  "type": "string"
                },
                "journalDisplayName": {
                  "description": "The journalDisplayName property for the customerPayment entity",
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the customerPayment entity",
                  "type": "integer"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the customerPayment entity",
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the customerPayment entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the customerPayment entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "postingDate": {
                  "format": "date-time",
                  "description": "The postingDate property for the customerPayment entity",
                  "type": "string"
                },
                "documentNumber": {
                  "description": "The documentNumber property for the customerPayment entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the customerPayment entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "amount": {
                  "format": "decimal",
                  "description": "The amount property for the customerPayment entity",
                  "type": "number"
                },
                "appliesToInvoiceId": {
                  "format": "uuid",
                  "description": "The appliesToInvoiceId property for the customerPayment entity",
                  "type": "string"
                },
                "appliesToInvoiceNumber": {
                  "description": "The appliesToInvoiceNumber property for the customerPayment entity",
                  "type": "string"
                },
                "description": {
                  "description": "The description property for the customerPayment entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "comment": {
                  "description": "The comment property for the customerPayment entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimensiontype"
                  }
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the customerPayment entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedcustomerPayment",
            "schema": {
              "$ref": "#/definitions/customerPayment"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customerPayment_id",
          "description": "id for customerPayment",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/accounts": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Returns a list of accounts",
        "operationId": "getAccounts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "displayName",
                "category",
                "subCategory",
                "blocked",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of accounts",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/account"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/accounts({account_id})": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Retrieve the properties and relationships of an account object for Dynamics 365 Business Central.",
        "operationId": "getAccountById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "displayName",
                "category",
                "subCategory",
                "blocked",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested account",
            "schema": {
              "$ref": "#/definitions/account"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "account_id",
          "description": "id for account",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/taxGroups": {
      "get": {
        "tags": [
          "taxGroup"
        ],
        "summary": "Returns a list of taxGroups",
        "operationId": "getTaxGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "taxType",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of taxGroups",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxGroup"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "taxGroup"
        ],
        "summary": "Creates a taxGroup in Dynamics 365 Business Central",
        "operationId": "postTaxGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the taxGroup entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the taxGroup entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the taxGroup entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "taxType": {
                  "description": "The taxType property for the taxGroup entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the taxGroup entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new taxGrouphas been succesfully created",
            "schema": {
              "$ref": "#/definitions/taxGroup"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/taxGroups({taxGroup_id})": {
      "get": {
        "tags": [
          "taxGroup"
        ],
        "summary": "Retrieve the properties and relationships of an taxGroup object for Dynamics 365 Business Central.",
        "operationId": "getTaxGroupById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "taxType",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested taxGroup",
            "schema": {
              "$ref": "#/definitions/taxGroup"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "taxGroup"
        ],
        "summary": "Delete an taxGroup in Dynamics 365 Business Central",
        "operationId": "deleteTaxGroupById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified taxGroup"
          }
        }
      },
      "patch": {
        "tags": [
          "taxGroup"
        ],
        "summary": "Lets the user patch the specified taxGroup",
        "operationId": "patchTaxGroupById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the taxGroup entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the taxGroup entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the taxGroup entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "taxType": {
                  "description": "The taxType property for the taxGroup entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the taxGroup entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedtaxGroup",
            "schema": {
              "$ref": "#/definitions/taxGroup"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "taxGroup_id",
          "description": "id for taxGroup",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/journals": {
      "get": {
        "tags": [
          "journal"
        ],
        "summary": "Returns a list of journals",
        "operationId": "getJournals",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "journalLines",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime",
                "balancingAccountId",
                "balancingAccountNumber"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of journals",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/journal"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "journal"
        ],
        "summary": "Creates a journal in Dynamics 365 Business Central",
        "operationId": "postJournal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the journal entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the journal entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the journal entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the journal entity",
                  "type": "string"
                },
                "balancingAccountId": {
                  "format": "uuid",
                  "description": "The balancingAccountId property for the journal entity",
                  "type": "string"
                },
                "balancingAccountNumber": {
                  "description": "The balancingAccountNumber property for the journal entity",
                  "maxLength": 20,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new journalhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/journal"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/journals({journal_id})": {
      "get": {
        "tags": [
          "journal"
        ],
        "summary": "Retrieve the properties and relationships of an journal object for Dynamics 365 Business Central.",
        "operationId": "getJournalById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "journalLines",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime",
                "balancingAccountId",
                "balancingAccountNumber"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested journal",
            "schema": {
              "$ref": "#/definitions/journal"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "journal"
        ],
        "summary": "Delete an journal in Dynamics 365 Business Central",
        "operationId": "deleteJournalById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified journal"
          }
        }
      },
      "patch": {
        "tags": [
          "journal"
        ],
        "summary": "Lets the user patch the specified journal",
        "operationId": "patchJournalById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the journal entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the journal entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the journal entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the journal entity",
                  "type": "string"
                },
                "balancingAccountId": {
                  "format": "uuid",
                  "description": "The balancingAccountId property for the journal entity",
                  "type": "string"
                },
                "balancingAccountNumber": {
                  "description": "The balancingAccountNumber property for the journal entity",
                  "maxLength": 20,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedjournal",
            "schema": {
              "$ref": "#/definitions/journal"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journal_id",
          "description": "id for journal",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/journals({journal_id})/Microsoft.NAV.post": {
      "post": {
        "tags": [
          "journal"
        ],
        "summary": "Performs the post action for journals entity",
        "operationId": "postActionJournals",
        "responses": {
          "204": {
            "description": "Succesfully performed a post action on the journals entity"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journal_id",
          "description": "id for journal",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/journals({journal_id})/journalLines": {
      "get": {
        "tags": [
          "journalLine"
        ],
        "summary": "Returns a list of journalLines",
        "operationId": "getJournalLinesForJournal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "attachments",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "journalDisplayName",
                "lineNumber",
                "accountId",
                "accountNumber",
                "postingDate",
                "documentNumber",
                "externalDocumentNumber",
                "amount",
                "description",
                "comment",
                "dimensions",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of journalLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/journalLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "journalLine"
        ],
        "summary": "Creates a journalLine in Dynamics 365 Business Central",
        "operationId": "postJournalLineForJournal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the journalLine entity",
                  "type": "string"
                },
                "journalDisplayName": {
                  "description": "The journalDisplayName property for the journalLine entity",
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the journalLine entity",
                  "type": "integer"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the journalLine entity",
                  "type": "string"
                },
                "accountNumber": {
                  "description": "The accountNumber property for the journalLine entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingDate": {
                  "format": "date-time",
                  "description": "The postingDate property for the journalLine entity",
                  "type": "string"
                },
                "documentNumber": {
                  "description": "The documentNumber property for the journalLine entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the journalLine entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "amount": {
                  "format": "decimal",
                  "description": "The amount property for the journalLine entity",
                  "type": "number"
                },
                "description": {
                  "description": "The description property for the journalLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "comment": {
                  "description": "The comment property for the journalLine entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimensiontype"
                  }
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the journalLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new journalLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/journalLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journal_id",
          "description": "id for journal",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/journals({journal_id})/journalLines({journalLine_id})": {
      "get": {
        "tags": [
          "journalLine"
        ],
        "summary": "Retrieve the properties and relationships of an journalLine object for Dynamics 365 Business Central.",
        "operationId": "getJournalLineForJournalById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "attachments",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "journalDisplayName",
                "lineNumber",
                "accountId",
                "accountNumber",
                "postingDate",
                "documentNumber",
                "externalDocumentNumber",
                "amount",
                "description",
                "comment",
                "dimensions",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested journalLine",
            "schema": {
              "$ref": "#/definitions/journalLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "journalLine"
        ],
        "summary": "Delete an journalLine in Dynamics 365 Business Central",
        "operationId": "deleteJournalLineForJournalByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified journalLine"
          }
        }
      },
      "patch": {
        "tags": [
          "journalLine"
        ],
        "summary": "Lets the user patch the specified journalLine",
        "operationId": "patchJournalLineForJournalByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the journalLine entity",
                  "type": "string"
                },
                "journalDisplayName": {
                  "description": "The journalDisplayName property for the journalLine entity",
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the journalLine entity",
                  "type": "integer"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the journalLine entity",
                  "type": "string"
                },
                "accountNumber": {
                  "description": "The accountNumber property for the journalLine entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingDate": {
                  "format": "date-time",
                  "description": "The postingDate property for the journalLine entity",
                  "type": "string"
                },
                "documentNumber": {
                  "description": "The documentNumber property for the journalLine entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the journalLine entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "amount": {
                  "format": "decimal",
                  "description": "The amount property for the journalLine entity",
                  "type": "number"
                },
                "description": {
                  "description": "The description property for the journalLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "comment": {
                  "description": "The comment property for the journalLine entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimensiontype"
                  }
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the journalLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedjournalLine",
            "schema": {
              "$ref": "#/definitions/journalLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journal_id",
          "description": "id for journal",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journalLine_id",
          "description": "id for journalLine",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/journals({journal_id})/journalLines({journalLine_id})/attachments": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "Returns a list of attachments",
        "operationId": "getAttachmentsForJournalLineForJournal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "id",
                "fileName",
                "byteSize",
                "content",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of attachments",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/attachments"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "attachments"
        ],
        "summary": "Creates a attachments in Dynamics 365 Business Central",
        "operationId": "postAttachmentsForJournalLineForJournal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the attachments entity",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "description": "The id property for the attachments entity",
                  "type": "string"
                },
                "fileName": {
                  "description": "The fileName property for the attachments entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "byteSize": {
                  "format": "int32",
                  "description": "The byteSize property for the attachments entity",
                  "type": "integer"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the attachments entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the attachments entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new attachmentshas been succesfully created",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journal_id",
          "description": "id for journal",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journalLine_id",
          "description": "id for journalLine",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/journals({journal_id})/journalLines({journalLine_id})/attachments({attachments_parentId},{attachments_id})": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "Retrieve the properties and relationships of an attachments object for Dynamics 365 Business Central.",
        "operationId": "getAttachmentsForJournalLineForJournalByIdByParentId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "id",
                "fileName",
                "byteSize",
                "content",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested attachments",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "attachments"
        ],
        "summary": "Delete an attachments in Dynamics 365 Business Central",
        "operationId": "deleteAttachmentsForJournalLineForJournalByIdByParentIdByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified attachments"
          }
        }
      },
      "patch": {
        "tags": [
          "attachments"
        ],
        "summary": "Lets the user patch the specified attachments",
        "operationId": "patchAttachmentsForJournalLineForJournalByIdByParentIdByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the attachments entity",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "description": "The id property for the attachments entity",
                  "type": "string"
                },
                "fileName": {
                  "description": "The fileName property for the attachments entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "byteSize": {
                  "format": "int32",
                  "description": "The byteSize property for the attachments entity",
                  "type": "integer"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the attachments entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the attachments entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedattachments",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journal_id",
          "description": "id for journal",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journalLine_id",
          "description": "id for journalLine",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "attachments_parentId",
          "description": "parentId for attachments",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "attachments_id",
          "description": "id for attachments",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/journalLines": {
      "get": {
        "tags": [
          "journalLine"
        ],
        "summary": "Returns a list of journalLines",
        "operationId": "getJournalLines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "attachments",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "journalDisplayName",
                "lineNumber",
                "accountId",
                "accountNumber",
                "postingDate",
                "documentNumber",
                "externalDocumentNumber",
                "amount",
                "description",
                "comment",
                "dimensions",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of journalLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/journalLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "journalLine"
        ],
        "summary": "Creates a journalLine in Dynamics 365 Business Central",
        "operationId": "postJournalLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the journalLine entity",
                  "type": "string"
                },
                "journalDisplayName": {
                  "description": "The journalDisplayName property for the journalLine entity",
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the journalLine entity",
                  "type": "integer"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the journalLine entity",
                  "type": "string"
                },
                "accountNumber": {
                  "description": "The accountNumber property for the journalLine entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingDate": {
                  "format": "date-time",
                  "description": "The postingDate property for the journalLine entity",
                  "type": "string"
                },
                "documentNumber": {
                  "description": "The documentNumber property for the journalLine entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the journalLine entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "amount": {
                  "format": "decimal",
                  "description": "The amount property for the journalLine entity",
                  "type": "number"
                },
                "description": {
                  "description": "The description property for the journalLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "comment": {
                  "description": "The comment property for the journalLine entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimensiontype"
                  }
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the journalLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new journalLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/journalLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/journalLines({journalLine_id})": {
      "get": {
        "tags": [
          "journalLine"
        ],
        "summary": "Retrieve the properties and relationships of an journalLine object for Dynamics 365 Business Central.",
        "operationId": "getJournalLineById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "attachments",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "journalDisplayName",
                "lineNumber",
                "accountId",
                "accountNumber",
                "postingDate",
                "documentNumber",
                "externalDocumentNumber",
                "amount",
                "description",
                "comment",
                "dimensions",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested journalLine",
            "schema": {
              "$ref": "#/definitions/journalLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "journalLine"
        ],
        "summary": "Delete an journalLine in Dynamics 365 Business Central",
        "operationId": "deleteJournalLineById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified journalLine"
          }
        }
      },
      "patch": {
        "tags": [
          "journalLine"
        ],
        "summary": "Lets the user patch the specified journalLine",
        "operationId": "patchJournalLineById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the journalLine entity",
                  "type": "string"
                },
                "journalDisplayName": {
                  "description": "The journalDisplayName property for the journalLine entity",
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the journalLine entity",
                  "type": "integer"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the journalLine entity",
                  "type": "string"
                },
                "accountNumber": {
                  "description": "The accountNumber property for the journalLine entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingDate": {
                  "format": "date-time",
                  "description": "The postingDate property for the journalLine entity",
                  "type": "string"
                },
                "documentNumber": {
                  "description": "The documentNumber property for the journalLine entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the journalLine entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "amount": {
                  "format": "decimal",
                  "description": "The amount property for the journalLine entity",
                  "type": "number"
                },
                "description": {
                  "description": "The description property for the journalLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "comment": {
                  "description": "The comment property for the journalLine entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "dimensions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimensiontype"
                  }
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the journalLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedjournalLine",
            "schema": {
              "$ref": "#/definitions/journalLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journalLine_id",
          "description": "id for journalLine",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/journalLines({journalLine_id})/attachments": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "Returns a list of attachments",
        "operationId": "getAttachmentsForJournalLine",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "id",
                "fileName",
                "byteSize",
                "content",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of attachments",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/attachments"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "attachments"
        ],
        "summary": "Creates a attachments in Dynamics 365 Business Central",
        "operationId": "postAttachmentsForJournalLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the attachments entity",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "description": "The id property for the attachments entity",
                  "type": "string"
                },
                "fileName": {
                  "description": "The fileName property for the attachments entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "byteSize": {
                  "format": "int32",
                  "description": "The byteSize property for the attachments entity",
                  "type": "integer"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the attachments entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the attachments entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new attachmentshas been succesfully created",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journalLine_id",
          "description": "id for journalLine",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/journalLines({journalLine_id})/attachments({attachments_parentId},{attachments_id})": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "Retrieve the properties and relationships of an attachments object for Dynamics 365 Business Central.",
        "operationId": "getAttachmentsForJournalLineByIdByParentId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "id",
                "fileName",
                "byteSize",
                "content",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested attachments",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "attachments"
        ],
        "summary": "Delete an attachments in Dynamics 365 Business Central",
        "operationId": "deleteAttachmentsForJournalLineByIdByParentIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified attachments"
          }
        }
      },
      "patch": {
        "tags": [
          "attachments"
        ],
        "summary": "Lets the user patch the specified attachments",
        "operationId": "patchAttachmentsForJournalLineByIdByParentIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the attachments entity",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "description": "The id property for the attachments entity",
                  "type": "string"
                },
                "fileName": {
                  "description": "The fileName property for the attachments entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "byteSize": {
                  "format": "int32",
                  "description": "The byteSize property for the attachments entity",
                  "type": "integer"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the attachments entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the attachments entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedattachments",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "journalLine_id",
          "description": "id for journalLine",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "attachments_parentId",
          "description": "parentId for attachments",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "attachments_id",
          "description": "id for attachments",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/attachments": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "Returns a list of attachments",
        "operationId": "getAttachments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "id",
                "fileName",
                "byteSize",
                "content",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of attachments",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/attachments"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "attachments"
        ],
        "summary": "Creates a attachments in Dynamics 365 Business Central",
        "operationId": "postAttachments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the attachments entity",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "description": "The id property for the attachments entity",
                  "type": "string"
                },
                "fileName": {
                  "description": "The fileName property for the attachments entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "byteSize": {
                  "format": "int32",
                  "description": "The byteSize property for the attachments entity",
                  "type": "integer"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the attachments entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the attachments entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new attachmentshas been succesfully created",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/attachments({attachments_parentId},{attachments_id})": {
      "get": {
        "tags": [
          "attachments"
        ],
        "summary": "Retrieve the properties and relationships of an attachments object for Dynamics 365 Business Central.",
        "operationId": "getAttachmentsByIdByParentId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "id",
                "fileName",
                "byteSize",
                "content",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested attachments",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "attachments"
        ],
        "summary": "Delete an attachments in Dynamics 365 Business Central",
        "operationId": "deleteAttachmentsByIdByParentId",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified attachments"
          }
        }
      },
      "patch": {
        "tags": [
          "attachments"
        ],
        "summary": "Lets the user patch the specified attachments",
        "operationId": "patchAttachmentsByIdByParentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the attachments entity",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "description": "The id property for the attachments entity",
                  "type": "string"
                },
                "fileName": {
                  "description": "The fileName property for the attachments entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "byteSize": {
                  "format": "int32",
                  "description": "The byteSize property for the attachments entity",
                  "type": "integer"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the attachments entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the attachments entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedattachments",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "attachments_parentId",
          "description": "parentId for attachments",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "attachments_id",
          "description": "id for attachments",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/employees": {
      "get": {
        "tags": [
          "employee"
        ],
        "summary": "Returns a list of employees",
        "operationId": "getEmployees",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "picture",
                "defaultDimensions",
                "timeRegistrationEntries"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "displayName",
                "givenName",
                "middleName",
                "surname",
                "jobTitle",
                "address",
                "phoneNumber",
                "mobilePhone",
                "email",
                "personalEmail",
                "employmentDate",
                "terminationDate",
                "status",
                "birthDate",
                "statisticsGroupCode",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of employees",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/employee"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "employee"
        ],
        "summary": "Creates a employee in Dynamics 365 Business Central",
        "operationId": "postEmployee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the employee entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the employee entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the employee entity",
                  "type": "string"
                },
                "givenName": {
                  "description": "The givenName property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "middleName": {
                  "description": "The middleName property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "surname": {
                  "description": "The surname property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "jobTitle": {
                  "description": "The jobTitle property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "address": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "mobilePhone": {
                  "description": "The mobilePhone property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the employee entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "personalEmail": {
                  "description": "The personalEmail property for the employee entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "employmentDate": {
                  "format": "date-time",
                  "description": "The employmentDate property for the employee entity",
                  "type": "string"
                },
                "terminationDate": {
                  "format": "date-time",
                  "description": "The terminationDate property for the employee entity",
                  "type": "string"
                },
                "status": {
                  "description": "The status property for the employee entity",
                  "type": "string"
                },
                "birthDate": {
                  "format": "date-time",
                  "description": "The birthDate property for the employee entity",
                  "type": "string"
                },
                "statisticsGroupCode": {
                  "description": "The statisticsGroupCode property for the employee entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the employee entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new employeehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/employee"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/employees({employee_id})": {
      "get": {
        "tags": [
          "employee"
        ],
        "summary": "Retrieve the properties and relationships of an employee object for Dynamics 365 Business Central.",
        "operationId": "getEmployeeById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "picture",
                "defaultDimensions",
                "timeRegistrationEntries"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "displayName",
                "givenName",
                "middleName",
                "surname",
                "jobTitle",
                "address",
                "phoneNumber",
                "mobilePhone",
                "email",
                "personalEmail",
                "employmentDate",
                "terminationDate",
                "status",
                "birthDate",
                "statisticsGroupCode",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested employee",
            "schema": {
              "$ref": "#/definitions/employee"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "employee"
        ],
        "summary": "Delete an employee in Dynamics 365 Business Central",
        "operationId": "deleteEmployeeById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified employee"
          }
        }
      },
      "patch": {
        "tags": [
          "employee"
        ],
        "summary": "Lets the user patch the specified employee",
        "operationId": "patchEmployeeById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the employee entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the employee entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the employee entity",
                  "type": "string"
                },
                "givenName": {
                  "description": "The givenName property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "middleName": {
                  "description": "The middleName property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "surname": {
                  "description": "The surname property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "jobTitle": {
                  "description": "The jobTitle property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "address": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "mobilePhone": {
                  "description": "The mobilePhone property for the employee entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the employee entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "personalEmail": {
                  "description": "The personalEmail property for the employee entity",
                  "maxLength": 80,
                  "type": "string"
                },
                "employmentDate": {
                  "format": "date-time",
                  "description": "The employmentDate property for the employee entity",
                  "type": "string"
                },
                "terminationDate": {
                  "format": "date-time",
                  "description": "The terminationDate property for the employee entity",
                  "type": "string"
                },
                "status": {
                  "description": "The status property for the employee entity",
                  "type": "string"
                },
                "birthDate": {
                  "format": "date-time",
                  "description": "The birthDate property for the employee entity",
                  "type": "string"
                },
                "statisticsGroupCode": {
                  "description": "The statisticsGroupCode property for the employee entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the employee entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedemployee",
            "schema": {
              "$ref": "#/definitions/employee"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "employee_id",
          "description": "id for employee",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/employees({employee_id})/picture": {
      "get": {
        "tags": [
          "picture"
        ],
        "summary": "Returns a list of picture",
        "operationId": "getPictureForEmployee",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "width",
                "height",
                "contentType",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of picture",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/picture"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "employee_id",
          "description": "id for employee",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/employees({employee_id})/picture({picture_id})": {
      "get": {
        "tags": [
          "picture"
        ],
        "summary": "Retrieve the properties and relationships of an picture object for Dynamics 365 Business Central.",
        "operationId": "getPictureForEmployeeById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "width",
                "height",
                "contentType",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested picture",
            "schema": {
              "$ref": "#/definitions/picture"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "picture"
        ],
        "summary": "Delete an picture in Dynamics 365 Business Central",
        "operationId": "deletePictureForEmployeeByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified picture"
          }
        }
      },
      "patch": {
        "tags": [
          "picture"
        ],
        "summary": "Lets the user patch the specified picture",
        "operationId": "patchPictureForEmployeeByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the picture entity",
                  "type": "string"
                },
                "width": {
                  "format": "int32",
                  "description": "The width property for the picture entity",
                  "type": "integer"
                },
                "height": {
                  "format": "int32",
                  "description": "The height property for the picture entity",
                  "type": "integer"
                },
                "contentType": {
                  "description": "The contentType property for the picture entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the picture entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedpicture",
            "schema": {
              "$ref": "#/definitions/picture"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "employee_id",
          "description": "id for employee",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "picture_id",
          "description": "id for picture",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/employees({employee_id})/defaultDimensions": {
      "get": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Returns a list of defaultDimensions",
        "operationId": "getDefaultDimensionsForEmployee",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account",
                "dimension",
                "dimensionValue"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "dimensionId",
                "dimensionCode",
                "dimensionValueId",
                "dimensionValueCode",
                "postingValidation"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of defaultDimensions",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/defaultDimensions"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Creates a defaultDimensions in Dynamics 365 Business Central",
        "operationId": "postDefaultDimensionsForEmployee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionId": {
                  "format": "uuid",
                  "description": "The dimensionId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionCode": {
                  "description": "The dimensionCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "dimensionValueId": {
                  "format": "uuid",
                  "description": "The dimensionValueId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionValueCode": {
                  "description": "The dimensionValueCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingValidation": {
                  "description": "The postingValidation property for the defaultDimensions entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new defaultDimensionshas been succesfully created",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "employee_id",
          "description": "id for employee",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/employees({employee_id})/defaultDimensions({defaultDimensions_parentId},{defaultDimensions_dimensionId})": {
      "get": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Retrieve the properties and relationships of an defaultDimensions object for Dynamics 365 Business Central.",
        "operationId": "getDefaultDimensionsForEmployeeByDimensionIdByParentId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account",
                "dimension",
                "dimensionValue"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "dimensionId",
                "dimensionCode",
                "dimensionValueId",
                "dimensionValueCode",
                "postingValidation"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested defaultDimensions",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Delete an defaultDimensions in Dynamics 365 Business Central",
        "operationId": "deleteDefaultDimensionsForEmployeeByDimensionIdByParentIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified defaultDimensions"
          }
        }
      },
      "patch": {
        "tags": [
          "defaultDimensions"
        ],
        "summary": "Lets the user patch the specified defaultDimensions",
        "operationId": "patchDefaultDimensionsForEmployeeByDimensionIdByParentIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionId": {
                  "format": "uuid",
                  "description": "The dimensionId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionCode": {
                  "description": "The dimensionCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "dimensionValueId": {
                  "format": "uuid",
                  "description": "The dimensionValueId property for the defaultDimensions entity",
                  "type": "string"
                },
                "dimensionValueCode": {
                  "description": "The dimensionValueCode property for the defaultDimensions entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "postingValidation": {
                  "description": "The postingValidation property for the defaultDimensions entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifieddefaultDimensions",
            "schema": {
              "$ref": "#/definitions/defaultDimensions"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "employee_id",
          "description": "id for employee",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "defaultDimensions_parentId",
          "description": "parentId for defaultDimensions",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "defaultDimensions_dimensionId",
          "description": "dimensionId for defaultDimensions",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/employees({employee_id})/timeRegistrationEntries": {
      "get": {
        "tags": [
          "timeRegistrationEntry"
        ],
        "summary": "Returns a list of timeRegistrationEntries",
        "operationId": "getTimeRegistrationEntriesForEmployee",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "employeeId",
                "employeeNumber",
                "lineNumber",
                "date",
                "quantity",
                "status",
                "unitOfMeasureId",
                "unitOfMeasure",
                "lastModfiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of timeRegistrationEntries",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/timeRegistrationEntry"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "timeRegistrationEntry"
        ],
        "summary": "Creates a timeRegistrationEntry in Dynamics 365 Business Central",
        "operationId": "postTimeRegistrationEntryForEmployee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "employeeId": {
                  "format": "uuid",
                  "description": "The employeeId property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "employeeNumber": {
                  "description": "The employeeNumber property for the timeRegistrationEntry entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the timeRegistrationEntry entity",
                  "type": "integer"
                },
                "date": {
                  "format": "date-time",
                  "description": "The date property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the timeRegistrationEntry entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "lastModfiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModfiedDateTime property for the timeRegistrationEntry entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new timeRegistrationEntryhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/timeRegistrationEntry"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "employee_id",
          "description": "id for employee",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/employees({employee_id})/timeRegistrationEntries({timeRegistrationEntry_id})": {
      "get": {
        "tags": [
          "timeRegistrationEntry"
        ],
        "summary": "Retrieve the properties and relationships of an timeRegistrationEntry object for Dynamics 365 Business Central.",
        "operationId": "getTimeRegistrationEntryForEmployeeById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "employeeId",
                "employeeNumber",
                "lineNumber",
                "date",
                "quantity",
                "status",
                "unitOfMeasureId",
                "unitOfMeasure",
                "lastModfiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested timeRegistrationEntry",
            "schema": {
              "$ref": "#/definitions/timeRegistrationEntry"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "timeRegistrationEntry"
        ],
        "summary": "Delete an timeRegistrationEntry in Dynamics 365 Business Central",
        "operationId": "deleteTimeRegistrationEntryForEmployeeByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified timeRegistrationEntry"
          }
        }
      },
      "patch": {
        "tags": [
          "timeRegistrationEntry"
        ],
        "summary": "Lets the user patch the specified timeRegistrationEntry",
        "operationId": "patchTimeRegistrationEntryForEmployeeByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "employeeId": {
                  "format": "uuid",
                  "description": "The employeeId property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "employeeNumber": {
                  "description": "The employeeNumber property for the timeRegistrationEntry entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the timeRegistrationEntry entity",
                  "type": "integer"
                },
                "date": {
                  "format": "date-time",
                  "description": "The date property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the timeRegistrationEntry entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "lastModfiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModfiedDateTime property for the timeRegistrationEntry entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedtimeRegistrationEntry",
            "schema": {
              "$ref": "#/definitions/timeRegistrationEntry"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "employee_id",
          "description": "id for employee",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "timeRegistrationEntry_id",
          "description": "id for timeRegistrationEntry",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/timeRegistrationEntries": {
      "get": {
        "tags": [
          "timeRegistrationEntry"
        ],
        "summary": "Returns a list of timeRegistrationEntries",
        "operationId": "getTimeRegistrationEntries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "employeeId",
                "employeeNumber",
                "lineNumber",
                "date",
                "quantity",
                "status",
                "unitOfMeasureId",
                "unitOfMeasure",
                "lastModfiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of timeRegistrationEntries",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/timeRegistrationEntry"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "timeRegistrationEntry"
        ],
        "summary": "Creates a timeRegistrationEntry in Dynamics 365 Business Central",
        "operationId": "postTimeRegistrationEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "employeeId": {
                  "format": "uuid",
                  "description": "The employeeId property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "employeeNumber": {
                  "description": "The employeeNumber property for the timeRegistrationEntry entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the timeRegistrationEntry entity",
                  "type": "integer"
                },
                "date": {
                  "format": "date-time",
                  "description": "The date property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the timeRegistrationEntry entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "lastModfiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModfiedDateTime property for the timeRegistrationEntry entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new timeRegistrationEntryhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/timeRegistrationEntry"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/timeRegistrationEntries({timeRegistrationEntry_id})": {
      "get": {
        "tags": [
          "timeRegistrationEntry"
        ],
        "summary": "Retrieve the properties and relationships of an timeRegistrationEntry object for Dynamics 365 Business Central.",
        "operationId": "getTimeRegistrationEntryById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "employeeId",
                "employeeNumber",
                "lineNumber",
                "date",
                "quantity",
                "status",
                "unitOfMeasureId",
                "unitOfMeasure",
                "lastModfiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested timeRegistrationEntry",
            "schema": {
              "$ref": "#/definitions/timeRegistrationEntry"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "timeRegistrationEntry"
        ],
        "summary": "Delete an timeRegistrationEntry in Dynamics 365 Business Central",
        "operationId": "deleteTimeRegistrationEntryById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified timeRegistrationEntry"
          }
        }
      },
      "patch": {
        "tags": [
          "timeRegistrationEntry"
        ],
        "summary": "Lets the user patch the specified timeRegistrationEntry",
        "operationId": "patchTimeRegistrationEntryById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "employeeId": {
                  "format": "uuid",
                  "description": "The employeeId property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "employeeNumber": {
                  "description": "The employeeNumber property for the timeRegistrationEntry entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "lineNumber": {
                  "format": "int32",
                  "description": "The lineNumber property for the timeRegistrationEntry entity",
                  "type": "integer"
                },
                "date": {
                  "format": "date-time",
                  "description": "The date property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the timeRegistrationEntry entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the timeRegistrationEntry entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "lastModfiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModfiedDateTime property for the timeRegistrationEntry entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedtimeRegistrationEntry",
            "schema": {
              "$ref": "#/definitions/timeRegistrationEntry"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "timeRegistrationEntry_id",
          "description": "id for timeRegistrationEntry",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/generalLedgerEntries": {
      "get": {
        "tags": [
          "generalLedgerEntry"
        ],
        "summary": "Returns a list of generalLedgerEntries",
        "operationId": "getGeneralLedgerEntries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "postingDate",
                "documentNumber",
                "documentType",
                "accountId",
                "accountNumber",
                "description",
                "debitAmount",
                "creditAmount",
                "dimensions",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of generalLedgerEntries",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/generalLedgerEntry"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/generalLedgerEntries({generalLedgerEntry_id})": {
      "get": {
        "tags": [
          "generalLedgerEntry"
        ],
        "summary": "Retrieve the properties and relationships of an generalLedgerEntry object for Dynamics 365 Business Central.",
        "operationId": "getGeneralLedgerEntryById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "postingDate",
                "documentNumber",
                "documentType",
                "accountId",
                "accountNumber",
                "description",
                "debitAmount",
                "creditAmount",
                "dimensions",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested generalLedgerEntry",
            "schema": {
              "$ref": "#/definitions/generalLedgerEntry"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "generalLedgerEntry_id",
          "description": "id for generalLedgerEntry",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/companies({company_id})/currencies": {
      "get": {
        "tags": [
          "currency"
        ],
        "summary": "Returns a list of currencies",
        "operationId": "getCurrencies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "symbol",
                "amountDecimalPlaces",
                "amountRoundingPrecision",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of currencies",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/currency"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "currency"
        ],
        "summary": "Creates a currency in Dynamics 365 Business Central",
        "operationId": "postCurrency",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the currency entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the currency entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the currency entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "symbol": {
                  "description": "The symbol property for the currency entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "amountDecimalPlaces": {
                  "description": "The amountDecimalPlaces property for the currency entity",
                  "maxLength": 5,
                  "type": "string"
                },
                "amountRoundingPrecision": {
                  "format": "decimal",
                  "description": "The amountRoundingPrecision property for the currency entity",
                  "type": "number"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the currency entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new currencyhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/currency"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/currencies({currency_id})": {
      "get": {
        "tags": [
          "currency"
        ],
        "summary": "Retrieve the properties and relationships of an currency object for Dynamics 365 Business Central.",
        "operationId": "getCurrencyById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "symbol",
                "amountDecimalPlaces",
                "amountRoundingPrecision",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested currency",
            "schema": {
              "$ref": "#/definitions/currency"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "currency"
        ],
        "summary": "Delete an currency in Dynamics 365 Business Central",
        "operationId": "deleteCurrencyById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified currency"
          }
        }
      },
      "patch": {
        "tags": [
          "currency"
        ],
        "summary": "Lets the user patch the specified currency",
        "operationId": "patchCurrencyById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the currency entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the currency entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the currency entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "symbol": {
                  "description": "The symbol property for the currency entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "amountDecimalPlaces": {
                  "description": "The amountDecimalPlaces property for the currency entity",
                  "maxLength": 5,
                  "type": "string"
                },
                "amountRoundingPrecision": {
                  "format": "decimal",
                  "description": "The amountRoundingPrecision property for the currency entity",
                  "type": "number"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the currency entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedcurrency",
            "schema": {
              "$ref": "#/definitions/currency"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "currency_id",
          "description": "id for currency",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/paymentMethods": {
      "get": {
        "tags": [
          "paymentMethod"
        ],
        "summary": "Returns a list of paymentMethods",
        "operationId": "getPaymentMethods",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of paymentMethods",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/paymentMethod"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "paymentMethod"
        ],
        "summary": "Creates a paymentMethod in Dynamics 365 Business Central",
        "operationId": "postPaymentMethod",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the paymentMethod entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the paymentMethod entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the paymentMethod entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the paymentMethod entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new paymentMethodhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/paymentMethod"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/paymentMethods({paymentMethod_id})": {
      "get": {
        "tags": [
          "paymentMethod"
        ],
        "summary": "Retrieve the properties and relationships of an paymentMethod object for Dynamics 365 Business Central.",
        "operationId": "getPaymentMethodById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested paymentMethod",
            "schema": {
              "$ref": "#/definitions/paymentMethod"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "paymentMethod"
        ],
        "summary": "Delete an paymentMethod in Dynamics 365 Business Central",
        "operationId": "deletePaymentMethodById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified paymentMethod"
          }
        }
      },
      "patch": {
        "tags": [
          "paymentMethod"
        ],
        "summary": "Lets the user patch the specified paymentMethod",
        "operationId": "patchPaymentMethodById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the paymentMethod entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the paymentMethod entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the paymentMethod entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the paymentMethod entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedpaymentMethod",
            "schema": {
              "$ref": "#/definitions/paymentMethod"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "paymentMethod_id",
          "description": "id for paymentMethod",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/dimensions": {
      "get": {
        "tags": [
          "dimension"
        ],
        "summary": "Returns a list of dimensions",
        "operationId": "getDimensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "dimensionValues"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of dimensions",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimension"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/dimensions({dimension_id})": {
      "get": {
        "tags": [
          "dimension"
        ],
        "summary": "Retrieve the properties and relationships of an dimension object for Dynamics 365 Business Central.",
        "operationId": "getDimensionById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "dimensionValues"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested dimension",
            "schema": {
              "$ref": "#/definitions/dimension"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "dimension_id",
          "description": "id for dimension",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/dimensions({dimension_id})/dimensionValues": {
      "get": {
        "tags": [
          "dimensionValue"
        ],
        "summary": "Returns a list of dimensionValues",
        "operationId": "getDimensionValuesForDimension",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of dimensionValues",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimensionValue"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "dimension_id",
          "description": "id for dimension",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/dimensions({dimension_id})/dimensionValues({dimensionValue_id})": {
      "get": {
        "tags": [
          "dimensionValue"
        ],
        "summary": "Retrieve the properties and relationships of an dimensionValue object for Dynamics 365 Business Central.",
        "operationId": "getDimensionValueForDimensionById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested dimensionValue",
            "schema": {
              "$ref": "#/definitions/dimensionValue"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "dimension_id",
          "description": "id for dimension",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "dimensionValue_id",
          "description": "id for dimensionValue",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/dimensionValues": {
      "get": {
        "tags": [
          "dimensionValue"
        ],
        "summary": "Returns a list of dimensionValues",
        "operationId": "getDimensionValues",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of dimensionValues",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimensionValue"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/dimensionValues({dimensionValue_id})": {
      "get": {
        "tags": [
          "dimensionValue"
        ],
        "summary": "Retrieve the properties and relationships of an dimensionValue object for Dynamics 365 Business Central.",
        "operationId": "getDimensionValueById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested dimensionValue",
            "schema": {
              "$ref": "#/definitions/dimensionValue"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "dimensionValue_id",
          "description": "id for dimensionValue",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/dimensionLines": {
      "get": {
        "tags": [
          "dimensionLine"
        ],
        "summary": "Returns a list of dimensionLines",
        "operationId": "getDimensionLines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "dimension"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "id",
                "code",
                "displayName",
                "valueId",
                "valueCode",
                "valueDisplayName"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of dimensionLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/dimensionLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "dimensionLine"
        ],
        "summary": "Creates a dimensionLine in Dynamics 365 Business Central",
        "operationId": "postDimensionLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the dimensionLine entity",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "description": "The id property for the dimensionLine entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the dimensionLine entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the dimensionLine entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "valueId": {
                  "format": "uuid",
                  "description": "The valueId property for the dimensionLine entity",
                  "type": "string"
                },
                "valueCode": {
                  "description": "The valueCode property for the dimensionLine entity",
                  "type": "string"
                },
                "valueDisplayName": {
                  "description": "The valueDisplayName property for the dimensionLine entity",
                  "maxLength": 50,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new dimensionLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/dimensionLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/dimensionLines({dimensionLine_parentId},{dimensionLine_id})": {
      "get": {
        "tags": [
          "dimensionLine"
        ],
        "summary": "Retrieve the properties and relationships of an dimensionLine object for Dynamics 365 Business Central.",
        "operationId": "getDimensionLineByIdByParentId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "dimension"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "parentId",
                "id",
                "code",
                "displayName",
                "valueId",
                "valueCode",
                "valueDisplayName"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested dimensionLine",
            "schema": {
              "$ref": "#/definitions/dimensionLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dimensionLine"
        ],
        "summary": "Delete an dimensionLine in Dynamics 365 Business Central",
        "operationId": "deleteDimensionLineByIdByParentId",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified dimensionLine"
          }
        }
      },
      "patch": {
        "tags": [
          "dimensionLine"
        ],
        "summary": "Lets the user patch the specified dimensionLine",
        "operationId": "patchDimensionLineByIdByParentId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "parentId": {
                  "format": "uuid",
                  "description": "The parentId property for the dimensionLine entity",
                  "type": "string"
                },
                "id": {
                  "format": "uuid",
                  "description": "The id property for the dimensionLine entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the dimensionLine entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the dimensionLine entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "valueId": {
                  "format": "uuid",
                  "description": "The valueId property for the dimensionLine entity",
                  "type": "string"
                },
                "valueCode": {
                  "description": "The valueCode property for the dimensionLine entity",
                  "type": "string"
                },
                "valueDisplayName": {
                  "description": "The valueDisplayName property for the dimensionLine entity",
                  "maxLength": 50,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifieddimensionLine",
            "schema": {
              "$ref": "#/definitions/dimensionLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "dimensionLine_parentId",
          "description": "parentId for dimensionLine",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "dimensionLine_id",
          "description": "id for dimensionLine",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/paymentTerms": {
      "get": {
        "tags": [
          "paymentTerm"
        ],
        "summary": "Returns a list of paymentTerms",
        "operationId": "getPaymentTerms",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "dueDateCalculation",
                "discountDateCalculation",
                "discountPercent",
                "calculateDiscountOnCreditMemos",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of paymentTerms",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/paymentTerm"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "paymentTerm"
        ],
        "summary": "Creates a paymentTerm in Dynamics 365 Business Central",
        "operationId": "postPaymentTerm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the paymentTerm entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the paymentTerm entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the paymentTerm entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "dueDateCalculation": {
                  "description": "The dueDateCalculation property for the paymentTerm entity",
                  "type": "string"
                },
                "discountDateCalculation": {
                  "description": "The discountDateCalculation property for the paymentTerm entity",
                  "type": "string"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the paymentTerm entity",
                  "type": "number"
                },
                "calculateDiscountOnCreditMemos": {
                  "description": "The calculateDiscountOnCreditMemos property for the paymentTerm entity",
                  "type": "boolean"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the paymentTerm entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new paymentTermhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/paymentTerm"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/paymentTerms({paymentTerm_id})": {
      "get": {
        "tags": [
          "paymentTerm"
        ],
        "summary": "Retrieve the properties and relationships of an paymentTerm object for Dynamics 365 Business Central.",
        "operationId": "getPaymentTermById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "dueDateCalculation",
                "discountDateCalculation",
                "discountPercent",
                "calculateDiscountOnCreditMemos",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested paymentTerm",
            "schema": {
              "$ref": "#/definitions/paymentTerm"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "paymentTerm"
        ],
        "summary": "Delete an paymentTerm in Dynamics 365 Business Central",
        "operationId": "deletePaymentTermById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified paymentTerm"
          }
        }
      },
      "patch": {
        "tags": [
          "paymentTerm"
        ],
        "summary": "Lets the user patch the specified paymentTerm",
        "operationId": "patchPaymentTermById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the paymentTerm entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the paymentTerm entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the paymentTerm entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "dueDateCalculation": {
                  "description": "The dueDateCalculation property for the paymentTerm entity",
                  "type": "string"
                },
                "discountDateCalculation": {
                  "description": "The discountDateCalculation property for the paymentTerm entity",
                  "type": "string"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the paymentTerm entity",
                  "type": "number"
                },
                "calculateDiscountOnCreditMemos": {
                  "description": "The calculateDiscountOnCreditMemos property for the paymentTerm entity",
                  "type": "boolean"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the paymentTerm entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedpaymentTerm",
            "schema": {
              "$ref": "#/definitions/paymentTerm"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "paymentTerm_id",
          "description": "id for paymentTerm",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/shipmentMethods": {
      "get": {
        "tags": [
          "shipmentMethod"
        ],
        "summary": "Returns a list of shipmentMethods",
        "operationId": "getShipmentMethods",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of shipmentMethods",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/shipmentMethod"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "shipmentMethod"
        ],
        "summary": "Creates a shipmentMethod in Dynamics 365 Business Central",
        "operationId": "postShipmentMethod",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the shipmentMethod entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the shipmentMethod entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the shipmentMethod entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the shipmentMethod entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new shipmentMethodhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/shipmentMethod"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/shipmentMethods({shipmentMethod_id})": {
      "get": {
        "tags": [
          "shipmentMethod"
        ],
        "summary": "Retrieve the properties and relationships of an shipmentMethod object for Dynamics 365 Business Central.",
        "operationId": "getShipmentMethodById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested shipmentMethod",
            "schema": {
              "$ref": "#/definitions/shipmentMethod"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "shipmentMethod"
        ],
        "summary": "Delete an shipmentMethod in Dynamics 365 Business Central",
        "operationId": "deleteShipmentMethodById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified shipmentMethod"
          }
        }
      },
      "patch": {
        "tags": [
          "shipmentMethod"
        ],
        "summary": "Lets the user patch the specified shipmentMethod",
        "operationId": "patchShipmentMethodById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the shipmentMethod entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the shipmentMethod entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the shipmentMethod entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the shipmentMethod entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedshipmentMethod",
            "schema": {
              "$ref": "#/definitions/shipmentMethod"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "shipmentMethod_id",
          "description": "id for shipmentMethod",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/itemCategories": {
      "get": {
        "tags": [
          "itemCategory"
        ],
        "summary": "Returns a list of itemCategories",
        "operationId": "getItemCategories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of itemCategories",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/itemCategory"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "itemCategory"
        ],
        "summary": "Creates a itemCategory in Dynamics 365 Business Central",
        "operationId": "postItemCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the itemCategory entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the itemCategory entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the itemCategory entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the itemCategory entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new itemCategoryhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/itemCategory"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/itemCategories({itemCategory_id})": {
      "get": {
        "tags": [
          "itemCategory"
        ],
        "summary": "Retrieve the properties and relationships of an itemCategory object for Dynamics 365 Business Central.",
        "operationId": "getItemCategoryById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested itemCategory",
            "schema": {
              "$ref": "#/definitions/itemCategory"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "itemCategory"
        ],
        "summary": "Delete an itemCategory in Dynamics 365 Business Central",
        "operationId": "deleteItemCategoryById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified itemCategory"
          }
        }
      },
      "patch": {
        "tags": [
          "itemCategory"
        ],
        "summary": "Lets the user patch the specified itemCategory",
        "operationId": "patchItemCategoryById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the itemCategory entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the itemCategory entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the itemCategory entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the itemCategory entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifieditemCategory",
            "schema": {
              "$ref": "#/definitions/itemCategory"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "itemCategory_id",
          "description": "id for itemCategory",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/cashFlowStatement": {
      "get": {
        "tags": [
          "cashFlowStatement"
        ],
        "summary": "Returns a list of cashFlowStatement",
        "operationId": "getCashFlowStatement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "lineNumber",
                "display",
                "netChange",
                "lineType",
                "indentation",
                "dateFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of cashFlowStatement",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/cashFlowStatement"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/cashFlowStatement({cashFlowStatement_lineNumber})": {
      "get": {
        "tags": [
          "cashFlowStatement"
        ],
        "summary": "Retrieve the properties and relationships of an cashFlowStatement object for Dynamics 365 Business Central.",
        "operationId": "getCashFlowStatementByLineNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "lineNumber",
                "display",
                "netChange",
                "lineType",
                "indentation",
                "dateFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested cashFlowStatement",
            "schema": {
              "$ref": "#/definitions/cashFlowStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "cashFlowStatement_lineNumber",
          "description": "lineNumber for cashFlowStatement",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/companies({company_id})/countriesRegions": {
      "get": {
        "tags": [
          "countryRegion"
        ],
        "summary": "Returns a list of countriesRegions",
        "operationId": "getCountriesRegions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "addressFormat",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of countriesRegions",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/countryRegion"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "countryRegion"
        ],
        "summary": "Creates a countryRegion in Dynamics 365 Business Central",
        "operationId": "postCountryRegion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the countryRegion entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the countryRegion entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the countryRegion entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "addressFormat": {
                  "description": "The addressFormat property for the countryRegion entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the countryRegion entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new countryRegionhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/countryRegion"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/countriesRegions({countryRegion_id})": {
      "get": {
        "tags": [
          "countryRegion"
        ],
        "summary": "Retrieve the properties and relationships of an countryRegion object for Dynamics 365 Business Central.",
        "operationId": "getCountryRegionById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "addressFormat",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested countryRegion",
            "schema": {
              "$ref": "#/definitions/countryRegion"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "countryRegion"
        ],
        "summary": "Delete an countryRegion in Dynamics 365 Business Central",
        "operationId": "deleteCountryRegionById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified countryRegion"
          }
        }
      },
      "patch": {
        "tags": [
          "countryRegion"
        ],
        "summary": "Lets the user patch the specified countryRegion",
        "operationId": "patchCountryRegionById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the countryRegion entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the countryRegion entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the countryRegion entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "addressFormat": {
                  "description": "The addressFormat property for the countryRegion entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the countryRegion entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedcountryRegion",
            "schema": {
              "$ref": "#/definitions/countryRegion"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "countryRegion_id",
          "description": "id for countryRegion",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesOrders": {
      "get": {
        "tags": [
          "salesOrder"
        ],
        "summary": "Returns a list of salesOrders",
        "operationId": "getSalesOrders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "salesOrderLines",
                "customer",
                "currency",
                "paymentTerm"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "externalDocumentNumber",
                "orderDate",
                "customerId",
                "contactId",
                "customerNumber",
                "customerName",
                "billToName",
                "billToCustomerId",
                "billToCustomerNumber",
                "shipToName",
                "shipToContact",
                "sellingPostalAddress",
                "billingPostalAddress",
                "shippingPostalAddress",
                "currencyId",
                "currencyCode",
                "pricesIncludeTax",
                "paymentTermsId",
                "salesperson",
                "partialShipping",
                "requestedDeliveryDate",
                "discountAmount",
                "discountAppliedBeforeTax",
                "totalAmountExcludingTax",
                "totalTaxAmount",
                "totalAmountIncludingTax",
                "fullyShipped",
                "status",
                "lastModifiedDateTime",
                "phoneNumber",
                "email"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesOrders",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesOrder"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesOrder"
        ],
        "summary": "Creates a salesOrder in Dynamics 365 Business Central",
        "operationId": "postSalesOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the salesOrder entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the salesOrder entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the salesOrder entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "orderDate": {
                  "format": "date-time",
                  "description": "The orderDate property for the salesOrder entity",
                  "type": "string"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the salesOrder entity",
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the salesOrder entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the salesOrder entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "customerName": {
                  "description": "The customerName property for the salesOrder entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToName": {
                  "description": "The billToName property for the salesOrder entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToCustomerId": {
                  "format": "uuid",
                  "description": "The billToCustomerId property for the salesOrder entity",
                  "type": "string"
                },
                "billToCustomerNumber": {
                  "description": "The billToCustomerNumber property for the salesOrder entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "shipToName": {
                  "description": "The shipToName property for the salesOrder entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "shipToContact": {
                  "description": "The shipToContact property for the salesOrder entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "sellingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "billingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "shippingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the salesOrder entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the salesOrder entity",
                  "type": "string"
                },
                "pricesIncludeTax": {
                  "description": "The pricesIncludeTax property for the salesOrder entity",
                  "type": "boolean"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the salesOrder entity",
                  "type": "string"
                },
                "salesperson": {
                  "description": "The salesperson property for the salesOrder entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "partialShipping": {
                  "description": "The partialShipping property for the salesOrder entity",
                  "type": "boolean"
                },
                "requestedDeliveryDate": {
                  "format": "date-time",
                  "description": "The requestedDeliveryDate property for the salesOrder entity",
                  "type": "string"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesOrder entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesOrder entity",
                  "type": "boolean"
                },
                "totalAmountExcludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountExcludingTax property for the salesOrder entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesOrder entity",
                  "type": "number"
                },
                "totalAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountIncludingTax property for the salesOrder entity",
                  "type": "number"
                },
                "fullyShipped": {
                  "description": "The fullyShipped property for the salesOrder entity",
                  "type": "boolean"
                },
                "status": {
                  "description": "The status property for the salesOrder entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the salesOrder entity",
                  "type": "string"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the salesOrder entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the salesOrder entity",
                  "maxLength": 80,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesOrderhas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesOrder"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesOrders({salesOrder_id})": {
      "get": {
        "tags": [
          "salesOrder"
        ],
        "summary": "Retrieve the properties and relationships of an salesOrder object for Dynamics 365 Business Central.",
        "operationId": "getSalesOrderById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "salesOrderLines",
                "customer",
                "currency",
                "paymentTerm"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "externalDocumentNumber",
                "orderDate",
                "customerId",
                "contactId",
                "customerNumber",
                "customerName",
                "billToName",
                "billToCustomerId",
                "billToCustomerNumber",
                "shipToName",
                "shipToContact",
                "sellingPostalAddress",
                "billingPostalAddress",
                "shippingPostalAddress",
                "currencyId",
                "currencyCode",
                "pricesIncludeTax",
                "paymentTermsId",
                "salesperson",
                "partialShipping",
                "requestedDeliveryDate",
                "discountAmount",
                "discountAppliedBeforeTax",
                "totalAmountExcludingTax",
                "totalTaxAmount",
                "totalAmountIncludingTax",
                "fullyShipped",
                "status",
                "lastModifiedDateTime",
                "phoneNumber",
                "email"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesOrder",
            "schema": {
              "$ref": "#/definitions/salesOrder"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesOrder"
        ],
        "summary": "Delete an salesOrder in Dynamics 365 Business Central",
        "operationId": "deleteSalesOrderById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesOrder"
          }
        }
      },
      "patch": {
        "tags": [
          "salesOrder"
        ],
        "summary": "Lets the user patch the specified salesOrder",
        "operationId": "patchSalesOrderById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the salesOrder entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the salesOrder entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the salesOrder entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "orderDate": {
                  "format": "date-time",
                  "description": "The orderDate property for the salesOrder entity",
                  "type": "string"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the salesOrder entity",
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the salesOrder entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the salesOrder entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "customerName": {
                  "description": "The customerName property for the salesOrder entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToName": {
                  "description": "The billToName property for the salesOrder entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToCustomerId": {
                  "format": "uuid",
                  "description": "The billToCustomerId property for the salesOrder entity",
                  "type": "string"
                },
                "billToCustomerNumber": {
                  "description": "The billToCustomerNumber property for the salesOrder entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "shipToName": {
                  "description": "The shipToName property for the salesOrder entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "shipToContact": {
                  "description": "The shipToContact property for the salesOrder entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "sellingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "billingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "shippingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the salesOrder entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the salesOrder entity",
                  "type": "string"
                },
                "pricesIncludeTax": {
                  "description": "The pricesIncludeTax property for the salesOrder entity",
                  "type": "boolean"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the salesOrder entity",
                  "type": "string"
                },
                "salesperson": {
                  "description": "The salesperson property for the salesOrder entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "partialShipping": {
                  "description": "The partialShipping property for the salesOrder entity",
                  "type": "boolean"
                },
                "requestedDeliveryDate": {
                  "format": "date-time",
                  "description": "The requestedDeliveryDate property for the salesOrder entity",
                  "type": "string"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesOrder entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesOrder entity",
                  "type": "boolean"
                },
                "totalAmountExcludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountExcludingTax property for the salesOrder entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesOrder entity",
                  "type": "number"
                },
                "totalAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountIncludingTax property for the salesOrder entity",
                  "type": "number"
                },
                "fullyShipped": {
                  "description": "The fullyShipped property for the salesOrder entity",
                  "type": "boolean"
                },
                "status": {
                  "description": "The status property for the salesOrder entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the salesOrder entity",
                  "type": "string"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the salesOrder entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the salesOrder entity",
                  "maxLength": 80,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesOrder",
            "schema": {
              "$ref": "#/definitions/salesOrder"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesOrder_id",
          "description": "id for salesOrder",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesOrders({salesOrder_id})/salesOrderLines": {
      "get": {
        "tags": [
          "salesOrderLine"
        ],
        "summary": "Returns a list of salesOrderLines",
        "operationId": "getSalesOrderLinesForSalesOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "quantity",
                "unitPrice",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate",
                "shippedQuantity",
                "invoicedQuantity",
                "invoiceQuantity",
                "shipQuantity"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesOrderLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesOrderLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesOrderLine"
        ],
        "summary": "Creates a salesOrderLine in Dynamics 365 Business Central",
        "operationId": "postSalesOrderLineForSalesOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesOrderLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesOrderLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesOrderLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesOrderLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesOrderLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesOrderLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesOrderLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesOrderLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesOrderLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesOrderLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesOrderLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesOrderLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesOrderLine entity",
                  "type": "string"
                },
                "shippedQuantity": {
                  "format": "decimal",
                  "description": "The shippedQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoicedQuantity": {
                  "format": "decimal",
                  "description": "The invoicedQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoiceQuantity": {
                  "format": "decimal",
                  "description": "The invoiceQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "shipQuantity": {
                  "format": "decimal",
                  "description": "The shipQuantity property for the salesOrderLine entity",
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesOrderLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesOrderLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesOrder_id",
          "description": "id for salesOrder",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesOrders({salesOrder_id})/salesOrderLines('{salesOrderLine_id}')": {
      "get": {
        "tags": [
          "salesOrderLine"
        ],
        "summary": "Retrieve the properties and relationships of an salesOrderLine object for Dynamics 365 Business Central.",
        "operationId": "getSalesOrderLineForSalesOrderById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "quantity",
                "unitPrice",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate",
                "shippedQuantity",
                "invoicedQuantity",
                "invoiceQuantity",
                "shipQuantity"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesOrderLine",
            "schema": {
              "$ref": "#/definitions/salesOrderLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesOrderLine"
        ],
        "summary": "Delete an salesOrderLine in Dynamics 365 Business Central",
        "operationId": "deleteSalesOrderLineForSalesOrderByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesOrderLine"
          }
        }
      },
      "patch": {
        "tags": [
          "salesOrderLine"
        ],
        "summary": "Lets the user patch the specified salesOrderLine",
        "operationId": "patchSalesOrderLineForSalesOrderByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesOrderLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesOrderLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesOrderLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesOrderLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesOrderLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesOrderLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesOrderLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesOrderLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesOrderLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesOrderLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesOrderLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesOrderLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesOrderLine entity",
                  "type": "string"
                },
                "shippedQuantity": {
                  "format": "decimal",
                  "description": "The shippedQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoicedQuantity": {
                  "format": "decimal",
                  "description": "The invoicedQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoiceQuantity": {
                  "format": "decimal",
                  "description": "The invoiceQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "shipQuantity": {
                  "format": "decimal",
                  "description": "The shipQuantity property for the salesOrderLine entity",
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesOrderLine",
            "schema": {
              "$ref": "#/definitions/salesOrderLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesOrder_id",
          "description": "id for salesOrder",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesOrderLine_id",
          "description": "id for salesOrderLine",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/salesOrderLines": {
      "get": {
        "tags": [
          "salesOrderLine"
        ],
        "summary": "Returns a list of salesOrderLines",
        "operationId": "getSalesOrderLines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "quantity",
                "unitPrice",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate",
                "shippedQuantity",
                "invoicedQuantity",
                "invoiceQuantity",
                "shipQuantity"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesOrderLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesOrderLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesOrderLine"
        ],
        "summary": "Creates a salesOrderLine in Dynamics 365 Business Central",
        "operationId": "postSalesOrderLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesOrderLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesOrderLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesOrderLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesOrderLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesOrderLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesOrderLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesOrderLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesOrderLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesOrderLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesOrderLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesOrderLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesOrderLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesOrderLine entity",
                  "type": "string"
                },
                "shippedQuantity": {
                  "format": "decimal",
                  "description": "The shippedQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoicedQuantity": {
                  "format": "decimal",
                  "description": "The invoicedQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoiceQuantity": {
                  "format": "decimal",
                  "description": "The invoiceQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "shipQuantity": {
                  "format": "decimal",
                  "description": "The shipQuantity property for the salesOrderLine entity",
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesOrderLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesOrderLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesOrderLines('{salesOrderLine_id}')": {
      "get": {
        "tags": [
          "salesOrderLine"
        ],
        "summary": "Retrieve the properties and relationships of an salesOrderLine object for Dynamics 365 Business Central.",
        "operationId": "getSalesOrderLineById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "quantity",
                "unitPrice",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate",
                "shippedQuantity",
                "invoicedQuantity",
                "invoiceQuantity",
                "shipQuantity"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesOrderLine",
            "schema": {
              "$ref": "#/definitions/salesOrderLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesOrderLine"
        ],
        "summary": "Delete an salesOrderLine in Dynamics 365 Business Central",
        "operationId": "deleteSalesOrderLineById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesOrderLine"
          }
        }
      },
      "patch": {
        "tags": [
          "salesOrderLine"
        ],
        "summary": "Lets the user patch the specified salesOrderLine",
        "operationId": "patchSalesOrderLineById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesOrderLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesOrderLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesOrderLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesOrderLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesOrderLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesOrderLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesOrderLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesOrderLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesOrderLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesOrderLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesOrderLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesOrderLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesOrderLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesOrderLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesOrderLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesOrderLine entity",
                  "type": "string"
                },
                "shippedQuantity": {
                  "format": "decimal",
                  "description": "The shippedQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoicedQuantity": {
                  "format": "decimal",
                  "description": "The invoicedQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "invoiceQuantity": {
                  "format": "decimal",
                  "description": "The invoiceQuantity property for the salesOrderLine entity",
                  "type": "number"
                },
                "shipQuantity": {
                  "format": "decimal",
                  "description": "The shipQuantity property for the salesOrderLine entity",
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesOrderLine",
            "schema": {
              "$ref": "#/definitions/salesOrderLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesOrderLine_id",
          "description": "id for salesOrderLine",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/retainedEarningsStatement": {
      "get": {
        "tags": [
          "retainedEarningsStatement"
        ],
        "summary": "Returns a list of retainedEarningsStatement",
        "operationId": "getRetainedEarningsStatement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "lineNumber",
                "display",
                "netChange",
                "lineType",
                "indentation",
                "dateFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of retainedEarningsStatement",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/retainedEarningsStatement"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/retainedEarningsStatement({retainedEarningsStatement_lineNumber})": {
      "get": {
        "tags": [
          "retainedEarningsStatement"
        ],
        "summary": "Retrieve the properties and relationships of an retainedEarningsStatement object for Dynamics 365 Business Central.",
        "operationId": "getRetainedEarningsStatementByLineNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "lineNumber",
                "display",
                "netChange",
                "lineType",
                "indentation",
                "dateFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested retainedEarningsStatement",
            "schema": {
              "$ref": "#/definitions/retainedEarningsStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "retainedEarningsStatement_lineNumber",
          "description": "lineNumber for retainedEarningsStatement",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/companies({company_id})/unitsOfMeasure": {
      "get": {
        "tags": [
          "unitOfMeasure"
        ],
        "summary": "Returns a list of unitsOfMeasure",
        "operationId": "getUnitsOfMeasure",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "internationalStandardCode",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of unitsOfMeasure",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unitOfMeasure"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "unitOfMeasure"
        ],
        "summary": "Creates a unitOfMeasure in Dynamics 365 Business Central",
        "operationId": "postUnitOfMeasure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the unitOfMeasure entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the unitOfMeasure entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the unitOfMeasure entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "internationalStandardCode": {
                  "description": "The internationalStandardCode property for the unitOfMeasure entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the unitOfMeasure entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new unitOfMeasurehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/unitOfMeasure"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/unitsOfMeasure({unitOfMeasure_id})": {
      "get": {
        "tags": [
          "unitOfMeasure"
        ],
        "summary": "Retrieve the properties and relationships of an unitOfMeasure object for Dynamics 365 Business Central.",
        "operationId": "getUnitOfMeasureById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "internationalStandardCode",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested unitOfMeasure",
            "schema": {
              "$ref": "#/definitions/unitOfMeasure"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "unitOfMeasure"
        ],
        "summary": "Delete an unitOfMeasure in Dynamics 365 Business Central",
        "operationId": "deleteUnitOfMeasureById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified unitOfMeasure"
          }
        }
      },
      "patch": {
        "tags": [
          "unitOfMeasure"
        ],
        "summary": "Lets the user patch the specified unitOfMeasure",
        "operationId": "patchUnitOfMeasureById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the unitOfMeasure entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the unitOfMeasure entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the unitOfMeasure entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "internationalStandardCode": {
                  "description": "The internationalStandardCode property for the unitOfMeasure entity",
                  "maxLength": 10,
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the unitOfMeasure entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedunitOfMeasure",
            "schema": {
              "$ref": "#/definitions/unitOfMeasure"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "unitOfMeasure_id",
          "description": "id for unitOfMeasure",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/agedAccountsReceivable": {
      "get": {
        "tags": [
          "agedAccountsReceivable"
        ],
        "summary": "Returns a list of agedAccountsReceivable",
        "operationId": "getAgedAccountsReceivable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "customerId",
                "customerNumber",
                "name",
                "currencyCode",
                "balanceDue",
                "currentAmount",
                "period1Amount",
                "period2Amount",
                "period3Amount",
                "agedAsOfDate",
                "periodLengthFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of agedAccountsReceivable",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/agedAccountsReceivable"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/agedAccountsReceivable({agedAccountsReceivable_customerId})": {
      "get": {
        "tags": [
          "agedAccountsReceivable"
        ],
        "summary": "Retrieve the properties and relationships of an agedAccountsReceivable object for Dynamics 365 Business Central.",
        "operationId": "getAgedAccountsReceivableByCustomerId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "customerId",
                "customerNumber",
                "name",
                "currencyCode",
                "balanceDue",
                "currentAmount",
                "period1Amount",
                "period2Amount",
                "period3Amount",
                "agedAsOfDate",
                "periodLengthFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested agedAccountsReceivable",
            "schema": {
              "$ref": "#/definitions/agedAccountsReceivable"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "agedAccountsReceivable_customerId",
          "description": "customerId for agedAccountsReceivable",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/agedAccountsPayable": {
      "get": {
        "tags": [
          "agedAccountsPayable"
        ],
        "summary": "Returns a list of agedAccountsPayable",
        "operationId": "getAgedAccountsPayable",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "vendorId",
                "vendorNumber",
                "name",
                "currencyCode",
                "balanceDue",
                "currentAmount",
                "period1Amount",
                "period2Amount",
                "period3Amount",
                "agedAsOfDate",
                "periodLengthFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of agedAccountsPayable",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/agedAccountsPayable"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/agedAccountsPayable({agedAccountsPayable_vendorId})": {
      "get": {
        "tags": [
          "agedAccountsPayable"
        ],
        "summary": "Retrieve the properties and relationships of an agedAccountsPayable object for Dynamics 365 Business Central.",
        "operationId": "getAgedAccountsPayableByVendorId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "vendorId",
                "vendorNumber",
                "name",
                "currencyCode",
                "balanceDue",
                "currentAmount",
                "period1Amount",
                "period2Amount",
                "period3Amount",
                "agedAsOfDate",
                "periodLengthFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested agedAccountsPayable",
            "schema": {
              "$ref": "#/definitions/agedAccountsPayable"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "agedAccountsPayable_vendorId",
          "description": "vendorId for agedAccountsPayable",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/balanceSheet": {
      "get": {
        "tags": [
          "balanceSheet"
        ],
        "summary": "Returns a list of balanceSheet",
        "operationId": "getBalanceSheet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "lineNumber",
                "display",
                "balance",
                "lineType",
                "indentation",
                "dateFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of balanceSheet",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/balanceSheet"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/balanceSheet({balanceSheet_lineNumber})": {
      "get": {
        "tags": [
          "balanceSheet"
        ],
        "summary": "Retrieve the properties and relationships of an balanceSheet object for Dynamics 365 Business Central.",
        "operationId": "getBalanceSheetByLineNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "lineNumber",
                "display",
                "balance",
                "lineType",
                "indentation",
                "dateFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested balanceSheet",
            "schema": {
              "$ref": "#/definitions/balanceSheet"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "balanceSheet_lineNumber",
          "description": "lineNumber for balanceSheet",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/companies({company_id})/trialBalance": {
      "get": {
        "tags": [
          "trialBalance"
        ],
        "summary": "Returns a list of trialBalance",
        "operationId": "getTrialBalance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "number",
                "accountId",
                "accountType",
                "display",
                "totalDebit",
                "totalCredit",
                "balanceAtDateDebit",
                "balanceAtDateCredit",
                "dateFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of trialBalance",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/trialBalance"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/trialBalance('{trialBalance_number}')": {
      "get": {
        "tags": [
          "trialBalance"
        ],
        "summary": "Retrieve the properties and relationships of an trialBalance object for Dynamics 365 Business Central.",
        "operationId": "getTrialBalanceByNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "number",
                "accountId",
                "accountType",
                "display",
                "totalDebit",
                "totalCredit",
                "balanceAtDateDebit",
                "balanceAtDateCredit",
                "dateFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested trialBalance",
            "schema": {
              "$ref": "#/definitions/trialBalance"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "trialBalance_number",
          "description": "number for trialBalance",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/incomeStatement": {
      "get": {
        "tags": [
          "incomeStatement"
        ],
        "summary": "Returns a list of incomeStatement",
        "operationId": "getIncomeStatement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "lineNumber",
                "display",
                "netChange",
                "lineType",
                "indentation",
                "dateFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of incomeStatement",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/incomeStatement"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/incomeStatement({incomeStatement_lineNumber})": {
      "get": {
        "tags": [
          "incomeStatement"
        ],
        "summary": "Retrieve the properties and relationships of an incomeStatement object for Dynamics 365 Business Central.",
        "operationId": "getIncomeStatementByLineNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "lineNumber",
                "display",
                "netChange",
                "lineType",
                "indentation",
                "dateFilter"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested incomeStatement",
            "schema": {
              "$ref": "#/definitions/incomeStatement"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "incomeStatement_lineNumber",
          "description": "lineNumber for incomeStatement",
          "required": true,
          "type": "integer",
          "format": "int32"
        }
      ]
    },
    "/companies({company_id})/taxAreas": {
      "get": {
        "tags": [
          "taxArea"
        ],
        "summary": "Returns a list of taxAreas",
        "operationId": "getTaxAreas",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "taxType",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of taxAreas",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/taxArea"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "taxArea"
        ],
        "summary": "Creates a taxArea in Dynamics 365 Business Central",
        "operationId": "postTaxArea",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the taxArea entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the taxArea entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the taxArea entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "taxType": {
                  "description": "The taxType property for the taxArea entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the taxArea entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new taxAreahas been succesfully created",
            "schema": {
              "$ref": "#/definitions/taxArea"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/taxAreas({taxArea_id})": {
      "get": {
        "tags": [
          "taxArea"
        ],
        "summary": "Retrieve the properties and relationships of an taxArea object for Dynamics 365 Business Central.",
        "operationId": "getTaxAreaById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "code",
                "displayName",
                "taxType",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested taxArea",
            "schema": {
              "$ref": "#/definitions/taxArea"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "taxArea"
        ],
        "summary": "Delete an taxArea in Dynamics 365 Business Central",
        "operationId": "deleteTaxAreaById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified taxArea"
          }
        }
      },
      "patch": {
        "tags": [
          "taxArea"
        ],
        "summary": "Lets the user patch the specified taxArea",
        "operationId": "patchTaxAreaById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the taxArea entity",
                  "type": "string"
                },
                "code": {
                  "description": "The code property for the taxArea entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "displayName": {
                  "description": "The displayName property for the taxArea entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "taxType": {
                  "description": "The taxType property for the taxArea entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the taxArea entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedtaxArea",
            "schema": {
              "$ref": "#/definitions/taxArea"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "taxArea_id",
          "description": "id for taxArea",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesQuotes": {
      "get": {
        "tags": [
          "salesQuote"
        ],
        "summary": "Returns a list of salesQuotes",
        "operationId": "getSalesQuotes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "salesQuoteLines",
                "pdfDocument",
                "customer",
                "currency",
                "paymentTerm",
                "shipmentMethod"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "externalDocumentNumber",
                "documentDate",
                "dueDate",
                "customerId",
                "contactId",
                "customerNumber",
                "customerName",
                "billToName",
                "billToCustomerId",
                "billToCustomerNumber",
                "shipToName",
                "shipToContact",
                "sellingPostalAddress",
                "billingPostalAddress",
                "shippingPostalAddress",
                "currencyId",
                "currencyCode",
                "paymentTermsId",
                "shipmentMethodId",
                "salesperson",
                "discountAmount",
                "totalAmountExcludingTax",
                "totalTaxAmount",
                "totalAmountIncludingTax",
                "status",
                "sentDate",
                "validUntilDate",
                "acceptedDate",
                "lastModifiedDateTime",
                "phoneNumber",
                "email"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesQuotes",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesQuote"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesQuote"
        ],
        "summary": "Creates a salesQuote in Dynamics 365 Business Central",
        "operationId": "postSalesQuote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the salesQuote entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the salesQuote entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the salesQuote entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "documentDate": {
                  "format": "date-time",
                  "description": "The documentDate property for the salesQuote entity",
                  "type": "string"
                },
                "dueDate": {
                  "format": "date-time",
                  "description": "The dueDate property for the salesQuote entity",
                  "type": "string"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the salesQuote entity",
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the salesQuote entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the salesQuote entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "customerName": {
                  "description": "The customerName property for the salesQuote entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToName": {
                  "description": "The billToName property for the salesQuote entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToCustomerId": {
                  "format": "uuid",
                  "description": "The billToCustomerId property for the salesQuote entity",
                  "type": "string"
                },
                "billToCustomerNumber": {
                  "description": "The billToCustomerNumber property for the salesQuote entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "shipToName": {
                  "description": "The shipToName property for the salesQuote entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "shipToContact": {
                  "description": "The shipToContact property for the salesQuote entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "sellingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "billingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "shippingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the salesQuote entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the salesQuote entity",
                  "type": "string"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the salesQuote entity",
                  "type": "string"
                },
                "shipmentMethodId": {
                  "format": "uuid",
                  "description": "The shipmentMethodId property for the salesQuote entity",
                  "type": "string"
                },
                "salesperson": {
                  "description": "The salesperson property for the salesQuote entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesQuote entity",
                  "type": "number"
                },
                "totalAmountExcludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountExcludingTax property for the salesQuote entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesQuote entity",
                  "type": "number"
                },
                "totalAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountIncludingTax property for the salesQuote entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the salesQuote entity",
                  "type": "string"
                },
                "sentDate": {
                  "format": "date-time",
                  "description": "The sentDate property for the salesQuote entity",
                  "type": "string"
                },
                "validUntilDate": {
                  "format": "date-time",
                  "description": "The validUntilDate property for the salesQuote entity",
                  "type": "string"
                },
                "acceptedDate": {
                  "format": "date-time",
                  "description": "The acceptedDate property for the salesQuote entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the salesQuote entity",
                  "type": "string"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the salesQuote entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the salesQuote entity",
                  "maxLength": 80,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesQuotehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesQuote"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesQuotes({salesQuote_id})": {
      "get": {
        "tags": [
          "salesQuote"
        ],
        "summary": "Retrieve the properties and relationships of an salesQuote object for Dynamics 365 Business Central.",
        "operationId": "getSalesQuoteById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "salesQuoteLines",
                "pdfDocument",
                "customer",
                "currency",
                "paymentTerm",
                "shipmentMethod"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "externalDocumentNumber",
                "documentDate",
                "dueDate",
                "customerId",
                "contactId",
                "customerNumber",
                "customerName",
                "billToName",
                "billToCustomerId",
                "billToCustomerNumber",
                "shipToName",
                "shipToContact",
                "sellingPostalAddress",
                "billingPostalAddress",
                "shippingPostalAddress",
                "currencyId",
                "currencyCode",
                "paymentTermsId",
                "shipmentMethodId",
                "salesperson",
                "discountAmount",
                "totalAmountExcludingTax",
                "totalTaxAmount",
                "totalAmountIncludingTax",
                "status",
                "sentDate",
                "validUntilDate",
                "acceptedDate",
                "lastModifiedDateTime",
                "phoneNumber",
                "email"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesQuote",
            "schema": {
              "$ref": "#/definitions/salesQuote"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesQuote"
        ],
        "summary": "Delete an salesQuote in Dynamics 365 Business Central",
        "operationId": "deleteSalesQuoteById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesQuote"
          }
        }
      },
      "patch": {
        "tags": [
          "salesQuote"
        ],
        "summary": "Lets the user patch the specified salesQuote",
        "operationId": "patchSalesQuoteById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the salesQuote entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the salesQuote entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the salesQuote entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "documentDate": {
                  "format": "date-time",
                  "description": "The documentDate property for the salesQuote entity",
                  "type": "string"
                },
                "dueDate": {
                  "format": "date-time",
                  "description": "The dueDate property for the salesQuote entity",
                  "type": "string"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the salesQuote entity",
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the salesQuote entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the salesQuote entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "customerName": {
                  "description": "The customerName property for the salesQuote entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToName": {
                  "description": "The billToName property for the salesQuote entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToCustomerId": {
                  "format": "uuid",
                  "description": "The billToCustomerId property for the salesQuote entity",
                  "type": "string"
                },
                "billToCustomerNumber": {
                  "description": "The billToCustomerNumber property for the salesQuote entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "shipToName": {
                  "description": "The shipToName property for the salesQuote entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "shipToContact": {
                  "description": "The shipToContact property for the salesQuote entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "sellingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "billingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "shippingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the salesQuote entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the salesQuote entity",
                  "type": "string"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the salesQuote entity",
                  "type": "string"
                },
                "shipmentMethodId": {
                  "format": "uuid",
                  "description": "The shipmentMethodId property for the salesQuote entity",
                  "type": "string"
                },
                "salesperson": {
                  "description": "The salesperson property for the salesQuote entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesQuote entity",
                  "type": "number"
                },
                "totalAmountExcludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountExcludingTax property for the salesQuote entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesQuote entity",
                  "type": "number"
                },
                "totalAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountIncludingTax property for the salesQuote entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the salesQuote entity",
                  "type": "string"
                },
                "sentDate": {
                  "format": "date-time",
                  "description": "The sentDate property for the salesQuote entity",
                  "type": "string"
                },
                "validUntilDate": {
                  "format": "date-time",
                  "description": "The validUntilDate property for the salesQuote entity",
                  "type": "string"
                },
                "acceptedDate": {
                  "format": "date-time",
                  "description": "The acceptedDate property for the salesQuote entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the salesQuote entity",
                  "type": "string"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the salesQuote entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the salesQuote entity",
                  "maxLength": 80,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesQuote",
            "schema": {
              "$ref": "#/definitions/salesQuote"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesQuote_id",
          "description": "id for salesQuote",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesQuotes({salesQuote_id})/Microsoft.NAV.makeInvoice": {
      "post": {
        "tags": [
          "salesQuote"
        ],
        "summary": "Performs the makeInvoice action for salesQuotes entity",
        "operationId": "makeInvoiceActionSalesQuotes",
        "responses": {
          "204": {
            "description": "Succesfully performed a makeInvoice action on the salesQuotes entity"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesQuote_id",
          "description": "id for salesQuote",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesQuotes({salesQuote_id})/Microsoft.NAV.send": {
      "post": {
        "tags": [
          "salesQuote"
        ],
        "summary": "Performs the send action for salesQuotes entity",
        "operationId": "sendActionSalesQuotes",
        "responses": {
          "204": {
            "description": "Succesfully performed a send action on the salesQuotes entity"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesQuote_id",
          "description": "id for salesQuote",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesQuotes({salesQuote_id})/salesQuoteLines": {
      "get": {
        "tags": [
          "salesQuoteLine"
        ],
        "summary": "Returns a list of salesQuoteLines",
        "operationId": "getSalesQuoteLinesForSalesQuote",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesQuoteLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesQuoteLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesQuoteLine"
        ],
        "summary": "Creates a salesQuoteLine in Dynamics 365 Business Central",
        "operationId": "postSalesQuoteLineForSalesQuote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesQuoteLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesQuoteLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesQuoteLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesQuoteLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesQuoteLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesQuoteLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesQuoteLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesQuoteLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesQuoteLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesQuoteLine entity",
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesQuoteLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesQuoteLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesQuote_id",
          "description": "id for salesQuote",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesQuotes({salesQuote_id})/salesQuoteLines('{salesQuoteLine_id}')": {
      "get": {
        "tags": [
          "salesQuoteLine"
        ],
        "summary": "Retrieve the properties and relationships of an salesQuoteLine object for Dynamics 365 Business Central.",
        "operationId": "getSalesQuoteLineForSalesQuoteById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesQuoteLine",
            "schema": {
              "$ref": "#/definitions/salesQuoteLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesQuoteLine"
        ],
        "summary": "Delete an salesQuoteLine in Dynamics 365 Business Central",
        "operationId": "deleteSalesQuoteLineForSalesQuoteByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesQuoteLine"
          }
        }
      },
      "patch": {
        "tags": [
          "salesQuoteLine"
        ],
        "summary": "Lets the user patch the specified salesQuoteLine",
        "operationId": "patchSalesQuoteLineForSalesQuoteByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesQuoteLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesQuoteLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesQuoteLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesQuoteLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesQuoteLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesQuoteLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesQuoteLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesQuoteLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesQuoteLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesQuoteLine entity",
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesQuoteLine",
            "schema": {
              "$ref": "#/definitions/salesQuoteLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesQuote_id",
          "description": "id for salesQuote",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesQuoteLine_id",
          "description": "id for salesQuoteLine",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/salesQuotes({salesQuote_id})/pdfDocument": {
      "get": {
        "tags": [
          "pdfDocument"
        ],
        "summary": "Returns a list of pdfDocument",
        "operationId": "getPdfDocumentForSalesQuote",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of pdfDocument",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/pdfDocument"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesQuote_id",
          "description": "id for salesQuote",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesQuotes({salesQuote_id})/pdfDocument({pdfDocument_id})": {
      "get": {
        "tags": [
          "pdfDocument"
        ],
        "summary": "Retrieve the properties and relationships of an pdfDocument object for Dynamics 365 Business Central.",
        "operationId": "getPdfDocumentForSalesQuoteById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested pdfDocument",
            "schema": {
              "$ref": "#/definitions/pdfDocument"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesQuote_id",
          "description": "id for salesQuote",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "pdfDocument_id",
          "description": "id for pdfDocument",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesQuoteLines": {
      "get": {
        "tags": [
          "salesQuoteLine"
        ],
        "summary": "Returns a list of salesQuoteLines",
        "operationId": "getSalesQuoteLines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesQuoteLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesQuoteLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesQuoteLine"
        ],
        "summary": "Creates a salesQuoteLine in Dynamics 365 Business Central",
        "operationId": "postSalesQuoteLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesQuoteLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesQuoteLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesQuoteLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesQuoteLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesQuoteLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesQuoteLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesQuoteLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesQuoteLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesQuoteLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesQuoteLine entity",
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesQuoteLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesQuoteLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesQuoteLines('{salesQuoteLine_id}')": {
      "get": {
        "tags": [
          "salesQuoteLine"
        ],
        "summary": "Retrieve the properties and relationships of an salesQuoteLine object for Dynamics 365 Business Central.",
        "operationId": "getSalesQuoteLineById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesQuoteLine",
            "schema": {
              "$ref": "#/definitions/salesQuoteLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesQuoteLine"
        ],
        "summary": "Delete an salesQuoteLine in Dynamics 365 Business Central",
        "operationId": "deleteSalesQuoteLineById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesQuoteLine"
          }
        }
      },
      "patch": {
        "tags": [
          "salesQuoteLine"
        ],
        "summary": "Lets the user patch the specified salesQuoteLine",
        "operationId": "patchSalesQuoteLineById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesQuoteLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesQuoteLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesQuoteLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesQuoteLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesQuoteLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesQuoteLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesQuoteLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesQuoteLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesQuoteLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesQuoteLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesQuoteLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesQuoteLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesQuoteLine entity",
                  "type": "number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesQuoteLine",
            "schema": {
              "$ref": "#/definitions/salesQuoteLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesQuoteLine_id",
          "description": "id for salesQuoteLine",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/salesCreditMemos": {
      "get": {
        "tags": [
          "salesCreditMemo"
        ],
        "summary": "Returns a list of salesCreditMemos",
        "operationId": "getSalesCreditMemos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "salesCreditMemoLines",
                "pdfDocument",
                "customer",
                "currency",
                "paymentTerm"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "externalDocumentNumber",
                "creditMemoDate",
                "dueDate",
                "customerId",
                "contactId",
                "customerNumber",
                "customerName",
                "billToName",
                "billToCustomerId",
                "billToCustomerNumber",
                "sellingPostalAddress",
                "billingPostalAddress",
                "currencyId",
                "currencyCode",
                "paymentTermsId",
                "salesperson",
                "pricesIncludeTax",
                "discountAmount",
                "discountAppliedBeforeTax",
                "totalAmountExcludingTax",
                "totalTaxAmount",
                "totalAmountIncludingTax",
                "status",
                "lastModifiedDateTime",
                "invoiceId",
                "invoiceNumber",
                "phoneNumber",
                "email"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesCreditMemos",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesCreditMemo"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesCreditMemo"
        ],
        "summary": "Creates a salesCreditMemo in Dynamics 365 Business Central",
        "operationId": "postSalesCreditMemo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the salesCreditMemo entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the salesCreditMemo entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the salesCreditMemo entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "creditMemoDate": {
                  "format": "date-time",
                  "description": "The creditMemoDate property for the salesCreditMemo entity",
                  "type": "string"
                },
                "dueDate": {
                  "format": "date-time",
                  "description": "The dueDate property for the salesCreditMemo entity",
                  "type": "string"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the salesCreditMemo entity",
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the salesCreditMemo entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the salesCreditMemo entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "customerName": {
                  "description": "The customerName property for the salesCreditMemo entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToName": {
                  "description": "The billToName property for the salesCreditMemo entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToCustomerId": {
                  "format": "uuid",
                  "description": "The billToCustomerId property for the salesCreditMemo entity",
                  "type": "string"
                },
                "billToCustomerNumber": {
                  "description": "The billToCustomerNumber property for the salesCreditMemo entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "sellingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "billingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the salesCreditMemo entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the salesCreditMemo entity",
                  "type": "string"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the salesCreditMemo entity",
                  "type": "string"
                },
                "salesperson": {
                  "description": "The salesperson property for the salesCreditMemo entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "pricesIncludeTax": {
                  "description": "The pricesIncludeTax property for the salesCreditMemo entity",
                  "type": "boolean"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesCreditMemo entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesCreditMemo entity",
                  "type": "boolean"
                },
                "totalAmountExcludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountExcludingTax property for the salesCreditMemo entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesCreditMemo entity",
                  "type": "number"
                },
                "totalAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountIncludingTax property for the salesCreditMemo entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the salesCreditMemo entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the salesCreditMemo entity",
                  "type": "string"
                },
                "invoiceId": {
                  "format": "uuid",
                  "description": "The invoiceId property for the salesCreditMemo entity",
                  "type": "string"
                },
                "invoiceNumber": {
                  "description": "The invoiceNumber property for the salesCreditMemo entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the salesCreditMemo entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the salesCreditMemo entity",
                  "maxLength": 80,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesCreditMemohas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesCreditMemo"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesCreditMemos({salesCreditMemo_id})": {
      "get": {
        "tags": [
          "salesCreditMemo"
        ],
        "summary": "Retrieve the properties and relationships of an salesCreditMemo object for Dynamics 365 Business Central.",
        "operationId": "getSalesCreditMemoById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "salesCreditMemoLines",
                "pdfDocument",
                "customer",
                "currency",
                "paymentTerm"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "externalDocumentNumber",
                "creditMemoDate",
                "dueDate",
                "customerId",
                "contactId",
                "customerNumber",
                "customerName",
                "billToName",
                "billToCustomerId",
                "billToCustomerNumber",
                "sellingPostalAddress",
                "billingPostalAddress",
                "currencyId",
                "currencyCode",
                "paymentTermsId",
                "salesperson",
                "pricesIncludeTax",
                "discountAmount",
                "discountAppliedBeforeTax",
                "totalAmountExcludingTax",
                "totalTaxAmount",
                "totalAmountIncludingTax",
                "status",
                "lastModifiedDateTime",
                "invoiceId",
                "invoiceNumber",
                "phoneNumber",
                "email"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesCreditMemo",
            "schema": {
              "$ref": "#/definitions/salesCreditMemo"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesCreditMemo"
        ],
        "summary": "Delete an salesCreditMemo in Dynamics 365 Business Central",
        "operationId": "deleteSalesCreditMemoById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesCreditMemo"
          }
        }
      },
      "patch": {
        "tags": [
          "salesCreditMemo"
        ],
        "summary": "Lets the user patch the specified salesCreditMemo",
        "operationId": "patchSalesCreditMemoById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the salesCreditMemo entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the salesCreditMemo entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "externalDocumentNumber": {
                  "description": "The externalDocumentNumber property for the salesCreditMemo entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "creditMemoDate": {
                  "format": "date-time",
                  "description": "The creditMemoDate property for the salesCreditMemo entity",
                  "type": "string"
                },
                "dueDate": {
                  "format": "date-time",
                  "description": "The dueDate property for the salesCreditMemo entity",
                  "type": "string"
                },
                "customerId": {
                  "format": "uuid",
                  "description": "The customerId property for the salesCreditMemo entity",
                  "type": "string"
                },
                "contactId": {
                  "description": "The contactId property for the salesCreditMemo entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "customerNumber": {
                  "description": "The customerNumber property for the salesCreditMemo entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "customerName": {
                  "description": "The customerName property for the salesCreditMemo entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToName": {
                  "description": "The billToName property for the salesCreditMemo entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "billToCustomerId": {
                  "format": "uuid",
                  "description": "The billToCustomerId property for the salesCreditMemo entity",
                  "type": "string"
                },
                "billToCustomerNumber": {
                  "description": "The billToCustomerNumber property for the salesCreditMemo entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "sellingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "billingPostalAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the salesCreditMemo entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the salesCreditMemo entity",
                  "type": "string"
                },
                "paymentTermsId": {
                  "format": "uuid",
                  "description": "The paymentTermsId property for the salesCreditMemo entity",
                  "type": "string"
                },
                "salesperson": {
                  "description": "The salesperson property for the salesCreditMemo entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "pricesIncludeTax": {
                  "description": "The pricesIncludeTax property for the salesCreditMemo entity",
                  "type": "boolean"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesCreditMemo entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesCreditMemo entity",
                  "type": "boolean"
                },
                "totalAmountExcludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountExcludingTax property for the salesCreditMemo entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesCreditMemo entity",
                  "type": "number"
                },
                "totalAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountIncludingTax property for the salesCreditMemo entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the salesCreditMemo entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the salesCreditMemo entity",
                  "type": "string"
                },
                "invoiceId": {
                  "format": "uuid",
                  "description": "The invoiceId property for the salesCreditMemo entity",
                  "type": "string"
                },
                "invoiceNumber": {
                  "description": "The invoiceNumber property for the salesCreditMemo entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "phoneNumber": {
                  "description": "The phoneNumber property for the salesCreditMemo entity",
                  "maxLength": 30,
                  "type": "string"
                },
                "email": {
                  "description": "The email property for the salesCreditMemo entity",
                  "maxLength": 80,
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesCreditMemo",
            "schema": {
              "$ref": "#/definitions/salesCreditMemo"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesCreditMemo_id",
          "description": "id for salesCreditMemo",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/salesCreditMemoLines": {
      "get": {
        "tags": [
          "salesCreditMemoLine"
        ],
        "summary": "Returns a list of salesCreditMemoLines",
        "operationId": "getSalesCreditMemoLinesForSalesCreditMemo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesCreditMemoLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesCreditMemoLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesCreditMemoLine"
        ],
        "summary": "Creates a salesCreditMemoLine in Dynamics 365 Business Central",
        "operationId": "postSalesCreditMemoLineForSalesCreditMemo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesCreditMemoLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesCreditMemoLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesCreditMemoLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesCreditMemoLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesCreditMemoLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesCreditMemoLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesCreditMemoLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesCreditMemoLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesCreditMemo_id",
          "description": "id for salesCreditMemo",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/salesCreditMemoLines('{salesCreditMemoLine_id}')": {
      "get": {
        "tags": [
          "salesCreditMemoLine"
        ],
        "summary": "Retrieve the properties and relationships of an salesCreditMemoLine object for Dynamics 365 Business Central.",
        "operationId": "getSalesCreditMemoLineForSalesCreditMemoById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesCreditMemoLine",
            "schema": {
              "$ref": "#/definitions/salesCreditMemoLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesCreditMemoLine"
        ],
        "summary": "Delete an salesCreditMemoLine in Dynamics 365 Business Central",
        "operationId": "deleteSalesCreditMemoLineForSalesCreditMemoByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesCreditMemoLine"
          }
        }
      },
      "patch": {
        "tags": [
          "salesCreditMemoLine"
        ],
        "summary": "Lets the user patch the specified salesCreditMemoLine",
        "operationId": "patchSalesCreditMemoLineForSalesCreditMemoByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesCreditMemoLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesCreditMemoLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesCreditMemoLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesCreditMemoLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesCreditMemoLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesCreditMemoLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesCreditMemoLine",
            "schema": {
              "$ref": "#/definitions/salesCreditMemoLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesCreditMemo_id",
          "description": "id for salesCreditMemo",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesCreditMemoLine_id",
          "description": "id for salesCreditMemoLine",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/pdfDocument": {
      "get": {
        "tags": [
          "pdfDocument"
        ],
        "summary": "Returns a list of pdfDocument",
        "operationId": "getPdfDocumentForSalesCreditMemo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of pdfDocument",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/pdfDocument"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesCreditMemo_id",
          "description": "id for salesCreditMemo",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesCreditMemos({salesCreditMemo_id})/pdfDocument({pdfDocument_id})": {
      "get": {
        "tags": [
          "pdfDocument"
        ],
        "summary": "Retrieve the properties and relationships of an pdfDocument object for Dynamics 365 Business Central.",
        "operationId": "getPdfDocumentForSalesCreditMemoById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested pdfDocument",
            "schema": {
              "$ref": "#/definitions/pdfDocument"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesCreditMemo_id",
          "description": "id for salesCreditMemo",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "pdfDocument_id",
          "description": "id for pdfDocument",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesCreditMemoLines": {
      "get": {
        "tags": [
          "salesCreditMemoLine"
        ],
        "summary": "Returns a list of salesCreditMemoLines",
        "operationId": "getSalesCreditMemoLines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of salesCreditMemoLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/salesCreditMemoLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "salesCreditMemoLine"
        ],
        "summary": "Creates a salesCreditMemoLine in Dynamics 365 Business Central",
        "operationId": "postSalesCreditMemoLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesCreditMemoLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesCreditMemoLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesCreditMemoLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesCreditMemoLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesCreditMemoLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesCreditMemoLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new salesCreditMemoLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/salesCreditMemoLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/salesCreditMemoLines('{salesCreditMemoLine_id}')": {
      "get": {
        "tags": [
          "salesCreditMemoLine"
        ],
        "summary": "Retrieve the properties and relationships of an salesCreditMemoLine object for Dynamics 365 Business Central.",
        "operationId": "getSalesCreditMemoLineById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasureId",
                "unitOfMeasure",
                "unitPrice",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "shipmentDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested salesCreditMemoLine",
            "schema": {
              "$ref": "#/definitions/salesCreditMemoLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "salesCreditMemoLine"
        ],
        "summary": "Delete an salesCreditMemoLine in Dynamics 365 Business Central",
        "operationId": "deleteSalesCreditMemoLineById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified salesCreditMemoLine"
          }
        }
      },
      "patch": {
        "tags": [
          "salesCreditMemoLine"
        ],
        "summary": "Lets the user patch the specified salesCreditMemoLine",
        "operationId": "patchSalesCreditMemoLineById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the salesCreditMemoLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the salesCreditMemoLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the salesCreditMemoLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasureId": {
                  "format": "uuid",
                  "description": "The unitOfMeasureId property for the salesCreditMemoLine entity",
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitPrice": {
                  "format": "decimal",
                  "description": "The unitPrice property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the salesCreditMemoLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the salesCreditMemoLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the salesCreditMemoLine entity",
                  "type": "number"
                },
                "shipmentDate": {
                  "format": "date-time",
                  "description": "The shipmentDate property for the salesCreditMemoLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedsalesCreditMemoLine",
            "schema": {
              "$ref": "#/definitions/salesCreditMemoLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "salesCreditMemoLine_id",
          "description": "id for salesCreditMemoLine",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/generalLedgerEntryAttachments": {
      "get": {
        "tags": [
          "generalLedgerEntryAttachments"
        ],
        "summary": "Returns a list of generalLedgerEntryAttachments",
        "operationId": "getGeneralLedgerEntryAttachments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "generalLedgerEntry"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "generalLedgerEntryNumber",
                "id",
                "fileName",
                "byteSize",
                "content",
                "createdDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of generalLedgerEntryAttachments",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/generalLedgerEntryAttachments"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "generalLedgerEntryAttachments"
        ],
        "summary": "Creates a generalLedgerEntryAttachments in Dynamics 365 Business Central",
        "operationId": "postGeneralLedgerEntryAttachments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "generalLedgerEntryNumber": {
                  "format": "int32",
                  "description": "The generalLedgerEntryNumber property for the generalLedgerEntryAttachments entity",
                  "type": "integer"
                },
                "id": {
                  "format": "uuid",
                  "description": "The id property for the generalLedgerEntryAttachments entity",
                  "type": "string"
                },
                "fileName": {
                  "description": "The fileName property for the generalLedgerEntryAttachments entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "byteSize": {
                  "format": "int32",
                  "description": "The byteSize property for the generalLedgerEntryAttachments entity",
                  "type": "integer"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the generalLedgerEntryAttachments entity",
                  "type": "string"
                },
                "createdDateTime": {
                  "format": "date-time",
                  "description": "The createdDateTime property for the generalLedgerEntryAttachments entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new generalLedgerEntryAttachmentshas been succesfully created",
            "schema": {
              "$ref": "#/definitions/generalLedgerEntryAttachments"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/generalLedgerEntryAttachments({generalLedgerEntryAttachments_generalLedgerEntryNumber},{generalLedgerEntryAttachments_id})": {
      "get": {
        "tags": [
          "generalLedgerEntryAttachments"
        ],
        "summary": "Retrieve the properties and relationships of an generalLedgerEntryAttachments object for Dynamics 365 Business Central.",
        "operationId": "getGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "generalLedgerEntry"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "generalLedgerEntryNumber",
                "id",
                "fileName",
                "byteSize",
                "content",
                "createdDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested generalLedgerEntryAttachments",
            "schema": {
              "$ref": "#/definitions/generalLedgerEntryAttachments"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "generalLedgerEntryAttachments"
        ],
        "summary": "Delete an generalLedgerEntryAttachments in Dynamics 365 Business Central",
        "operationId": "deleteGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified generalLedgerEntryAttachments"
          }
        }
      },
      "patch": {
        "tags": [
          "generalLedgerEntryAttachments"
        ],
        "summary": "Lets the user patch the specified generalLedgerEntryAttachments",
        "operationId": "patchGeneralLedgerEntryAttachmentsByIdByGeneralLedgerEntryNumber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "generalLedgerEntryNumber": {
                  "format": "int32",
                  "description": "The generalLedgerEntryNumber property for the generalLedgerEntryAttachments entity",
                  "type": "integer"
                },
                "id": {
                  "format": "uuid",
                  "description": "The id property for the generalLedgerEntryAttachments entity",
                  "type": "string"
                },
                "fileName": {
                  "description": "The fileName property for the generalLedgerEntryAttachments entity",
                  "maxLength": 250,
                  "type": "string"
                },
                "byteSize": {
                  "format": "int32",
                  "description": "The byteSize property for the generalLedgerEntryAttachments entity",
                  "type": "integer"
                },
                "content": {
                  "format": "binary",
                  "description": "The content property for the generalLedgerEntryAttachments entity",
                  "type": "string"
                },
                "createdDateTime": {
                  "format": "date-time",
                  "description": "The createdDateTime property for the generalLedgerEntryAttachments entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedgeneralLedgerEntryAttachments",
            "schema": {
              "$ref": "#/definitions/generalLedgerEntryAttachments"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "generalLedgerEntryAttachments_generalLedgerEntryNumber",
          "description": "generalLedgerEntryNumber for generalLedgerEntryAttachments",
          "required": true,
          "type": "integer",
          "format": "int32"
        },
        {
          "in": "path",
          "name": "generalLedgerEntryAttachments_id",
          "description": "id for generalLedgerEntryAttachments",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/purchaseInvoices": {
      "get": {
        "tags": [
          "purchaseInvoice"
        ],
        "summary": "Returns a list of purchaseInvoices",
        "operationId": "getPurchaseInvoices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "purchaseInvoiceLines",
                "pdfDocument",
                "vendor",
                "currency"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "invoiceDate",
                "dueDate",
                "vendorInvoiceNumber",
                "vendorId",
                "vendorNumber",
                "vendorName",
                "payToName",
                "payToContact",
                "payToVendorId",
                "payToVendorNumber",
                "shipToName",
                "shipToContact",
                "buyFromAddress",
                "payToAddress",
                "shipToAddress",
                "currencyId",
                "currencyCode",
                "pricesIncludeTax",
                "discountAmount",
                "discountAppliedBeforeTax",
                "totalAmountExcludingTax",
                "totalTaxAmount",
                "totalAmountIncludingTax",
                "status",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of purchaseInvoices",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/purchaseInvoice"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "purchaseInvoice"
        ],
        "summary": "Creates a purchaseInvoice in Dynamics 365 Business Central",
        "operationId": "postPurchaseInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the purchaseInvoice entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the purchaseInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "invoiceDate": {
                  "format": "date-time",
                  "description": "The invoiceDate property for the purchaseInvoice entity",
                  "type": "string"
                },
                "dueDate": {
                  "format": "date-time",
                  "description": "The dueDate property for the purchaseInvoice entity",
                  "type": "string"
                },
                "vendorInvoiceNumber": {
                  "description": "The vendorInvoiceNumber property for the purchaseInvoice entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "vendorId": {
                  "format": "uuid",
                  "description": "The vendorId property for the purchaseInvoice entity",
                  "type": "string"
                },
                "vendorNumber": {
                  "description": "The vendorNumber property for the purchaseInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "vendorName": {
                  "description": "The vendorName property for the purchaseInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "payToName": {
                  "description": "The payToName property for the purchaseInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "payToContact": {
                  "description": "The payToContact property for the purchaseInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "payToVendorId": {
                  "format": "uuid",
                  "description": "The payToVendorId property for the purchaseInvoice entity",
                  "type": "string"
                },
                "payToVendorNumber": {
                  "description": "The payToVendorNumber property for the purchaseInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "shipToName": {
                  "description": "The shipToName property for the purchaseInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "shipToContact": {
                  "description": "The shipToContact property for the purchaseInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "buyFromAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "payToAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "shipToAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the purchaseInvoice entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the purchaseInvoice entity",
                  "type": "string"
                },
                "pricesIncludeTax": {
                  "description": "The pricesIncludeTax property for the purchaseInvoice entity",
                  "type": "boolean"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the purchaseInvoice entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the purchaseInvoice entity",
                  "type": "boolean"
                },
                "totalAmountExcludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountExcludingTax property for the purchaseInvoice entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the purchaseInvoice entity",
                  "type": "number"
                },
                "totalAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountIncludingTax property for the purchaseInvoice entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the purchaseInvoice entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the purchaseInvoice entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new purchaseInvoicehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/purchaseInvoice"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})": {
      "get": {
        "tags": [
          "purchaseInvoice"
        ],
        "summary": "Retrieve the properties and relationships of an purchaseInvoice object for Dynamics 365 Business Central.",
        "operationId": "getPurchaseInvoiceById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "purchaseInvoiceLines",
                "pdfDocument",
                "vendor",
                "currency"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "number",
                "invoiceDate",
                "dueDate",
                "vendorInvoiceNumber",
                "vendorId",
                "vendorNumber",
                "vendorName",
                "payToName",
                "payToContact",
                "payToVendorId",
                "payToVendorNumber",
                "shipToName",
                "shipToContact",
                "buyFromAddress",
                "payToAddress",
                "shipToAddress",
                "currencyId",
                "currencyCode",
                "pricesIncludeTax",
                "discountAmount",
                "discountAppliedBeforeTax",
                "totalAmountExcludingTax",
                "totalTaxAmount",
                "totalAmountIncludingTax",
                "status",
                "lastModifiedDateTime"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested purchaseInvoice",
            "schema": {
              "$ref": "#/definitions/purchaseInvoice"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "purchaseInvoice"
        ],
        "summary": "Delete an purchaseInvoice in Dynamics 365 Business Central",
        "operationId": "deletePurchaseInvoiceById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified purchaseInvoice"
          }
        }
      },
      "patch": {
        "tags": [
          "purchaseInvoice"
        ],
        "summary": "Lets the user patch the specified purchaseInvoice",
        "operationId": "patchPurchaseInvoiceById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "format": "uuid",
                  "description": "The id property for the purchaseInvoice entity",
                  "type": "string"
                },
                "number": {
                  "description": "The number property for the purchaseInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "invoiceDate": {
                  "format": "date-time",
                  "description": "The invoiceDate property for the purchaseInvoice entity",
                  "type": "string"
                },
                "dueDate": {
                  "format": "date-time",
                  "description": "The dueDate property for the purchaseInvoice entity",
                  "type": "string"
                },
                "vendorInvoiceNumber": {
                  "description": "The vendorInvoiceNumber property for the purchaseInvoice entity",
                  "maxLength": 35,
                  "type": "string"
                },
                "vendorId": {
                  "format": "uuid",
                  "description": "The vendorId property for the purchaseInvoice entity",
                  "type": "string"
                },
                "vendorNumber": {
                  "description": "The vendorNumber property for the purchaseInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "vendorName": {
                  "description": "The vendorName property for the purchaseInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "payToName": {
                  "description": "The payToName property for the purchaseInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "payToContact": {
                  "description": "The payToContact property for the purchaseInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "payToVendorId": {
                  "format": "uuid",
                  "description": "The payToVendorId property for the purchaseInvoice entity",
                  "type": "string"
                },
                "payToVendorNumber": {
                  "description": "The payToVendorNumber property for the purchaseInvoice entity",
                  "maxLength": 20,
                  "type": "string"
                },
                "shipToName": {
                  "description": "The shipToName property for the purchaseInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "shipToContact": {
                  "description": "The shipToContact property for the purchaseInvoice entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "buyFromAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "payToAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "shipToAddress": {
                  "$ref": "#/definitions/postaladdresstype"
                },
                "currencyId": {
                  "format": "uuid",
                  "description": "The currencyId property for the purchaseInvoice entity",
                  "type": "string"
                },
                "currencyCode": {
                  "description": "The currencyCode property for the purchaseInvoice entity",
                  "type": "string"
                },
                "pricesIncludeTax": {
                  "description": "The pricesIncludeTax property for the purchaseInvoice entity",
                  "type": "boolean"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the purchaseInvoice entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the purchaseInvoice entity",
                  "type": "boolean"
                },
                "totalAmountExcludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountExcludingTax property for the purchaseInvoice entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the purchaseInvoice entity",
                  "type": "number"
                },
                "totalAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The totalAmountIncludingTax property for the purchaseInvoice entity",
                  "type": "number"
                },
                "status": {
                  "description": "The status property for the purchaseInvoice entity",
                  "type": "string"
                },
                "lastModifiedDateTime": {
                  "format": "date-time",
                  "description": "The lastModifiedDateTime property for the purchaseInvoice entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedpurchaseInvoice",
            "schema": {
              "$ref": "#/definitions/purchaseInvoice"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "purchaseInvoice_id",
          "description": "id for purchaseInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/Microsoft.NAV.post": {
      "post": {
        "tags": [
          "purchaseInvoice"
        ],
        "summary": "Performs the post action for purchaseInvoices entity",
        "operationId": "postActionPurchaseInvoices",
        "responses": {
          "204": {
            "description": "Succesfully performed a post action on the purchaseInvoices entity"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "purchaseInvoice_id",
          "description": "id for purchaseInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/purchaseInvoiceLines": {
      "get": {
        "tags": [
          "purchaseInvoiceLine"
        ],
        "summary": "Returns a list of purchaseInvoiceLines",
        "operationId": "getPurchaseInvoiceLinesForPurchaseInvoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasure",
                "unitCost",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "expectedReceiptDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of purchaseInvoiceLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/purchaseInvoiceLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "purchaseInvoiceLine"
        ],
        "summary": "Creates a purchaseInvoiceLine in Dynamics 365 Business Central",
        "operationId": "postPurchaseInvoiceLineForPurchaseInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the purchaseInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the purchaseInvoiceLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the purchaseInvoiceLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitCost": {
                  "format": "decimal",
                  "description": "The unitCost property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the purchaseInvoiceLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the purchaseInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "expectedReceiptDate": {
                  "format": "date-time",
                  "description": "The expectedReceiptDate property for the purchaseInvoiceLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new purchaseInvoiceLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/purchaseInvoiceLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "purchaseInvoice_id",
          "description": "id for purchaseInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/purchaseInvoiceLines('{purchaseInvoiceLine_id}')": {
      "get": {
        "tags": [
          "purchaseInvoiceLine"
        ],
        "summary": "Retrieve the properties and relationships of an purchaseInvoiceLine object for Dynamics 365 Business Central.",
        "operationId": "getPurchaseInvoiceLineForPurchaseInvoiceById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasure",
                "unitCost",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "expectedReceiptDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested purchaseInvoiceLine",
            "schema": {
              "$ref": "#/definitions/purchaseInvoiceLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "purchaseInvoiceLine"
        ],
        "summary": "Delete an purchaseInvoiceLine in Dynamics 365 Business Central",
        "operationId": "deletePurchaseInvoiceLineForPurchaseInvoiceByIdById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified purchaseInvoiceLine"
          }
        }
      },
      "patch": {
        "tags": [
          "purchaseInvoiceLine"
        ],
        "summary": "Lets the user patch the specified purchaseInvoiceLine",
        "operationId": "patchPurchaseInvoiceLineForPurchaseInvoiceByIdById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the purchaseInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the purchaseInvoiceLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the purchaseInvoiceLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitCost": {
                  "format": "decimal",
                  "description": "The unitCost property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the purchaseInvoiceLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the purchaseInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "expectedReceiptDate": {
                  "format": "date-time",
                  "description": "The expectedReceiptDate property for the purchaseInvoiceLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedpurchaseInvoiceLine",
            "schema": {
              "$ref": "#/definitions/purchaseInvoiceLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "purchaseInvoice_id",
          "description": "id for purchaseInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "purchaseInvoiceLine_id",
          "description": "id for purchaseInvoiceLine",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/pdfDocument": {
      "get": {
        "tags": [
          "pdfDocument"
        ],
        "summary": "Returns a list of pdfDocument",
        "operationId": "getPdfDocumentForPurchaseInvoice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of pdfDocument",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/pdfDocument"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "purchaseInvoice_id",
          "description": "id for purchaseInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/purchaseInvoices({purchaseInvoice_id})/pdfDocument({pdfDocument_id})": {
      "get": {
        "tags": [
          "pdfDocument"
        ],
        "summary": "Retrieve the properties and relationships of an pdfDocument object for Dynamics 365 Business Central.",
        "operationId": "getPdfDocumentForPurchaseInvoiceById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "content"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested pdfDocument",
            "schema": {
              "$ref": "#/definitions/pdfDocument"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "purchaseInvoice_id",
          "description": "id for purchaseInvoice",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "pdfDocument_id",
          "description": "id for pdfDocument",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/purchaseInvoiceLines": {
      "get": {
        "tags": [
          "purchaseInvoiceLine"
        ],
        "summary": "Returns a list of purchaseInvoiceLines",
        "operationId": "getPurchaseInvoiceLines",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasure",
                "unitCost",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "expectedReceiptDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of purchaseInvoiceLines",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/purchaseInvoiceLine"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "purchaseInvoiceLine"
        ],
        "summary": "Creates a purchaseInvoiceLine in Dynamics 365 Business Central",
        "operationId": "postPurchaseInvoiceLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the purchaseInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the purchaseInvoiceLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the purchaseInvoiceLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitCost": {
                  "format": "decimal",
                  "description": "The unitCost property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the purchaseInvoiceLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the purchaseInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "expectedReceiptDate": {
                  "format": "date-time",
                  "description": "The expectedReceiptDate property for the purchaseInvoiceLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A new purchaseInvoiceLinehas been succesfully created",
            "schema": {
              "$ref": "#/definitions/purchaseInvoiceLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/purchaseInvoiceLines('{purchaseInvoiceLine_id}')": {
      "get": {
        "tags": [
          "purchaseInvoiceLine"
        ],
        "summary": "Retrieve the properties and relationships of an purchaseInvoiceLine object for Dynamics 365 Business Central.",
        "operationId": "getPurchaseInvoiceLineById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$expand",
            "description": "Entities to expand",
            "type": "array",
            "items": {
              "enum": [
                "item",
                "account"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "documentId",
                "sequence",
                "itemId",
                "accountId",
                "lineType",
                "lineDetails",
                "description",
                "unitOfMeasure",
                "unitCost",
                "quantity",
                "discountAmount",
                "discountPercent",
                "discountAppliedBeforeTax",
                "amountExcludingTax",
                "taxCode",
                "taxPercent",
                "totalTaxAmount",
                "amountIncludingTax",
                "invoiceDiscountAllocation",
                "netAmount",
                "netTaxAmount",
                "netAmountIncludingTax",
                "expectedReceiptDate"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested purchaseInvoiceLine",
            "schema": {
              "$ref": "#/definitions/purchaseInvoiceLine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "purchaseInvoiceLine"
        ],
        "summary": "Delete an purchaseInvoiceLine in Dynamics 365 Business Central",
        "operationId": "deletePurchaseInvoiceLineById",
        "responses": {
          "204": {
            "description": "Succesfully deleted the specified purchaseInvoiceLine"
          }
        }
      },
      "patch": {
        "tags": [
          "purchaseInvoiceLine"
        ],
        "summary": "Lets the user patch the specified purchaseInvoiceLine",
        "operationId": "patchPurchaseInvoiceLineById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/IfMatchParam"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "id": {
                  "description": "The id property for the purchaseInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "documentId": {
                  "format": "uuid",
                  "description": "The documentId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "sequence": {
                  "format": "int32",
                  "description": "The sequence property for the purchaseInvoiceLine entity",
                  "type": "integer"
                },
                "itemId": {
                  "format": "uuid",
                  "description": "The itemId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "accountId": {
                  "format": "uuid",
                  "description": "The accountId property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "lineType": {
                  "description": "The lineType property for the purchaseInvoiceLine entity",
                  "type": "string"
                },
                "lineDetails": {
                  "$ref": "#/definitions/documentlineobjectdetailstype"
                },
                "description": {
                  "description": "The description property for the purchaseInvoiceLine entity",
                  "maxLength": 100,
                  "type": "string"
                },
                "unitOfMeasure": {
                  "$ref": "#/definitions/unitofmeasuretype"
                },
                "unitCost": {
                  "format": "decimal",
                  "description": "The unitCost property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "quantity": {
                  "format": "decimal",
                  "description": "The quantity property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountAmount": {
                  "format": "decimal",
                  "description": "The discountAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountPercent": {
                  "format": "decimal",
                  "description": "The discountPercent property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "discountAppliedBeforeTax": {
                  "description": "The discountAppliedBeforeTax property for the purchaseInvoiceLine entity",
                  "type": "boolean"
                },
                "amountExcludingTax": {
                  "format": "decimal",
                  "description": "The amountExcludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "taxCode": {
                  "description": "The taxCode property for the purchaseInvoiceLine entity",
                  "maxLength": 50,
                  "type": "string"
                },
                "taxPercent": {
                  "format": "decimal",
                  "description": "The taxPercent property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "totalTaxAmount": {
                  "format": "decimal",
                  "description": "The totalTaxAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "amountIncludingTax": {
                  "format": "decimal",
                  "description": "The amountIncludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "invoiceDiscountAllocation": {
                  "format": "decimal",
                  "description": "The invoiceDiscountAllocation property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netAmount": {
                  "format": "decimal",
                  "description": "The netAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netTaxAmount": {
                  "format": "decimal",
                  "description": "The netTaxAmount property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "netAmountIncludingTax": {
                  "format": "decimal",
                  "description": "The netAmountIncludingTax property for the purchaseInvoiceLine entity",
                  "type": "number"
                },
                "expectedReceiptDate": {
                  "format": "date-time",
                  "description": "The expectedReceiptDate property for the purchaseInvoiceLine entity",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully updated the specifiedpurchaseInvoiceLine",
            "schema": {
              "$ref": "#/definitions/purchaseInvoiceLine"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "purchaseInvoiceLine_id",
          "description": "id for purchaseInvoiceLine",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/customerSales": {
      "get": {
        "tags": [
          "customerSale"
        ],
        "summary": "Returns a list of customerSales",
        "operationId": "getCustomerSales",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "customerId",
                "customerNumber",
                "name",
                "totalSalesAmount",
                "dateFilter_FilterOnly"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of customerSales",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/customerSale"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/customerSales({customerSale_customerId},'{customerSale_customerNumber}','{customerSale_name}')": {
      "get": {
        "tags": [
          "customerSale"
        ],
        "summary": "Retrieve the properties and relationships of an customerSale object for Dynamics 365 Business Central.",
        "operationId": "getCustomerSaleByNameByCustomerNumberByCustomerId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "customerId",
                "customerNumber",
                "name",
                "totalSalesAmount",
                "dateFilter_FilterOnly"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested customerSale",
            "schema": {
              "$ref": "#/definitions/customerSale"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customerSale_customerId",
          "description": "customerId for customerSale",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "customerSale_customerNumber",
          "description": "customerNumber for customerSale",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "customerSale_name",
          "description": "name for customerSale",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/companies({company_id})/vendorPurchases": {
      "get": {
        "tags": [
          "vendorPurchase"
        ],
        "summary": "Returns a list of vendorPurchases",
        "operationId": "getVendorPurchases",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/topParam"
          },
          {
            "$ref": "#/parameters/skipParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/filterParam"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "vendorId",
                "vendorNumber",
                "name",
                "totalPurchaseAmount",
                "dateFilter_FilterOnly"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned a list of vendorPurchases",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/vendorPurchase"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/companies({company_id})/vendorPurchases({vendorPurchase_vendorId},'{vendorPurchase_vendorNumber}','{vendorPurchase_name}')": {
      "get": {
        "tags": [
          "vendorPurchase"
        ],
        "summary": "Retrieve the properties and relationships of an vendorPurchase object for Dynamics 365 Business Central.",
        "operationId": "getVendorPurchaseByNameByVendorNumberByVendorId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Selected properties to be retrieved",
            "type": "array",
            "items": {
              "enum": [
                "vendorId",
                "vendorNumber",
                "name",
                "totalPurchaseAmount",
                "dateFilter_FilterOnly"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Succesfully returned the requested vendorPurchase",
            "schema": {
              "$ref": "#/definitions/vendorPurchase"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "company_id",
          "description": "id for company",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "vendorPurchase_vendorId",
          "description": "vendorId for vendorPurchase",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "in": "path",
          "name": "vendorPurchase_vendorNumber",
          "description": "vendorNumber for vendorPurchase",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "vendorPurchase_name",
          "description": "name for vendorPurchase",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "taxArea": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the taxArea entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the taxArea entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the taxArea entity",
          "maxLength": 100,
          "type": "string"
        },
        "taxType": {
          "description": "The taxType property for the taxArea entity",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the taxArea entity",
          "type": "string"
        }
      }
    },
    "paymentMethod": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the paymentMethod entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the paymentMethod entity",
          "maxLength": 10,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the paymentMethod entity",
          "maxLength": 100,
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the paymentMethod entity",
          "type": "string"
        }
      }
    },
    "salesQuote": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the salesQuote entity",
          "type": "string"
        },
        "number": {
          "description": "The number property for the salesQuote entity",
          "maxLength": 20,
          "type": "string"
        },
        "externalDocumentNumber": {
          "description": "The externalDocumentNumber property for the salesQuote entity",
          "maxLength": 35,
          "type": "string"
        },
        "documentDate": {
          "format": "date-time",
          "description": "The documentDate property for the salesQuote entity",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "description": "The dueDate property for the salesQuote entity",
          "type": "string"
        },
        "customerId": {
          "format": "uuid",
          "description": "The customerId property for the salesQuote entity",
          "type": "string"
        },
        "contactId": {
          "description": "The contactId property for the salesQuote entity",
          "maxLength": 250,
          "type": "string"
        },
        "customerNumber": {
          "description": "The customerNumber property for the salesQuote entity",
          "maxLength": 20,
          "type": "string"
        },
        "customerName": {
          "description": "The customerName property for the salesQuote entity",
          "maxLength": 100,
          "type": "string"
        },
        "billToName": {
          "description": "The billToName property for the salesQuote entity",
          "maxLength": 100,
          "type": "string"
        },
        "billToCustomerId": {
          "format": "uuid",
          "description": "The billToCustomerId property for the salesQuote entity",
          "type": "string"
        },
        "billToCustomerNumber": {
          "description": "The billToCustomerNumber property for the salesQuote entity",
          "maxLength": 20,
          "type": "string"
        },
        "shipToName": {
          "description": "The shipToName property for the salesQuote entity",
          "maxLength": 100,
          "type": "string"
        },
        "shipToContact": {
          "description": "The shipToContact property for the salesQuote entity",
          "maxLength": 100,
          "type": "string"
        },
        "sellingPostalAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "billingPostalAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "shippingPostalAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "currencyId": {
          "format": "uuid",
          "description": "The currencyId property for the salesQuote entity",
          "type": "string"
        },
        "currencyCode": {
          "description": "The currencyCode property for the salesQuote entity",
          "type": "string"
        },
        "paymentTermsId": {
          "format": "uuid",
          "description": "The paymentTermsId property for the salesQuote entity",
          "type": "string"
        },
        "shipmentMethodId": {
          "format": "uuid",
          "description": "The shipmentMethodId property for the salesQuote entity",
          "type": "string"
        },
        "salesperson": {
          "description": "The salesperson property for the salesQuote entity",
          "maxLength": 20,
          "type": "string"
        },
        "discountAmount": {
          "format": "decimal",
          "description": "The discountAmount property for the salesQuote entity",
          "type": "number"
        },
        "totalAmountExcludingTax": {
          "format": "decimal",
          "description": "The totalAmountExcludingTax property for the salesQuote entity",
          "type": "number"
        },
        "totalTaxAmount": {
          "format": "decimal",
          "description": "The totalTaxAmount property for the salesQuote entity",
          "type": "number"
        },
        "totalAmountIncludingTax": {
          "format": "decimal",
          "description": "The totalAmountIncludingTax property for the salesQuote entity",
          "type": "number"
        },
        "status": {
          "description": "The status property for the salesQuote entity",
          "type": "string"
        },
        "sentDate": {
          "format": "date-time",
          "description": "The sentDate property for the salesQuote entity",
          "type": "string"
        },
        "validUntilDate": {
          "format": "date-time",
          "description": "The validUntilDate property for the salesQuote entity",
          "type": "string"
        },
        "acceptedDate": {
          "format": "date-time",
          "description": "The acceptedDate property for the salesQuote entity",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the salesQuote entity",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phoneNumber property for the salesQuote entity",
          "maxLength": 30,
          "type": "string"
        },
        "email": {
          "description": "The email property for the salesQuote entity",
          "maxLength": 80,
          "type": "string"
        },
        "salesQuoteLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesQuoteLine"
          }
        },
        "pdfDocument": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pdfDocument"
          }
        },
        "customer": {
          "$ref": "#/definitions/customer"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "paymentTerm": {
          "$ref": "#/definitions/paymentTerm"
        },
        "shipmentMethod": {
          "$ref": "#/definitions/shipmentMethod"
        }
      }
    },
    "salesQuoteLine": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The id property for the salesQuoteLine entity",
          "maxLength": 50,
          "type": "string"
        },
        "documentId": {
          "format": "uuid",
          "description": "The documentId property for the salesQuoteLine entity",
          "type": "string"
        },
        "sequence": {
          "format": "int32",
          "description": "The sequence property for the salesQuoteLine entity",
          "type": "integer"
        },
        "itemId": {
          "format": "uuid",
          "description": "The itemId property for the salesQuoteLine entity",
          "type": "string"
        },
        "accountId": {
          "format": "uuid",
          "description": "The accountId property for the salesQuoteLine entity",
          "type": "string"
        },
        "lineType": {
          "description": "The lineType property for the salesQuoteLine entity",
          "type": "string"
        },
        "lineDetails": {
          "$ref": "#/definitions/documentlineobjectdetailstype"
        },
        "description": {
          "description": "The description property for the salesQuoteLine entity",
          "maxLength": 100,
          "type": "string"
        },
        "unitOfMeasureId": {
          "format": "uuid",
          "description": "The unitOfMeasureId property for the salesQuoteLine entity",
          "type": "string"
        },
        "unitOfMeasure": {
          "$ref": "#/definitions/unitofmeasuretype"
        },
        "unitPrice": {
          "format": "decimal",
          "description": "The unitPrice property for the salesQuoteLine entity",
          "type": "number"
        },
        "quantity": {
          "format": "decimal",
          "description": "The quantity property for the salesQuoteLine entity",
          "type": "number"
        },
        "discountAmount": {
          "format": "decimal",
          "description": "The discountAmount property for the salesQuoteLine entity",
          "type": "number"
        },
        "discountPercent": {
          "format": "decimal",
          "description": "The discountPercent property for the salesQuoteLine entity",
          "type": "number"
        },
        "discountAppliedBeforeTax": {
          "description": "The discountAppliedBeforeTax property for the salesQuoteLine entity",
          "type": "boolean"
        },
        "amountExcludingTax": {
          "format": "decimal",
          "description": "The amountExcludingTax property for the salesQuoteLine entity",
          "type": "number"
        },
        "taxCode": {
          "description": "The taxCode property for the salesQuoteLine entity",
          "maxLength": 50,
          "type": "string"
        },
        "taxPercent": {
          "format": "decimal",
          "description": "The taxPercent property for the salesQuoteLine entity",
          "type": "number"
        },
        "totalTaxAmount": {
          "format": "decimal",
          "description": "The totalTaxAmount property for the salesQuoteLine entity",
          "type": "number"
        },
        "amountIncludingTax": {
          "format": "decimal",
          "description": "The amountIncludingTax property for the salesQuoteLine entity",
          "type": "number"
        },
        "netAmount": {
          "format": "decimal",
          "description": "The netAmount property for the salesQuoteLine entity",
          "type": "number"
        },
        "netTaxAmount": {
          "format": "decimal",
          "description": "The netTaxAmount property for the salesQuoteLine entity",
          "type": "number"
        },
        "netAmountIncludingTax": {
          "format": "decimal",
          "description": "The netAmountIncludingTax property for the salesQuoteLine entity",
          "type": "number"
        },
        "item": {
          "$ref": "#/definitions/item"
        },
        "account": {
          "$ref": "#/definitions/account"
        }
      }
    },
    "cashFlowStatement": {
      "type": "object",
      "properties": {
        "lineNumber": {
          "format": "int32",
          "description": "The lineNumber property for the cashFlowStatement entity",
          "type": "integer"
        },
        "display": {
          "description": "The display property for the cashFlowStatement entity",
          "maxLength": 250,
          "type": "string"
        },
        "netChange": {
          "format": "decimal",
          "description": "The netChange property for the cashFlowStatement entity",
          "type": "number"
        },
        "lineType": {
          "description": "The lineType property for the cashFlowStatement entity",
          "maxLength": 30,
          "type": "string"
        },
        "indentation": {
          "format": "int32",
          "description": "The indentation property for the cashFlowStatement entity",
          "type": "integer"
        },
        "dateFilter": {
          "format": "date-time",
          "description": "The dateFilter property for the cashFlowStatement entity",
          "type": "string"
        }
      }
    },
    "unitofmeasuretype": {
      "type": "object",
      "properties": {
        "code": {
          "description": "The code property for the unitofmeasuretype entity",
          "maxLength": 10,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the unitofmeasuretype entity",
          "maxLength": 50,
          "type": "string"
        },
        "symbol": {
          "description": "The symbol property for the unitofmeasuretype entity",
          "maxLength": 10,
          "type": "string"
        },
        "unitConversion": {
          "$ref": "#/definitions/itemunitofmeasureconversiontype"
        },
        "picture": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/picture"
          }
        },
        "defaultDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/defaultDimensions"
          }
        },
        "itemCategory": {
          "$ref": "#/definitions/itemCategory"
        }
      }
    },
    "salesOrder": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the salesOrder entity",
          "type": "string"
        },
        "number": {
          "description": "The number property for the salesOrder entity",
          "maxLength": 20,
          "type": "string"
        },
        "externalDocumentNumber": {
          "description": "The externalDocumentNumber property for the salesOrder entity",
          "maxLength": 35,
          "type": "string"
        },
        "orderDate": {
          "format": "date-time",
          "description": "The orderDate property for the salesOrder entity",
          "type": "string"
        },
        "customerId": {
          "format": "uuid",
          "description": "The customerId property for the salesOrder entity",
          "type": "string"
        },
        "contactId": {
          "description": "The contactId property for the salesOrder entity",
          "maxLength": 250,
          "type": "string"
        },
        "customerNumber": {
          "description": "The customerNumber property for the salesOrder entity",
          "maxLength": 20,
          "type": "string"
        },
        "customerName": {
          "description": "The customerName property for the salesOrder entity",
          "maxLength": 100,
          "type": "string"
        },
        "billToName": {
          "description": "The billToName property for the salesOrder entity",
          "maxLength": 100,
          "type": "string"
        },
        "billToCustomerId": {
          "format": "uuid",
          "description": "The billToCustomerId property for the salesOrder entity",
          "type": "string"
        },
        "billToCustomerNumber": {
          "description": "The billToCustomerNumber property for the salesOrder entity",
          "maxLength": 20,
          "type": "string"
        },
        "shipToName": {
          "description": "The shipToName property for the salesOrder entity",
          "maxLength": 100,
          "type": "string"
        },
        "shipToContact": {
          "description": "The shipToContact property for the salesOrder entity",
          "maxLength": 100,
          "type": "string"
        },
        "sellingPostalAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "billingPostalAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "shippingPostalAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "currencyId": {
          "format": "uuid",
          "description": "The currencyId property for the salesOrder entity",
          "type": "string"
        },
        "currencyCode": {
          "description": "The currencyCode property for the salesOrder entity",
          "type": "string"
        },
        "pricesIncludeTax": {
          "description": "The pricesIncludeTax property for the salesOrder entity",
          "type": "boolean"
        },
        "paymentTermsId": {
          "format": "uuid",
          "description": "The paymentTermsId property for the salesOrder entity",
          "type": "string"
        },
        "salesperson": {
          "description": "The salesperson property for the salesOrder entity",
          "maxLength": 20,
          "type": "string"
        },
        "partialShipping": {
          "description": "The partialShipping property for the salesOrder entity",
          "type": "boolean"
        },
        "requestedDeliveryDate": {
          "format": "date-time",
          "description": "The requestedDeliveryDate property for the salesOrder entity",
          "type": "string"
        },
        "discountAmount": {
          "format": "decimal",
          "description": "The discountAmount property for the salesOrder entity",
          "type": "number"
        },
        "discountAppliedBeforeTax": {
          "description": "The discountAppliedBeforeTax property for the salesOrder entity",
          "type": "boolean"
        },
        "totalAmountExcludingTax": {
          "format": "decimal",
          "description": "The totalAmountExcludingTax property for the salesOrder entity",
          "type": "number"
        },
        "totalTaxAmount": {
          "format": "decimal",
          "description": "The totalTaxAmount property for the salesOrder entity",
          "type": "number"
        },
        "totalAmountIncludingTax": {
          "format": "decimal",
          "description": "The totalAmountIncludingTax property for the salesOrder entity",
          "type": "number"
        },
        "fullyShipped": {
          "description": "The fullyShipped property for the salesOrder entity",
          "type": "boolean"
        },
        "status": {
          "description": "The status property for the salesOrder entity",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the salesOrder entity",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phoneNumber property for the salesOrder entity",
          "maxLength": 30,
          "type": "string"
        },
        "email": {
          "description": "The email property for the salesOrder entity",
          "maxLength": 80,
          "type": "string"
        },
        "salesOrderLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesOrderLine"
          }
        },
        "customer": {
          "$ref": "#/definitions/customer"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "paymentTerm": {
          "$ref": "#/definitions/paymentTerm"
        }
      }
    },
    "attachments": {
      "type": "object",
      "properties": {
        "parentId": {
          "format": "uuid",
          "description": "The parentId property for the attachments entity",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "The id property for the attachments entity",
          "type": "string"
        },
        "fileName": {
          "description": "The fileName property for the attachments entity",
          "maxLength": 250,
          "type": "string"
        },
        "byteSize": {
          "format": "int32",
          "description": "The byteSize property for the attachments entity",
          "type": "integer"
        },
        "content": {
          "format": "binary",
          "description": "The content property for the attachments entity",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the attachments entity",
          "type": "string"
        }
      }
    },
    "itemCategory": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the itemCategory entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the itemCategory entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the itemCategory entity",
          "maxLength": 100,
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the itemCategory entity",
          "type": "string"
        }
      }
    },
    "dimensionLine": {
      "type": "object",
      "properties": {
        "parentId": {
          "format": "uuid",
          "description": "The parentId property for the dimensionLine entity",
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "description": "The id property for the dimensionLine entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the dimensionLine entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the dimensionLine entity",
          "maxLength": 30,
          "type": "string"
        },
        "valueId": {
          "format": "uuid",
          "description": "The valueId property for the dimensionLine entity",
          "type": "string"
        },
        "valueCode": {
          "description": "The valueCode property for the dimensionLine entity",
          "type": "string"
        },
        "valueDisplayName": {
          "description": "The valueDisplayName property for the dimensionLine entity",
          "maxLength": 50,
          "type": "string"
        },
        "dimension": {
          "$ref": "#/definitions/dimension"
        }
      }
    },
    "picture": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the picture entity",
          "type": "string"
        },
        "width": {
          "format": "int32",
          "description": "The width property for the picture entity",
          "type": "integer"
        },
        "height": {
          "format": "int32",
          "description": "The height property for the picture entity",
          "type": "integer"
        },
        "contentType": {
          "description": "The contentType property for the picture entity",
          "maxLength": 100,
          "type": "string"
        },
        "content": {
          "format": "binary",
          "description": "The content property for the picture entity",
          "type": "string"
        }
      }
    },
    "salesInvoiceLine": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The id property for the salesInvoiceLine entity",
          "maxLength": 50,
          "type": "string"
        },
        "documentId": {
          "format": "uuid",
          "description": "The documentId property for the salesInvoiceLine entity",
          "type": "string"
        },
        "sequence": {
          "format": "int32",
          "description": "The sequence property for the salesInvoiceLine entity",
          "type": "integer"
        },
        "itemId": {
          "format": "uuid",
          "description": "The itemId property for the salesInvoiceLine entity",
          "type": "string"
        },
        "accountId": {
          "format": "uuid",
          "description": "The accountId property for the salesInvoiceLine entity",
          "type": "string"
        },
        "lineType": {
          "description": "The lineType property for the salesInvoiceLine entity",
          "type": "string"
        },
        "lineDetails": {
          "$ref": "#/definitions/documentlineobjectdetailstype"
        },
        "description": {
          "description": "The description property for the salesInvoiceLine entity",
          "maxLength": 100,
          "type": "string"
        },
        "unitOfMeasureId": {
          "format": "uuid",
          "description": "The unitOfMeasureId property for the salesInvoiceLine entity",
          "type": "string"
        },
        "unitOfMeasure": {
          "$ref": "#/definitions/unitofmeasuretype"
        },
        "unitPrice": {
          "format": "decimal",
          "description": "The unitPrice property for the salesInvoiceLine entity",
          "type": "number"
        },
        "quantity": {
          "format": "decimal",
          "description": "The quantity property for the salesInvoiceLine entity",
          "type": "number"
        },
        "discountAmount": {
          "format": "decimal",
          "description": "The discountAmount property for the salesInvoiceLine entity",
          "type": "number"
        },
        "discountPercent": {
          "format": "decimal",
          "description": "The discountPercent property for the salesInvoiceLine entity",
          "type": "number"
        },
        "discountAppliedBeforeTax": {
          "description": "The discountAppliedBeforeTax property for the salesInvoiceLine entity",
          "type": "boolean"
        },
        "amountExcludingTax": {
          "format": "decimal",
          "description": "The amountExcludingTax property for the salesInvoiceLine entity",
          "type": "number"
        },
        "taxCode": {
          "description": "The taxCode property for the salesInvoiceLine entity",
          "maxLength": 50,
          "type": "string"
        },
        "taxPercent": {
          "format": "decimal",
          "description": "The taxPercent property for the salesInvoiceLine entity",
          "type": "number"
        },
        "totalTaxAmount": {
          "format": "decimal",
          "description": "The totalTaxAmount property for the salesInvoiceLine entity",
          "type": "number"
        },
        "amountIncludingTax": {
          "format": "decimal",
          "description": "The amountIncludingTax property for the salesInvoiceLine entity",
          "type": "number"
        },
        "invoiceDiscountAllocation": {
          "format": "decimal",
          "description": "The invoiceDiscountAllocation property for the salesInvoiceLine entity",
          "type": "number"
        },
        "netAmount": {
          "format": "decimal",
          "description": "The netAmount property for the salesInvoiceLine entity",
          "type": "number"
        },
        "netTaxAmount": {
          "format": "decimal",
          "description": "The netTaxAmount property for the salesInvoiceLine entity",
          "type": "number"
        },
        "netAmountIncludingTax": {
          "format": "decimal",
          "description": "The netAmountIncludingTax property for the salesInvoiceLine entity",
          "type": "number"
        },
        "shipmentDate": {
          "format": "date-time",
          "description": "The shipmentDate property for the salesInvoiceLine entity",
          "type": "string"
        },
        "item": {
          "$ref": "#/definitions/item"
        },
        "account": {
          "$ref": "#/definitions/account"
        }
      }
    },
    "customerFinancialDetail": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the customerFinancialDetail entity",
          "type": "string"
        },
        "number": {
          "description": "The number property for the customerFinancialDetail entity",
          "maxLength": 20,
          "type": "string"
        },
        "balance": {
          "format": "decimal",
          "description": "The balance property for the customerFinancialDetail entity",
          "type": "number"
        },
        "totalSalesExcludingTax": {
          "format": "decimal",
          "description": "The totalSalesExcludingTax property for the customerFinancialDetail entity",
          "type": "number"
        },
        "overdueAmount": {
          "format": "decimal",
          "description": "The overdueAmount property for the customerFinancialDetail entity",
          "type": "number"
        }
      }
    },
    "salesCreditMemoLine": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The id property for the salesCreditMemoLine entity",
          "maxLength": 50,
          "type": "string"
        },
        "documentId": {
          "format": "uuid",
          "description": "The documentId property for the salesCreditMemoLine entity",
          "type": "string"
        },
        "sequence": {
          "format": "int32",
          "description": "The sequence property for the salesCreditMemoLine entity",
          "type": "integer"
        },
        "itemId": {
          "format": "uuid",
          "description": "The itemId property for the salesCreditMemoLine entity",
          "type": "string"
        },
        "accountId": {
          "format": "uuid",
          "description": "The accountId property for the salesCreditMemoLine entity",
          "type": "string"
        },
        "lineType": {
          "description": "The lineType property for the salesCreditMemoLine entity",
          "type": "string"
        },
        "lineDetails": {
          "$ref": "#/definitions/documentlineobjectdetailstype"
        },
        "description": {
          "description": "The description property for the salesCreditMemoLine entity",
          "maxLength": 100,
          "type": "string"
        },
        "unitOfMeasureId": {
          "format": "uuid",
          "description": "The unitOfMeasureId property for the salesCreditMemoLine entity",
          "type": "string"
        },
        "unitOfMeasure": {
          "$ref": "#/definitions/unitofmeasuretype"
        },
        "unitPrice": {
          "format": "decimal",
          "description": "The unitPrice property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "quantity": {
          "format": "decimal",
          "description": "The quantity property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "discountAmount": {
          "format": "decimal",
          "description": "The discountAmount property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "discountPercent": {
          "format": "decimal",
          "description": "The discountPercent property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "discountAppliedBeforeTax": {
          "description": "The discountAppliedBeforeTax property for the salesCreditMemoLine entity",
          "type": "boolean"
        },
        "amountExcludingTax": {
          "format": "decimal",
          "description": "The amountExcludingTax property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "taxCode": {
          "description": "The taxCode property for the salesCreditMemoLine entity",
          "maxLength": 50,
          "type": "string"
        },
        "taxPercent": {
          "format": "decimal",
          "description": "The taxPercent property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "totalTaxAmount": {
          "format": "decimal",
          "description": "The totalTaxAmount property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "amountIncludingTax": {
          "format": "decimal",
          "description": "The amountIncludingTax property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "invoiceDiscountAllocation": {
          "format": "decimal",
          "description": "The invoiceDiscountAllocation property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "netAmount": {
          "format": "decimal",
          "description": "The netAmount property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "netTaxAmount": {
          "format": "decimal",
          "description": "The netTaxAmount property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "netAmountIncludingTax": {
          "format": "decimal",
          "description": "The netAmountIncludingTax property for the salesCreditMemoLine entity",
          "type": "number"
        },
        "shipmentDate": {
          "format": "date-time",
          "description": "The shipmentDate property for the salesCreditMemoLine entity",
          "type": "string"
        },
        "item": {
          "$ref": "#/definitions/item"
        },
        "account": {
          "$ref": "#/definitions/account"
        }
      }
    },
    "pdfDocument": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the pdfDocument entity",
          "type": "string"
        },
        "content": {
          "format": "binary",
          "description": "The content property for the pdfDocument entity",
          "type": "string"
        }
      }
    },
    "salesCreditMemo": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the salesCreditMemo entity",
          "type": "string"
        },
        "number": {
          "description": "The number property for the salesCreditMemo entity",
          "maxLength": 20,
          "type": "string"
        },
        "externalDocumentNumber": {
          "description": "The externalDocumentNumber property for the salesCreditMemo entity",
          "maxLength": 35,
          "type": "string"
        },
        "creditMemoDate": {
          "format": "date-time",
          "description": "The creditMemoDate property for the salesCreditMemo entity",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "description": "The dueDate property for the salesCreditMemo entity",
          "type": "string"
        },
        "customerId": {
          "format": "uuid",
          "description": "The customerId property for the salesCreditMemo entity",
          "type": "string"
        },
        "contactId": {
          "description": "The contactId property for the salesCreditMemo entity",
          "maxLength": 250,
          "type": "string"
        },
        "customerNumber": {
          "description": "The customerNumber property for the salesCreditMemo entity",
          "maxLength": 20,
          "type": "string"
        },
        "customerName": {
          "description": "The customerName property for the salesCreditMemo entity",
          "maxLength": 100,
          "type": "string"
        },
        "billToName": {
          "description": "The billToName property for the salesCreditMemo entity",
          "maxLength": 100,
          "type": "string"
        },
        "billToCustomerId": {
          "format": "uuid",
          "description": "The billToCustomerId property for the salesCreditMemo entity",
          "type": "string"
        },
        "billToCustomerNumber": {
          "description": "The billToCustomerNumber property for the salesCreditMemo entity",
          "maxLength": 20,
          "type": "string"
        },
        "sellingPostalAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "billingPostalAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "currencyId": {
          "format": "uuid",
          "description": "The currencyId property for the salesCreditMemo entity",
          "type": "string"
        },
        "currencyCode": {
          "description": "The currencyCode property for the salesCreditMemo entity",
          "type": "string"
        },
        "paymentTermsId": {
          "format": "uuid",
          "description": "The paymentTermsId property for the salesCreditMemo entity",
          "type": "string"
        },
        "salesperson": {
          "description": "The salesperson property for the salesCreditMemo entity",
          "maxLength": 20,
          "type": "string"
        },
        "pricesIncludeTax": {
          "description": "The pricesIncludeTax property for the salesCreditMemo entity",
          "type": "boolean"
        },
        "discountAmount": {
          "format": "decimal",
          "description": "The discountAmount property for the salesCreditMemo entity",
          "type": "number"
        },
        "discountAppliedBeforeTax": {
          "description": "The discountAppliedBeforeTax property for the salesCreditMemo entity",
          "type": "boolean"
        },
        "totalAmountExcludingTax": {
          "format": "decimal",
          "description": "The totalAmountExcludingTax property for the salesCreditMemo entity",
          "type": "number"
        },
        "totalTaxAmount": {
          "format": "decimal",
          "description": "The totalTaxAmount property for the salesCreditMemo entity",
          "type": "number"
        },
        "totalAmountIncludingTax": {
          "format": "decimal",
          "description": "The totalAmountIncludingTax property for the salesCreditMemo entity",
          "type": "number"
        },
        "status": {
          "description": "The status property for the salesCreditMemo entity",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the salesCreditMemo entity",
          "type": "string"
        },
        "invoiceId": {
          "format": "uuid",
          "description": "The invoiceId property for the salesCreditMemo entity",
          "type": "string"
        },
        "invoiceNumber": {
          "description": "The invoiceNumber property for the salesCreditMemo entity",
          "maxLength": 20,
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phoneNumber property for the salesCreditMemo entity",
          "maxLength": 30,
          "type": "string"
        },
        "email": {
          "description": "The email property for the salesCreditMemo entity",
          "maxLength": 80,
          "type": "string"
        },
        "salesCreditMemoLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesCreditMemoLine"
          }
        },
        "pdfDocument": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pdfDocument"
          }
        },
        "customer": {
          "$ref": "#/definitions/customer"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "paymentTerm": {
          "$ref": "#/definitions/paymentTerm"
        }
      }
    },
    "vendorPurchase": {
      "type": "object",
      "properties": {
        "vendorId": {
          "format": "uuid",
          "description": "The vendorId property for the vendorPurchase entity",
          "type": "string"
        },
        "vendorNumber": {
          "description": "The vendorNumber property for the vendorPurchase entity",
          "maxLength": 20,
          "type": "string"
        },
        "name": {
          "description": "The name property for the vendorPurchase entity",
          "maxLength": 100,
          "type": "string"
        },
        "totalPurchaseAmount": {
          "format": "decimal",
          "description": "The totalPurchaseAmount property for the vendorPurchase entity",
          "type": "number"
        },
        "dateFilter_FilterOnly": {
          "format": "date-time",
          "description": "The dateFilter_FilterOnly property for the vendorPurchase entity",
          "type": "string"
        }
      }
    },
    "incomeStatement": {
      "type": "object",
      "properties": {
        "lineNumber": {
          "format": "int32",
          "description": "The lineNumber property for the incomeStatement entity",
          "type": "integer"
        },
        "display": {
          "description": "The display property for the incomeStatement entity",
          "maxLength": 250,
          "type": "string"
        },
        "netChange": {
          "format": "decimal",
          "description": "The netChange property for the incomeStatement entity",
          "type": "number"
        },
        "lineType": {
          "description": "The lineType property for the incomeStatement entity",
          "maxLength": 30,
          "type": "string"
        },
        "indentation": {
          "format": "int32",
          "description": "The indentation property for the incomeStatement entity",
          "type": "integer"
        },
        "dateFilter": {
          "format": "date-time",
          "description": "The dateFilter property for the incomeStatement entity",
          "type": "string"
        }
      }
    },
    "generalLedgerEntry": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The id property for the generalLedgerEntry entity",
          "type": "integer"
        },
        "postingDate": {
          "format": "date-time",
          "description": "The postingDate property for the generalLedgerEntry entity",
          "type": "string"
        },
        "documentNumber": {
          "description": "The documentNumber property for the generalLedgerEntry entity",
          "maxLength": 20,
          "type": "string"
        },
        "documentType": {
          "description": "The documentType property for the generalLedgerEntry entity",
          "type": "string"
        },
        "accountId": {
          "format": "uuid",
          "description": "The accountId property for the generalLedgerEntry entity",
          "type": "string"
        },
        "accountNumber": {
          "description": "The accountNumber property for the generalLedgerEntry entity",
          "maxLength": 20,
          "type": "string"
        },
        "description": {
          "description": "The description property for the generalLedgerEntry entity",
          "maxLength": 100,
          "type": "string"
        },
        "debitAmount": {
          "format": "decimal",
          "description": "The debitAmount property for the generalLedgerEntry entity",
          "type": "number"
        },
        "creditAmount": {
          "format": "decimal",
          "description": "The creditAmount property for the generalLedgerEntry entity",
          "type": "number"
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dimensiontype"
          }
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the generalLedgerEntry entity",
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/account"
        }
      }
    },
    "customerSale": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "uuid",
          "description": "The customerId property for the customerSale entity",
          "type": "string"
        },
        "customerNumber": {
          "description": "The customerNumber property for the customerSale entity",
          "maxLength": 20,
          "type": "string"
        },
        "name": {
          "description": "The name property for the customerSale entity",
          "maxLength": 100,
          "type": "string"
        },
        "totalSalesAmount": {
          "format": "decimal",
          "description": "The totalSalesAmount property for the customerSale entity",
          "type": "number"
        },
        "dateFilter_FilterOnly": {
          "format": "date-time",
          "description": "The dateFilter_FilterOnly property for the customerSale entity",
          "type": "string"
        }
      }
    },
    "countryRegion": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the countryRegion entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the countryRegion entity",
          "maxLength": 10,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the countryRegion entity",
          "maxLength": 50,
          "type": "string"
        },
        "addressFormat": {
          "description": "The addressFormat property for the countryRegion entity",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the countryRegion entity",
          "type": "string"
        }
      }
    },
    "purchaseInvoiceLine": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The id property for the purchaseInvoiceLine entity",
          "maxLength": 50,
          "type": "string"
        },
        "documentId": {
          "format": "uuid",
          "description": "The documentId property for the purchaseInvoiceLine entity",
          "type": "string"
        },
        "sequence": {
          "format": "int32",
          "description": "The sequence property for the purchaseInvoiceLine entity",
          "type": "integer"
        },
        "itemId": {
          "format": "uuid",
          "description": "The itemId property for the purchaseInvoiceLine entity",
          "type": "string"
        },
        "accountId": {
          "format": "uuid",
          "description": "The accountId property for the purchaseInvoiceLine entity",
          "type": "string"
        },
        "lineType": {
          "description": "The lineType property for the purchaseInvoiceLine entity",
          "type": "string"
        },
        "lineDetails": {
          "$ref": "#/definitions/documentlineobjectdetailstype"
        },
        "description": {
          "description": "The description property for the purchaseInvoiceLine entity",
          "maxLength": 100,
          "type": "string"
        },
        "unitOfMeasure": {
          "$ref": "#/definitions/unitofmeasuretype"
        },
        "unitCost": {
          "format": "decimal",
          "description": "The unitCost property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "quantity": {
          "format": "decimal",
          "description": "The quantity property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "discountAmount": {
          "format": "decimal",
          "description": "The discountAmount property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "discountPercent": {
          "format": "decimal",
          "description": "The discountPercent property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "discountAppliedBeforeTax": {
          "description": "The discountAppliedBeforeTax property for the purchaseInvoiceLine entity",
          "type": "boolean"
        },
        "amountExcludingTax": {
          "format": "decimal",
          "description": "The amountExcludingTax property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "taxCode": {
          "description": "The taxCode property for the purchaseInvoiceLine entity",
          "maxLength": 50,
          "type": "string"
        },
        "taxPercent": {
          "format": "decimal",
          "description": "The taxPercent property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "totalTaxAmount": {
          "format": "decimal",
          "description": "The totalTaxAmount property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "amountIncludingTax": {
          "format": "decimal",
          "description": "The amountIncludingTax property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "invoiceDiscountAllocation": {
          "format": "decimal",
          "description": "The invoiceDiscountAllocation property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "netAmount": {
          "format": "decimal",
          "description": "The netAmount property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "netTaxAmount": {
          "format": "decimal",
          "description": "The netTaxAmount property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "netAmountIncludingTax": {
          "format": "decimal",
          "description": "The netAmountIncludingTax property for the purchaseInvoiceLine entity",
          "type": "number"
        },
        "expectedReceiptDate": {
          "format": "date-time",
          "description": "The expectedReceiptDate property for the purchaseInvoiceLine entity",
          "type": "string"
        },
        "item": {
          "$ref": "#/definitions/item"
        },
        "account": {
          "$ref": "#/definitions/account"
        }
      }
    },
    "dimensionValue": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the dimensionValue entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the dimensionValue entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the dimensionValue entity",
          "maxLength": 50,
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the dimensionValue entity",
          "type": "string"
        }
      }
    },
    "vendor": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the vendor entity",
          "type": "string"
        },
        "number": {
          "description": "The number property for the vendor entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the vendor entity",
          "maxLength": 100,
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "phoneNumber": {
          "description": "The phoneNumber property for the vendor entity",
          "maxLength": 30,
          "type": "string"
        },
        "email": {
          "description": "The email property for the vendor entity",
          "maxLength": 80,
          "type": "string"
        },
        "website": {
          "description": "The website property for the vendor entity",
          "maxLength": 80,
          "type": "string"
        },
        "taxRegistrationNumber": {
          "description": "The taxRegistrationNumber property for the vendor entity",
          "maxLength": 20,
          "type": "string"
        },
        "currencyId": {
          "format": "uuid",
          "description": "The currencyId property for the vendor entity",
          "type": "string"
        },
        "currencyCode": {
          "description": "The currencyCode property for the vendor entity",
          "type": "string"
        },
        "irs1099Code": {
          "description": "The irs1099Code property for the vendor entity",
          "type": "string"
        },
        "paymentTermsId": {
          "format": "uuid",
          "description": "The paymentTermsId property for the vendor entity",
          "type": "string"
        },
        "paymentMethodId": {
          "format": "uuid",
          "description": "The paymentMethodId property for the vendor entity",
          "type": "string"
        },
        "taxLiable": {
          "description": "The taxLiable property for the vendor entity",
          "type": "boolean"
        },
        "blocked": {
          "description": "The blocked property for the vendor entity",
          "type": "string"
        },
        "balance": {
          "format": "decimal",
          "description": "The balance property for the vendor entity",
          "type": "number"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the vendor entity",
          "type": "string"
        },
        "picture": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/picture"
          }
        },
        "defaultDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/defaultDimensions"
          }
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "paymentTerm": {
          "$ref": "#/definitions/paymentTerm"
        },
        "paymentMethod": {
          "$ref": "#/definitions/paymentMethod"
        }
      }
    },
    "customer": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the customer entity",
          "type": "string"
        },
        "number": {
          "description": "The number property for the customer entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the customer entity",
          "maxLength": 100,
          "type": "string"
        },
        "type": {
          "description": "The type property for the customer entity",
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "phoneNumber": {
          "description": "The phoneNumber property for the customer entity",
          "maxLength": 30,
          "type": "string"
        },
        "email": {
          "description": "The email property for the customer entity",
          "maxLength": 80,
          "type": "string"
        },
        "website": {
          "description": "The website property for the customer entity",
          "maxLength": 80,
          "type": "string"
        },
        "taxLiable": {
          "description": "The taxLiable property for the customer entity",
          "type": "boolean"
        },
        "taxAreaId": {
          "format": "uuid",
          "description": "The taxAreaId property for the customer entity",
          "type": "string"
        },
        "taxAreaDisplayName": {
          "description": "The taxAreaDisplayName property for the customer entity",
          "type": "string"
        },
        "taxRegistrationNumber": {
          "description": "The taxRegistrationNumber property for the customer entity",
          "maxLength": 20,
          "type": "string"
        },
        "currencyId": {
          "format": "uuid",
          "description": "The currencyId property for the customer entity",
          "type": "string"
        },
        "currencyCode": {
          "description": "The currencyCode property for the customer entity",
          "type": "string"
        },
        "paymentTermsId": {
          "format": "uuid",
          "description": "The paymentTermsId property for the customer entity",
          "type": "string"
        },
        "shipmentMethodId": {
          "format": "uuid",
          "description": "The shipmentMethodId property for the customer entity",
          "type": "string"
        },
        "paymentMethodId": {
          "format": "uuid",
          "description": "The paymentMethodId property for the customer entity",
          "type": "string"
        },
        "blocked": {
          "description": "The blocked property for the customer entity",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the customer entity",
          "type": "string"
        },
        "customerFinancialDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerFinancialDetail"
          }
        },
        "picture": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/picture"
          }
        },
        "defaultDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/defaultDimensions"
          }
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "paymentTerm": {
          "$ref": "#/definitions/paymentTerm"
        },
        "shipmentMethod": {
          "$ref": "#/definitions/shipmentMethod"
        },
        "paymentMethod": {
          "$ref": "#/definitions/paymentMethod"
        }
      }
    },
    "item": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the item entity",
          "type": "string"
        },
        "number": {
          "description": "The number property for the item entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the item entity",
          "maxLength": 100,
          "type": "string"
        },
        "type": {
          "description": "The type property for the item entity",
          "type": "string"
        },
        "itemCategoryId": {
          "format": "uuid",
          "description": "The itemCategoryId property for the item entity",
          "type": "string"
        },
        "itemCategoryCode": {
          "description": "The itemCategoryCode property for the item entity",
          "maxLength": 20,
          "type": "string"
        },
        "blocked": {
          "description": "The blocked property for the item entity",
          "type": "boolean"
        },
        "baseUnitOfMeasureId": {
          "format": "uuid",
          "description": "The baseUnitOfMeasureId property for the item entity",
          "type": "string"
        },
        "baseUnitOfMeasure": {
          "$ref": "#/definitions/unitofmeasuretype"
        },
        "gtin": {
          "description": "The gtin property for the item entity",
          "maxLength": 14,
          "type": "string"
        },
        "inventory": {
          "format": "decimal",
          "description": "The inventory property for the item entity",
          "type": "number"
        },
        "unitPrice": {
          "format": "decimal",
          "description": "The unitPrice property for the item entity",
          "type": "number"
        },
        "priceIncludesTax": {
          "description": "The priceIncludesTax property for the item entity",
          "type": "boolean"
        },
        "unitCost": {
          "format": "decimal",
          "description": "The unitCost property for the item entity",
          "type": "number"
        },
        "taxGroupId": {
          "format": "uuid",
          "description": "The taxGroupId property for the item entity",
          "type": "string"
        },
        "taxGroupCode": {
          "description": "The taxGroupCode property for the item entity",
          "maxLength": 20,
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the item entity",
          "type": "string"
        },
        "picture": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/picture"
          }
        },
        "defaultDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/defaultDimensions"
          }
        },
        "itemCategory": {
          "$ref": "#/definitions/itemCategory"
        }
      }
    },
    "journal": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the journal entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the journal entity",
          "maxLength": 10,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the journal entity",
          "maxLength": 100,
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the journal entity",
          "type": "string"
        },
        "balancingAccountId": {
          "format": "uuid",
          "description": "The balancingAccountId property for the journal entity",
          "type": "string"
        },
        "balancingAccountNumber": {
          "description": "The balancingAccountNumber property for the journal entity",
          "maxLength": 20,
          "type": "string"
        },
        "journalLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/journalLine"
          }
        },
        "account": {
          "$ref": "#/definitions/account"
        }
      }
    },
    "account": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the account entity",
          "type": "string"
        },
        "number": {
          "description": "The number property for the account entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the account entity",
          "maxLength": 100,
          "type": "string"
        },
        "category": {
          "description": "The category property for the account entity",
          "type": "string"
        },
        "subCategory": {
          "description": "The subCategory property for the account entity",
          "maxLength": 80,
          "type": "string"
        },
        "blocked": {
          "description": "The blocked property for the account entity",
          "type": "boolean"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the account entity",
          "type": "string"
        }
      }
    },
    "retainedEarningsStatement": {
      "type": "object",
      "properties": {
        "lineNumber": {
          "format": "int32",
          "description": "The lineNumber property for the retainedEarningsStatement entity",
          "type": "integer"
        },
        "display": {
          "description": "The display property for the retainedEarningsStatement entity",
          "maxLength": 250,
          "type": "string"
        },
        "netChange": {
          "format": "decimal",
          "description": "The netChange property for the retainedEarningsStatement entity",
          "type": "number"
        },
        "lineType": {
          "description": "The lineType property for the retainedEarningsStatement entity",
          "maxLength": 30,
          "type": "string"
        },
        "indentation": {
          "format": "int32",
          "description": "The indentation property for the retainedEarningsStatement entity",
          "type": "integer"
        },
        "dateFilter": {
          "format": "date-time",
          "description": "The dateFilter property for the retainedEarningsStatement entity",
          "type": "string"
        }
      }
    },
    "purchaseInvoice": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the purchaseInvoice entity",
          "type": "string"
        },
        "number": {
          "description": "The number property for the purchaseInvoice entity",
          "maxLength": 20,
          "type": "string"
        },
        "invoiceDate": {
          "format": "date-time",
          "description": "The invoiceDate property for the purchaseInvoice entity",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "description": "The dueDate property for the purchaseInvoice entity",
          "type": "string"
        },
        "vendorInvoiceNumber": {
          "description": "The vendorInvoiceNumber property for the purchaseInvoice entity",
          "maxLength": 35,
          "type": "string"
        },
        "vendorId": {
          "format": "uuid",
          "description": "The vendorId property for the purchaseInvoice entity",
          "type": "string"
        },
        "vendorNumber": {
          "description": "The vendorNumber property for the purchaseInvoice entity",
          "maxLength": 20,
          "type": "string"
        },
        "vendorName": {
          "description": "The vendorName property for the purchaseInvoice entity",
          "maxLength": 100,
          "type": "string"
        },
        "payToName": {
          "description": "The payToName property for the purchaseInvoice entity",
          "maxLength": 100,
          "type": "string"
        },
        "payToContact": {
          "description": "The payToContact property for the purchaseInvoice entity",
          "maxLength": 100,
          "type": "string"
        },
        "payToVendorId": {
          "format": "uuid",
          "description": "The payToVendorId property for the purchaseInvoice entity",
          "type": "string"
        },
        "payToVendorNumber": {
          "description": "The payToVendorNumber property for the purchaseInvoice entity",
          "maxLength": 20,
          "type": "string"
        },
        "shipToName": {
          "description": "The shipToName property for the purchaseInvoice entity",
          "maxLength": 100,
          "type": "string"
        },
        "shipToContact": {
          "description": "The shipToContact property for the purchaseInvoice entity",
          "maxLength": 100,
          "type": "string"
        },
        "buyFromAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "payToAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "shipToAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "currencyId": {
          "format": "uuid",
          "description": "The currencyId property for the purchaseInvoice entity",
          "type": "string"
        },
        "currencyCode": {
          "description": "The currencyCode property for the purchaseInvoice entity",
          "type": "string"
        },
        "pricesIncludeTax": {
          "description": "The pricesIncludeTax property for the purchaseInvoice entity",
          "type": "boolean"
        },
        "discountAmount": {
          "format": "decimal",
          "description": "The discountAmount property for the purchaseInvoice entity",
          "type": "number"
        },
        "discountAppliedBeforeTax": {
          "description": "The discountAppliedBeforeTax property for the purchaseInvoice entity",
          "type": "boolean"
        },
        "totalAmountExcludingTax": {
          "format": "decimal",
          "description": "The totalAmountExcludingTax property for the purchaseInvoice entity",
          "type": "number"
        },
        "totalTaxAmount": {
          "format": "decimal",
          "description": "The totalTaxAmount property for the purchaseInvoice entity",
          "type": "number"
        },
        "totalAmountIncludingTax": {
          "format": "decimal",
          "description": "The totalAmountIncludingTax property for the purchaseInvoice entity",
          "type": "number"
        },
        "status": {
          "description": "The status property for the purchaseInvoice entity",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the purchaseInvoice entity",
          "type": "string"
        },
        "purchaseInvoiceLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/purchaseInvoiceLine"
          }
        },
        "pdfDocument": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pdfDocument"
          }
        },
        "vendor": {
          "$ref": "#/definitions/vendor"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        }
      }
    },
    "dimension": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the dimension entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the dimension entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the dimension entity",
          "maxLength": 30,
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the dimension entity",
          "type": "string"
        },
        "dimensionValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dimensionValue"
          }
        }
      }
    },
    "salesOrderLine": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The id property for the salesOrderLine entity",
          "maxLength": 50,
          "type": "string"
        },
        "documentId": {
          "format": "uuid",
          "description": "The documentId property for the salesOrderLine entity",
          "type": "string"
        },
        "sequence": {
          "format": "int32",
          "description": "The sequence property for the salesOrderLine entity",
          "type": "integer"
        },
        "itemId": {
          "format": "uuid",
          "description": "The itemId property for the salesOrderLine entity",
          "type": "string"
        },
        "accountId": {
          "format": "uuid",
          "description": "The accountId property for the salesOrderLine entity",
          "type": "string"
        },
        "lineType": {
          "description": "The lineType property for the salesOrderLine entity",
          "type": "string"
        },
        "lineDetails": {
          "$ref": "#/definitions/documentlineobjectdetailstype"
        },
        "description": {
          "description": "The description property for the salesOrderLine entity",
          "maxLength": 100,
          "type": "string"
        },
        "unitOfMeasureId": {
          "format": "uuid",
          "description": "The unitOfMeasureId property for the salesOrderLine entity",
          "type": "string"
        },
        "unitOfMeasure": {
          "$ref": "#/definitions/unitofmeasuretype"
        },
        "quantity": {
          "format": "decimal",
          "description": "The quantity property for the salesOrderLine entity",
          "type": "number"
        },
        "unitPrice": {
          "format": "decimal",
          "description": "The unitPrice property for the salesOrderLine entity",
          "type": "number"
        },
        "discountAmount": {
          "format": "decimal",
          "description": "The discountAmount property for the salesOrderLine entity",
          "type": "number"
        },
        "discountPercent": {
          "format": "decimal",
          "description": "The discountPercent property for the salesOrderLine entity",
          "type": "number"
        },
        "discountAppliedBeforeTax": {
          "description": "The discountAppliedBeforeTax property for the salesOrderLine entity",
          "type": "boolean"
        },
        "amountExcludingTax": {
          "format": "decimal",
          "description": "The amountExcludingTax property for the salesOrderLine entity",
          "type": "number"
        },
        "taxCode": {
          "description": "The taxCode property for the salesOrderLine entity",
          "maxLength": 50,
          "type": "string"
        },
        "taxPercent": {
          "format": "decimal",
          "description": "The taxPercent property for the salesOrderLine entity",
          "type": "number"
        },
        "totalTaxAmount": {
          "format": "decimal",
          "description": "The totalTaxAmount property for the salesOrderLine entity",
          "type": "number"
        },
        "amountIncludingTax": {
          "format": "decimal",
          "description": "The amountIncludingTax property for the salesOrderLine entity",
          "type": "number"
        },
        "invoiceDiscountAllocation": {
          "format": "decimal",
          "description": "The invoiceDiscountAllocation property for the salesOrderLine entity",
          "type": "number"
        },
        "netAmount": {
          "format": "decimal",
          "description": "The netAmount property for the salesOrderLine entity",
          "type": "number"
        },
        "netTaxAmount": {
          "format": "decimal",
          "description": "The netTaxAmount property for the salesOrderLine entity",
          "type": "number"
        },
        "netAmountIncludingTax": {
          "format": "decimal",
          "description": "The netAmountIncludingTax property for the salesOrderLine entity",
          "type": "number"
        },
        "shipmentDate": {
          "format": "date-time",
          "description": "The shipmentDate property for the salesOrderLine entity",
          "type": "string"
        },
        "shippedQuantity": {
          "format": "decimal",
          "description": "The shippedQuantity property for the salesOrderLine entity",
          "type": "number"
        },
        "invoicedQuantity": {
          "format": "decimal",
          "description": "The invoicedQuantity property for the salesOrderLine entity",
          "type": "number"
        },
        "invoiceQuantity": {
          "format": "decimal",
          "description": "The invoiceQuantity property for the salesOrderLine entity",
          "type": "number"
        },
        "shipQuantity": {
          "format": "decimal",
          "description": "The shipQuantity property for the salesOrderLine entity",
          "type": "number"
        },
        "item": {
          "$ref": "#/definitions/item"
        },
        "account": {
          "$ref": "#/definitions/account"
        }
      }
    },
    "timeRegistrationEntry": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the timeRegistrationEntry entity",
          "type": "string"
        },
        "employeeId": {
          "format": "uuid",
          "description": "The employeeId property for the timeRegistrationEntry entity",
          "type": "string"
        },
        "employeeNumber": {
          "description": "The employeeNumber property for the timeRegistrationEntry entity",
          "maxLength": 20,
          "type": "string"
        },
        "lineNumber": {
          "format": "int32",
          "description": "The lineNumber property for the timeRegistrationEntry entity",
          "type": "integer"
        },
        "date": {
          "format": "date-time",
          "description": "The date property for the timeRegistrationEntry entity",
          "type": "string"
        },
        "quantity": {
          "format": "decimal",
          "description": "The quantity property for the timeRegistrationEntry entity",
          "type": "number"
        },
        "status": {
          "description": "The status property for the timeRegistrationEntry entity",
          "type": "string"
        },
        "unitOfMeasureId": {
          "format": "uuid",
          "description": "The unitOfMeasureId property for the timeRegistrationEntry entity",
          "type": "string"
        },
        "unitOfMeasure": {
          "$ref": "#/definitions/unitofmeasuretype"
        },
        "lastModfiedDateTime": {
          "format": "date-time",
          "description": "The lastModfiedDateTime property for the timeRegistrationEntry entity",
          "type": "string"
        }
      }
    },
    "paymentTerm": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the paymentTerm entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the paymentTerm entity",
          "maxLength": 10,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the paymentTerm entity",
          "maxLength": 100,
          "type": "string"
        },
        "dueDateCalculation": {
          "description": "The dueDateCalculation property for the paymentTerm entity",
          "type": "string"
        },
        "discountDateCalculation": {
          "description": "The discountDateCalculation property for the paymentTerm entity",
          "type": "string"
        },
        "discountPercent": {
          "format": "decimal",
          "description": "The discountPercent property for the paymentTerm entity",
          "type": "number"
        },
        "calculateDiscountOnCreditMemos": {
          "description": "The calculateDiscountOnCreditMemos property for the paymentTerm entity",
          "type": "boolean"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the paymentTerm entity",
          "type": "string"
        }
      }
    },
    "customerPayment": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the customerPayment entity",
          "type": "string"
        },
        "journalDisplayName": {
          "description": "The journalDisplayName property for the customerPayment entity",
          "type": "string"
        },
        "lineNumber": {
          "format": "int32",
          "description": "The lineNumber property for the customerPayment entity",
          "type": "integer"
        },
        "customerId": {
          "format": "uuid",
          "description": "The customerId property for the customerPayment entity",
          "type": "string"
        },
        "customerNumber": {
          "description": "The customerNumber property for the customerPayment entity",
          "maxLength": 20,
          "type": "string"
        },
        "contactId": {
          "description": "The contactId property for the customerPayment entity",
          "maxLength": 250,
          "type": "string"
        },
        "postingDate": {
          "format": "date-time",
          "description": "The postingDate property for the customerPayment entity",
          "type": "string"
        },
        "documentNumber": {
          "description": "The documentNumber property for the customerPayment entity",
          "maxLength": 20,
          "type": "string"
        },
        "externalDocumentNumber": {
          "description": "The externalDocumentNumber property for the customerPayment entity",
          "maxLength": 35,
          "type": "string"
        },
        "amount": {
          "format": "decimal",
          "description": "The amount property for the customerPayment entity",
          "type": "number"
        },
        "appliesToInvoiceId": {
          "format": "uuid",
          "description": "The appliesToInvoiceId property for the customerPayment entity",
          "type": "string"
        },
        "appliesToInvoiceNumber": {
          "description": "The appliesToInvoiceNumber property for the customerPayment entity",
          "type": "string"
        },
        "description": {
          "description": "The description property for the customerPayment entity",
          "maxLength": 100,
          "type": "string"
        },
        "comment": {
          "description": "The comment property for the customerPayment entity",
          "maxLength": 250,
          "type": "string"
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dimensiontype"
          }
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the customerPayment entity",
          "type": "string"
        },
        "customer": {
          "$ref": "#/definitions/customer"
        }
      }
    },
    "trialBalance": {
      "type": "object",
      "properties": {
        "number": {
          "description": "The number property for the trialBalance entity",
          "maxLength": 20,
          "type": "string"
        },
        "accountId": {
          "format": "uuid",
          "description": "The accountId property for the trialBalance entity",
          "type": "string"
        },
        "accountType": {
          "description": "The accountType property for the trialBalance entity",
          "type": "string"
        },
        "display": {
          "description": "The display property for the trialBalance entity",
          "maxLength": 100,
          "type": "string"
        },
        "totalDebit": {
          "description": "The totalDebit property for the trialBalance entity",
          "maxLength": 30,
          "type": "string"
        },
        "totalCredit": {
          "description": "The totalCredit property for the trialBalance entity",
          "maxLength": 30,
          "type": "string"
        },
        "balanceAtDateDebit": {
          "description": "The balanceAtDateDebit property for the trialBalance entity",
          "maxLength": 30,
          "type": "string"
        },
        "balanceAtDateCredit": {
          "description": "The balanceAtDateCredit property for the trialBalance entity",
          "maxLength": 30,
          "type": "string"
        },
        "dateFilter": {
          "format": "date-time",
          "description": "The dateFilter property for the trialBalance entity",
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/account"
        }
      }
    },
    "agedAccountsPayable": {
      "type": "object",
      "properties": {
        "vendorId": {
          "format": "uuid",
          "description": "The vendorId property for the agedAccountsPayable entity",
          "type": "string"
        },
        "vendorNumber": {
          "description": "The vendorNumber property for the agedAccountsPayable entity",
          "maxLength": 20,
          "type": "string"
        },
        "name": {
          "description": "The name property for the agedAccountsPayable entity",
          "maxLength": 100,
          "type": "string"
        },
        "currencyCode": {
          "description": "The currencyCode property for the agedAccountsPayable entity",
          "maxLength": 10,
          "type": "string"
        },
        "balanceDue": {
          "format": "decimal",
          "description": "The balanceDue property for the agedAccountsPayable entity",
          "type": "number"
        },
        "currentAmount": {
          "format": "decimal",
          "description": "The currentAmount property for the agedAccountsPayable entity",
          "type": "number"
        },
        "period1Amount": {
          "format": "decimal",
          "description": "The period1Amount property for the agedAccountsPayable entity",
          "type": "number"
        },
        "period2Amount": {
          "format": "decimal",
          "description": "The period2Amount property for the agedAccountsPayable entity",
          "type": "number"
        },
        "period3Amount": {
          "format": "decimal",
          "description": "The period3Amount property for the agedAccountsPayable entity",
          "type": "number"
        },
        "agedAsOfDate": {
          "format": "date-time",
          "description": "The agedAsOfDate property for the agedAccountsPayable entity",
          "type": "string"
        },
        "periodLengthFilter": {
          "description": "The periodLengthFilter property for the agedAccountsPayable entity",
          "maxLength": 10,
          "type": "string"
        }
      }
    },
    "customerPaymentJournal": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the customerPaymentJournal entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the customerPaymentJournal entity",
          "maxLength": 10,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the customerPaymentJournal entity",
          "maxLength": 100,
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the customerPaymentJournal entity",
          "type": "string"
        },
        "balancingAccountId": {
          "format": "uuid",
          "description": "The balancingAccountId property for the customerPaymentJournal entity",
          "type": "string"
        },
        "balancingAccountNumber": {
          "description": "The balancingAccountNumber property for the customerPaymentJournal entity",
          "maxLength": 20,
          "type": "string"
        },
        "customerPayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerPayment"
          }
        },
        "account": {
          "$ref": "#/definitions/account"
        }
      }
    },
    "journalLine": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the journalLine entity",
          "type": "string"
        },
        "journalDisplayName": {
          "description": "The journalDisplayName property for the journalLine entity",
          "type": "string"
        },
        "lineNumber": {
          "format": "int32",
          "description": "The lineNumber property for the journalLine entity",
          "type": "integer"
        },
        "accountId": {
          "format": "uuid",
          "description": "The accountId property for the journalLine entity",
          "type": "string"
        },
        "accountNumber": {
          "description": "The accountNumber property for the journalLine entity",
          "maxLength": 20,
          "type": "string"
        },
        "postingDate": {
          "format": "date-time",
          "description": "The postingDate property for the journalLine entity",
          "type": "string"
        },
        "documentNumber": {
          "description": "The documentNumber property for the journalLine entity",
          "maxLength": 20,
          "type": "string"
        },
        "externalDocumentNumber": {
          "description": "The externalDocumentNumber property for the journalLine entity",
          "maxLength": 35,
          "type": "string"
        },
        "amount": {
          "format": "decimal",
          "description": "The amount property for the journalLine entity",
          "type": "number"
        },
        "description": {
          "description": "The description property for the journalLine entity",
          "maxLength": 100,
          "type": "string"
        },
        "comment": {
          "description": "The comment property for the journalLine entity",
          "maxLength": 250,
          "type": "string"
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dimensiontype"
          }
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the journalLine entity",
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/attachments"
          }
        },
        "account": {
          "$ref": "#/definitions/account"
        }
      }
    },
    "documentlineobjectdetailstype": {
      "type": "object",
      "properties": {
        "number": {
          "description": "The number property for the documentlineobjectdetailstype entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the documentlineobjectdetailstype entity",
          "maxLength": 100,
          "type": "string"
        },
        "item": {
          "$ref": "#/definitions/item"
        },
        "account": {
          "$ref": "#/definitions/account"
        }
      }
    },
    "itemunitofmeasureconversiontype": {
      "type": "object",
      "properties": {
        "toUnitOfMeasure": {
          "description": "The toUnitOfMeasure property for the itemunitofmeasureconversiontype entity",
          "maxLength": 10,
          "type": "string"
        },
        "fromToConversionRate": {
          "format": "decimal",
          "description": "The fromToConversionRate property for the itemunitofmeasureconversiontype entity",
          "type": "number"
        },
        "picture": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/picture"
          }
        },
        "defaultDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/defaultDimensions"
          }
        },
        "itemCategory": {
          "$ref": "#/definitions/itemCategory"
        }
      }
    },
    "postaladdresstype": {
      "type": "object",
      "properties": {
        "street": {
          "description": "The street property for the postaladdresstype entity",
          "maxLength": 152,
          "type": "string"
        },
        "city": {
          "description": "The city property for the postaladdresstype entity",
          "maxLength": 30,
          "type": "string"
        },
        "state": {
          "description": "The state property for the postaladdresstype entity",
          "maxLength": 30,
          "type": "string"
        },
        "countryLetterCode": {
          "description": "The countryLetterCode property for the postaladdresstype entity",
          "maxLength": 10,
          "type": "string"
        },
        "postalCode": {
          "description": "The postalCode property for the postaladdresstype entity",
          "maxLength": 20,
          "type": "string"
        },
        "customerFinancialDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerFinancialDetail"
          }
        },
        "picture": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/picture"
          }
        },
        "defaultDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/defaultDimensions"
          }
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "paymentTerm": {
          "$ref": "#/definitions/paymentTerm"
        },
        "shipmentMethod": {
          "$ref": "#/definitions/shipmentMethod"
        },
        "paymentMethod": {
          "$ref": "#/definitions/paymentMethod"
        }
      }
    },
    "salesInvoice": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the salesInvoice entity",
          "type": "string"
        },
        "number": {
          "description": "The number property for the salesInvoice entity",
          "maxLength": 20,
          "type": "string"
        },
        "externalDocumentNumber": {
          "description": "The externalDocumentNumber property for the salesInvoice entity",
          "maxLength": 35,
          "type": "string"
        },
        "invoiceDate": {
          "format": "date-time",
          "description": "The invoiceDate property for the salesInvoice entity",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "description": "The dueDate property for the salesInvoice entity",
          "type": "string"
        },
        "customerPurchaseOrderReference": {
          "description": "The customerPurchaseOrderReference property for the salesInvoice entity",
          "maxLength": 35,
          "type": "string"
        },
        "customerId": {
          "format": "uuid",
          "description": "The customerId property for the salesInvoice entity",
          "type": "string"
        },
        "contactId": {
          "description": "The contactId property for the salesInvoice entity",
          "maxLength": 250,
          "type": "string"
        },
        "customerNumber": {
          "description": "The customerNumber property for the salesInvoice entity",
          "maxLength": 20,
          "type": "string"
        },
        "customerName": {
          "description": "The customerName property for the salesInvoice entity",
          "maxLength": 100,
          "type": "string"
        },
        "billToName": {
          "description": "The billToName property for the salesInvoice entity",
          "maxLength": 100,
          "type": "string"
        },
        "billToCustomerId": {
          "format": "uuid",
          "description": "The billToCustomerId property for the salesInvoice entity",
          "type": "string"
        },
        "billToCustomerNumber": {
          "description": "The billToCustomerNumber property for the salesInvoice entity",
          "maxLength": 20,
          "type": "string"
        },
        "shipToName": {
          "description": "The shipToName property for the salesInvoice entity",
          "maxLength": 100,
          "type": "string"
        },
        "shipToContact": {
          "description": "The shipToContact property for the salesInvoice entity",
          "maxLength": 100,
          "type": "string"
        },
        "sellingPostalAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "billingPostalAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "shippingPostalAddress": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "currencyId": {
          "format": "uuid",
          "description": "The currencyId property for the salesInvoice entity",
          "type": "string"
        },
        "currencyCode": {
          "description": "The currencyCode property for the salesInvoice entity",
          "type": "string"
        },
        "orderId": {
          "format": "uuid",
          "description": "The orderId property for the salesInvoice entity",
          "type": "string"
        },
        "orderNumber": {
          "description": "The orderNumber property for the salesInvoice entity",
          "maxLength": 20,
          "type": "string"
        },
        "paymentTermsId": {
          "format": "uuid",
          "description": "The paymentTermsId property for the salesInvoice entity",
          "type": "string"
        },
        "shipmentMethodId": {
          "format": "uuid",
          "description": "The shipmentMethodId property for the salesInvoice entity",
          "type": "string"
        },
        "salesperson": {
          "description": "The salesperson property for the salesInvoice entity",
          "maxLength": 20,
          "type": "string"
        },
        "pricesIncludeTax": {
          "description": "The pricesIncludeTax property for the salesInvoice entity",
          "type": "boolean"
        },
        "discountAmount": {
          "format": "decimal",
          "description": "The discountAmount property for the salesInvoice entity",
          "type": "number"
        },
        "discountAppliedBeforeTax": {
          "description": "The discountAppliedBeforeTax property for the salesInvoice entity",
          "type": "boolean"
        },
        "totalAmountExcludingTax": {
          "format": "decimal",
          "description": "The totalAmountExcludingTax property for the salesInvoice entity",
          "type": "number"
        },
        "totalTaxAmount": {
          "format": "decimal",
          "description": "The totalTaxAmount property for the salesInvoice entity",
          "type": "number"
        },
        "totalAmountIncludingTax": {
          "format": "decimal",
          "description": "The totalAmountIncludingTax property for the salesInvoice entity",
          "type": "number"
        },
        "status": {
          "description": "The status property for the salesInvoice entity",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the salesInvoice entity",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phoneNumber property for the salesInvoice entity",
          "maxLength": 30,
          "type": "string"
        },
        "email": {
          "description": "The email property for the salesInvoice entity",
          "maxLength": 80,
          "type": "string"
        },
        "salesInvoiceLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesInvoiceLine"
          }
        },
        "pdfDocument": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pdfDocument"
          }
        },
        "customer": {
          "$ref": "#/definitions/customer"
        },
        "currency": {
          "$ref": "#/definitions/currency"
        },
        "paymentTerm": {
          "$ref": "#/definitions/paymentTerm"
        },
        "shipmentMethod": {
          "$ref": "#/definitions/shipmentMethod"
        }
      }
    },
    "generalLedgerEntryAttachments": {
      "type": "object",
      "properties": {
        "generalLedgerEntryNumber": {
          "format": "int32",
          "description": "The generalLedgerEntryNumber property for the generalLedgerEntryAttachments entity",
          "type": "integer"
        },
        "id": {
          "format": "uuid",
          "description": "The id property for the generalLedgerEntryAttachments entity",
          "type": "string"
        },
        "fileName": {
          "description": "The fileName property for the generalLedgerEntryAttachments entity",
          "maxLength": 250,
          "type": "string"
        },
        "byteSize": {
          "format": "int32",
          "description": "The byteSize property for the generalLedgerEntryAttachments entity",
          "type": "integer"
        },
        "content": {
          "format": "binary",
          "description": "The content property for the generalLedgerEntryAttachments entity",
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "The createdDateTime property for the generalLedgerEntryAttachments entity",
          "type": "string"
        },
        "generalLedgerEntry": {
          "$ref": "#/definitions/generalLedgerEntry"
        }
      }
    },
    "unitOfMeasure": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the unitOfMeasure entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the unitOfMeasure entity",
          "maxLength": 10,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the unitOfMeasure entity",
          "maxLength": 50,
          "type": "string"
        },
        "internationalStandardCode": {
          "description": "The internationalStandardCode property for the unitOfMeasure entity",
          "maxLength": 10,
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the unitOfMeasure entity",
          "type": "string"
        }
      }
    },
    "currency": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the currency entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the currency entity",
          "maxLength": 10,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the currency entity",
          "maxLength": 30,
          "type": "string"
        },
        "symbol": {
          "description": "The symbol property for the currency entity",
          "maxLength": 10,
          "type": "string"
        },
        "amountDecimalPlaces": {
          "description": "The amountDecimalPlaces property for the currency entity",
          "maxLength": 5,
          "type": "string"
        },
        "amountRoundingPrecision": {
          "format": "decimal",
          "description": "The amountRoundingPrecision property for the currency entity",
          "type": "number"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the currency entity",
          "type": "string"
        }
      }
    },
    "defaultDimensions": {
      "type": "object",
      "properties": {
        "parentId": {
          "format": "uuid",
          "description": "The parentId property for the defaultDimensions entity",
          "type": "string"
        },
        "dimensionId": {
          "format": "uuid",
          "description": "The dimensionId property for the defaultDimensions entity",
          "type": "string"
        },
        "dimensionCode": {
          "description": "The dimensionCode property for the defaultDimensions entity",
          "maxLength": 20,
          "type": "string"
        },
        "dimensionValueId": {
          "format": "uuid",
          "description": "The dimensionValueId property for the defaultDimensions entity",
          "type": "string"
        },
        "dimensionValueCode": {
          "description": "The dimensionValueCode property for the defaultDimensions entity",
          "maxLength": 20,
          "type": "string"
        },
        "postingValidation": {
          "description": "The postingValidation property for the defaultDimensions entity",
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/account"
        },
        "dimension": {
          "$ref": "#/definitions/dimension"
        },
        "dimensionValue": {
          "$ref": "#/definitions/dimensionValue"
        }
      }
    },
    "company": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the company entity",
          "type": "string"
        },
        "systemVersion": {
          "description": "The systemVersion property for the company entity",
          "type": "string"
        },
        "name": {
          "description": "The name property for the company entity",
          "maxLength": 30,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the company entity",
          "maxLength": 250,
          "type": "string"
        },
        "businessProfileId": {
          "description": "The businessProfileId property for the company entity",
          "maxLength": 250,
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/item"
          }
        },
        "picture": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/picture"
          }
        },
        "defaultDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/defaultDimensions"
          }
        },
        "customers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customer"
          }
        },
        "customerFinancialDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerFinancialDetail"
          }
        },
        "vendors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vendor"
          }
        },
        "companyInformation": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/companyInformation"
          }
        },
        "salesInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesInvoice"
          }
        },
        "salesInvoiceLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesInvoiceLine"
          }
        },
        "pdfDocument": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pdfDocument"
          }
        },
        "customerPaymentJournals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerPaymentJournal"
          }
        },
        "customerPayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerPayment"
          }
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/account"
          }
        },
        "taxGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/taxGroup"
          }
        },
        "journals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/journal"
          }
        },
        "journalLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/journalLine"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/attachments"
          }
        },
        "employees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/employee"
          }
        },
        "timeRegistrationEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/timeRegistrationEntry"
          }
        },
        "generalLedgerEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/generalLedgerEntry"
          }
        },
        "currencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/currency"
          }
        },
        "paymentMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/paymentMethod"
          }
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dimension"
          }
        },
        "dimensionValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dimensionValue"
          }
        },
        "dimensionLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dimensionLine"
          }
        },
        "paymentTerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/paymentTerm"
          }
        },
        "shipmentMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/shipmentMethod"
          }
        },
        "itemCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/itemCategory"
          }
        },
        "cashFlowStatement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cashFlowStatement"
          }
        },
        "countriesRegions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/countryRegion"
          }
        },
        "salesOrders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesOrder"
          }
        },
        "salesOrderLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesOrderLine"
          }
        },
        "retainedEarningsStatement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/retainedEarningsStatement"
          }
        },
        "unitsOfMeasure": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/unitOfMeasure"
          }
        },
        "agedAccountsReceivable": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/agedAccountsReceivable"
          }
        },
        "agedAccountsPayable": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/agedAccountsPayable"
          }
        },
        "balanceSheet": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/balanceSheet"
          }
        },
        "trialBalance": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/trialBalance"
          }
        },
        "incomeStatement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/incomeStatement"
          }
        },
        "taxAreas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/taxArea"
          }
        },
        "salesQuotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesQuote"
          }
        },
        "salesQuoteLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesQuoteLine"
          }
        },
        "salesCreditMemos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesCreditMemo"
          }
        },
        "salesCreditMemoLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/salesCreditMemoLine"
          }
        },
        "generalLedgerEntryAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/generalLedgerEntryAttachments"
          }
        },
        "purchaseInvoices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/purchaseInvoice"
          }
        },
        "purchaseInvoiceLines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/purchaseInvoiceLine"
          }
        },
        "customerSales": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/customerSale"
          }
        },
        "vendorPurchases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vendorPurchase"
          }
        }
      }
    },
    "shipmentMethod": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the shipmentMethod entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the shipmentMethod entity",
          "maxLength": 10,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the shipmentMethod entity",
          "maxLength": 100,
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the shipmentMethod entity",
          "type": "string"
        }
      }
    },
    "balanceSheet": {
      "type": "object",
      "properties": {
        "lineNumber": {
          "format": "int32",
          "description": "The lineNumber property for the balanceSheet entity",
          "type": "integer"
        },
        "display": {
          "description": "The display property for the balanceSheet entity",
          "maxLength": 250,
          "type": "string"
        },
        "balance": {
          "format": "decimal",
          "description": "The balance property for the balanceSheet entity",
          "type": "number"
        },
        "lineType": {
          "description": "The lineType property for the balanceSheet entity",
          "maxLength": 30,
          "type": "string"
        },
        "indentation": {
          "format": "int32",
          "description": "The indentation property for the balanceSheet entity",
          "type": "integer"
        },
        "dateFilter": {
          "format": "date-time",
          "description": "The dateFilter property for the balanceSheet entity",
          "type": "string"
        }
      }
    },
    "dimensiontype": {
      "type": "object",
      "properties": {
        "code": {
          "description": "The code property for the dimensiontype entity",
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the dimensiontype entity",
          "type": "string"
        },
        "valueCode": {
          "description": "The valueCode property for the dimensiontype entity",
          "type": "string"
        },
        "valueDisplayName": {
          "description": "The valueDisplayName property for the dimensiontype entity",
          "type": "string"
        },
        "customer": {
          "$ref": "#/definitions/customer"
        }
      }
    },
    "taxGroup": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the taxGroup entity",
          "type": "string"
        },
        "code": {
          "description": "The code property for the taxGroup entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the taxGroup entity",
          "maxLength": 100,
          "type": "string"
        },
        "taxType": {
          "description": "The taxType property for the taxGroup entity",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the taxGroup entity",
          "type": "string"
        }
      }
    },
    "employee": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the employee entity",
          "type": "string"
        },
        "number": {
          "description": "The number property for the employee entity",
          "maxLength": 20,
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the employee entity",
          "type": "string"
        },
        "givenName": {
          "description": "The givenName property for the employee entity",
          "maxLength": 30,
          "type": "string"
        },
        "middleName": {
          "description": "The middleName property for the employee entity",
          "maxLength": 30,
          "type": "string"
        },
        "surname": {
          "description": "The surname property for the employee entity",
          "maxLength": 30,
          "type": "string"
        },
        "jobTitle": {
          "description": "The jobTitle property for the employee entity",
          "maxLength": 30,
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "phoneNumber": {
          "description": "The phoneNumber property for the employee entity",
          "maxLength": 30,
          "type": "string"
        },
        "mobilePhone": {
          "description": "The mobilePhone property for the employee entity",
          "maxLength": 30,
          "type": "string"
        },
        "email": {
          "description": "The email property for the employee entity",
          "maxLength": 80,
          "type": "string"
        },
        "personalEmail": {
          "description": "The personalEmail property for the employee entity",
          "maxLength": 80,
          "type": "string"
        },
        "employmentDate": {
          "format": "date-time",
          "description": "The employmentDate property for the employee entity",
          "type": "string"
        },
        "terminationDate": {
          "format": "date-time",
          "description": "The terminationDate property for the employee entity",
          "type": "string"
        },
        "status": {
          "description": "The status property for the employee entity",
          "type": "string"
        },
        "birthDate": {
          "format": "date-time",
          "description": "The birthDate property for the employee entity",
          "type": "string"
        },
        "statisticsGroupCode": {
          "description": "The statisticsGroupCode property for the employee entity",
          "maxLength": 10,
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the employee entity",
          "type": "string"
        },
        "picture": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/picture"
          }
        },
        "defaultDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/defaultDimensions"
          }
        },
        "timeRegistrationEntries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/timeRegistrationEntry"
          }
        }
      }
    },
    "agedAccountsReceivable": {
      "type": "object",
      "properties": {
        "customerId": {
          "format": "uuid",
          "description": "The customerId property for the agedAccountsReceivable entity",
          "type": "string"
        },
        "customerNumber": {
          "description": "The customerNumber property for the agedAccountsReceivable entity",
          "maxLength": 20,
          "type": "string"
        },
        "name": {
          "description": "The name property for the agedAccountsReceivable entity",
          "maxLength": 100,
          "type": "string"
        },
        "currencyCode": {
          "description": "The currencyCode property for the agedAccountsReceivable entity",
          "maxLength": 10,
          "type": "string"
        },
        "balanceDue": {
          "format": "decimal",
          "description": "The balanceDue property for the agedAccountsReceivable entity",
          "type": "number"
        },
        "currentAmount": {
          "format": "decimal",
          "description": "The currentAmount property for the agedAccountsReceivable entity",
          "type": "number"
        },
        "period1Amount": {
          "format": "decimal",
          "description": "The period1Amount property for the agedAccountsReceivable entity",
          "type": "number"
        },
        "period2Amount": {
          "format": "decimal",
          "description": "The period2Amount property for the agedAccountsReceivable entity",
          "type": "number"
        },
        "period3Amount": {
          "format": "decimal",
          "description": "The period3Amount property for the agedAccountsReceivable entity",
          "type": "number"
        },
        "agedAsOfDate": {
          "format": "date-time",
          "description": "The agedAsOfDate property for the agedAccountsReceivable entity",
          "type": "string"
        },
        "periodLengthFilter": {
          "description": "The periodLengthFilter property for the agedAccountsReceivable entity",
          "maxLength": 10,
          "type": "string"
        }
      }
    },
    "companyInformation": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The id property for the companyInformation entity",
          "type": "string"
        },
        "displayName": {
          "description": "The displayName property for the companyInformation entity",
          "maxLength": 100,
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/postaladdresstype"
        },
        "phoneNumber": {
          "description": "The phoneNumber property for the companyInformation entity",
          "maxLength": 30,
          "type": "string"
        },
        "faxNumber": {
          "description": "The faxNumber property for the companyInformation entity",
          "maxLength": 30,
          "type": "string"
        },
        "email": {
          "description": "The email property for the companyInformation entity",
          "maxLength": 80,
          "type": "string"
        },
        "website": {
          "description": "The website property for the companyInformation entity",
          "maxLength": 80,
          "type": "string"
        },
        "taxRegistrationNumber": {
          "description": "The taxRegistrationNumber property for the companyInformation entity",
          "maxLength": 20,
          "type": "string"
        },
        "currencyCode": {
          "description": "The currencyCode property for the companyInformation entity",
          "type": "string"
        },
        "currentFiscalYearStartDate": {
          "format": "date-time",
          "description": "The currentFiscalYearStartDate property for the companyInformation entity",
          "type": "string"
        },
        "industry": {
          "description": "The industry property for the companyInformation entity",
          "maxLength": 30,
          "type": "string"
        },
        "picture": {
          "format": "binary",
          "description": "The picture property for the companyInformation entity",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The lastModifiedDateTime property for the companyInformation entity",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "filterParam": {
      "in": "query",
      "name": "$filter",
      "description": "Filtering expression",
      "type": "string"
    },
    "topParam": {
      "in": "query",
      "name": "$top",
      "description": "Number of items to return from the top of the list",
      "type": "integer"
    },
    "skipParam": {
      "in": "query",
      "name": "$skip",
      "description": "Number of items to skip from the list",
      "type": "integer"
    },
    "limitParam": {
      "in": "query",
      "name": "$limit",
      "description": "Number of items to return from the list",
      "type": "integer"
    },
    "IfMatchParam": {
      "in": "header",
      "name": "If-Match",
      "description": "Required. When this request header is included and the eTag provided does not match the current tag on the entity, this will not be updated.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "oAuth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize?resource=https://api.businesscentral.dynamics.com",
      "scopes": {
        "Financials.ReadWrite.All": "financials.read.write.all"
      }
    }
  },
  "security": [
    {
      "oAuth": [
        "Financials.ReadWrite.All"
      ]
    }
  ],
  "tags": [
    {
      "name": "company",
      "description": "Represents a company in Dynamics 365 Business Central"
    },
    {
      "name": "item",
      "description": "Represents a item in Dynamics 365 Business Central"
    },
    {
      "name": "picture",
      "description": "Represents a picture in Dynamics 365 Business Central"
    },
    {
      "name": "defaultDimensions",
      "description": "Represents a defaultDimensions in Dynamics 365 Business Central"
    },
    {
      "name": "customer",
      "description": "Represents a customer in Dynamics 365 Business Central"
    },
    {
      "name": "customerFinancialDetail",
      "description": "Represents a customerFinancialDetail in Dynamics 365 Business Central"
    },
    {
      "name": "vendor",
      "description": "Represents a vendor in Dynamics 365 Business Central"
    },
    {
      "name": "companyInformation",
      "description": "Represents a companyInformation in Dynamics 365 Business Central"
    },
    {
      "name": "salesInvoice",
      "description": "Represents a salesInvoice in Dynamics 365 Business Central"
    },
    {
      "name": "salesInvoiceLine",
      "description": "Represents a salesInvoiceLine in Dynamics 365 Business Central"
    },
    {
      "name": "pdfDocument",
      "description": "Represents a pdfDocument in Dynamics 365 Business Central"
    },
    {
      "name": "customerPaymentJournal",
      "description": "Represents a customerPaymentJournal in Dynamics 365 Business Central"
    },
    {
      "name": "customerPayment",
      "description": "Represents a customerPayment in Dynamics 365 Business Central"
    },
    {
      "name": "account",
      "description": "Represents a account in Dynamics 365 Business Central"
    },
    {
      "name": "taxGroup",
      "description": "Represents a taxGroup in Dynamics 365 Business Central"
    },
    {
      "name": "journal",
      "description": "Represents a journal in Dynamics 365 Business Central"
    },
    {
      "name": "journalLine",
      "description": "Represents a journalLine in Dynamics 365 Business Central"
    },
    {
      "name": "attachments",
      "description": "Represents a attachments in Dynamics 365 Business Central"
    },
    {
      "name": "employee",
      "description": "Represents a employee in Dynamics 365 Business Central"
    },
    {
      "name": "timeRegistrationEntry",
      "description": "Represents a timeRegistrationEntry in Dynamics 365 Business Central"
    },
    {
      "name": "generalLedgerEntry",
      "description": "Represents a generalLedgerEntry in Dynamics 365 Business Central"
    },
    {
      "name": "currency",
      "description": "Represents a currency in Dynamics 365 Business Central"
    },
    {
      "name": "paymentMethod",
      "description": "Represents a paymentMethod in Dynamics 365 Business Central"
    },
    {
      "name": "dimension",
      "description": "Represents a dimension in Dynamics 365 Business Central"
    },
    {
      "name": "dimensionValue",
      "description": "Represents a dimensionValue in Dynamics 365 Business Central"
    },
    {
      "name": "dimensionLine",
      "description": "Represents a dimensionLine in Dynamics 365 Business Central"
    },
    {
      "name": "paymentTerm",
      "description": "Represents a paymentTerm in Dynamics 365 Business Central"
    },
    {
      "name": "shipmentMethod",
      "description": "Represents a shipmentMethod in Dynamics 365 Business Central"
    },
    {
      "name": "itemCategory",
      "description": "Represents a itemCategory in Dynamics 365 Business Central"
    },
    {
      "name": "cashFlowStatement",
      "description": "Represents a cashFlowStatement in Dynamics 365 Business Central"
    },
    {
      "name": "countryRegion",
      "description": "Represents a countryRegion in Dynamics 365 Business Central"
    },
    {
      "name": "salesOrder",
      "description": "Represents a salesOrder in Dynamics 365 Business Central"
    },
    {
      "name": "salesOrderLine",
      "description": "Represents a salesOrderLine in Dynamics 365 Business Central"
    },
    {
      "name": "retainedEarningsStatement",
      "description": "Represents a retainedEarningsStatement in Dynamics 365 Business Central"
    },
    {
      "name": "unitOfMeasure",
      "description": "Represents a unitOfMeasure in Dynamics 365 Business Central"
    },
    {
      "name": "agedAccountsReceivable",
      "description": "Represents a agedAccountsReceivable in Dynamics 365 Business Central"
    },
    {
      "name": "agedAccountsPayable",
      "description": "Represents a agedAccountsPayable in Dynamics 365 Business Central"
    },
    {
      "name": "balanceSheet",
      "description": "Represents a balanceSheet in Dynamics 365 Business Central"
    },
    {
      "name": "trialBalance",
      "description": "Represents a trialBalance in Dynamics 365 Business Central"
    },
    {
      "name": "incomeStatement",
      "description": "Represents a incomeStatement in Dynamics 365 Business Central"
    },
    {
      "name": "taxArea",
      "description": "Represents a taxArea in Dynamics 365 Business Central"
    },
    {
      "name": "salesQuote",
      "description": "Represents a salesQuote in Dynamics 365 Business Central"
    },
    {
      "name": "salesQuoteLine",
      "description": "Represents a salesQuoteLine in Dynamics 365 Business Central"
    },
    {
      "name": "salesCreditMemo",
      "description": "Represents a salesCreditMemo in Dynamics 365 Business Central"
    },
    {
      "name": "salesCreditMemoLine",
      "description": "Represents a salesCreditMemoLine in Dynamics 365 Business Central"
    },
    {
      "name": "generalLedgerEntryAttachments",
      "description": "Represents a generalLedgerEntryAttachments in Dynamics 365 Business Central"
    },
    {
      "name": "purchaseInvoice",
      "description": "Represents a purchaseInvoice in Dynamics 365 Business Central"
    },
    {
      "name": "purchaseInvoiceLine",
      "description": "Represents a purchaseInvoiceLine in Dynamics 365 Business Central"
    },
    {
      "name": "customerSale",
      "description": "Represents a customerSale in Dynamics 365 Business Central"
    },
    {
      "name": "vendorPurchase",
      "description": "Represents a vendorPurchase in Dynamics 365 Business Central"
    }
  ]
}
