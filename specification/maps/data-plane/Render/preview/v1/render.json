{
  "swagger": "2.0",
  "info": {
    "title": "Azure Maps Render Service",
    "version": "1.0",
    "description": "Azure Maps Render REST APIs"
  },
  "host": "atlas.microsoft.com",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "responses": {
    "400": {
      "description": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "401": {
      "description": "Access denied due to invalid subscription key. Make sure to provide a valid key for an active subscription.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "403": {
      "description": "Permission, capacity, or authentication issues.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "404": {
      "description": "Not Found: the requested resource could not be found, but it may be available again in the future.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    },
    "500": {
      "description": "An error occurred while processing the request. Please try again later.",
      "schema": {
        "$ref": "#/definitions/ErrorResponse"
      }
    }
  },
  "parameters": {
    "SubscriptionKey": {
      "name": "subscription-key",
      "description": "Azure Maps subscription key",
      "type": "string",
      "in": "query",
      "required": true,
      "x-ms-parameter-location": "client"
    },
    "ApiVersion": {
      "name": "api-version",
      "description": "Version number of Azure Maps API. Current version is 1.0",
      "type": "string",
      "in": "query",
      "required": true,
      "default": "1.0",
      "x-ms-parameter-location": "client"
    },
    "RasterTileFormat": {
      "name": "format",
      "description": "Desired format of the response. Possible value: png.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "png"
      ],
      "x-ms-enum": {
        "name": "RasterTileFormat",
        "modelAsString": false,
        "values": [
          {
            "value": "png",
            "description": "An image in the png format. Supports zoom levels 0 through 18."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "Language": {
      "name": "language",
      "in": "query",
      "description": "Language in which search results should be returned. Should be one of supported IETF language tags, case insensitive. When data in specified language is not available for a specific field, default language is used.\n\nPlease refer to [Supported Languages](https://docs.microsoft.com/en-us/azure/azure-maps/supported-languages) for details.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TileFormat": {
      "name": "format",
      "description": "Desired format of the response. Possible values are png & pbf.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "png",
        "pbf"
      ],
      "x-ms-enum": {
        "name": "TileFormat",
        "modelAsString": false,
        "values": [
          {
            "value": "png",
            "description": "An image in the png format. Supports zoom levels 0 through 18."
          },
          {
            "value": "pbf",
            "description": "Vector graphic in the pbf format. Supports zoom levels 0 through 20."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "xTileIndex": {
      "name": "x",
      "x-ms-client-name": "xTileIndex",
      "in": "query",
      "description": "X coordinate of the tile on zoom grid. Value must be in the range [0, 2<sup>`zoom`</sup> -1].\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "yTileIndex": {
      "name": "y",
      "x-ms-client-name": "yTileIndex",
      "in": "query",
      "description": "Y coordinate of the tile on zoom grid. Value must be in the range [0, 2<sup>`zoom`</sup> -1].\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "TextFormat": {
      "name": "format",
      "description": "Desired format of the response. Value can be either _json_ or _xml_.",
      "type": "string",
      "in": "path",
      "required": true,
      "enum": [
        "json",
        "xml"
      ],
      "x-ms-enum": {
        "name": "TextFormat",
        "modelAsString": false,
        "values": [
          {
            "value": "json",
            "description": "[The JavaScript Object Notation Data Interchange Format](https://tools.ietf.org/html/rfc8259)"
          },
          {
            "value": "xml",
            "description": "[The Extensible Markup Language](https://www.w3.org/TR/xml/)"
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "RasterZoom": {
      "name": "zoom",
      "in": "query",
      "description": "Zoom level for the desired tile. Zoom value must be in the range: 0-18 (inclusive).\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "RasterVectorZoom": {
      "name": "zoom",
      "in": "query",
      "description": "Zoom level for the desired tile. For _raster_ tiles, value must be in the range: 0-18 (inclusive). For _vector_ tiles, value must be in the range: 0-20 (inclusive).\n\nPlease see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
      "required": true,
      "type": "integer",
      "x-ms-parameter-location": "method"
    },
    "Text": {
      "name": "text",
      "in": "query",
      "description": "Yes/no value to exclude textual data from response. Only images and country names will be in response.",
      "required": false,
      "type": "string",
      "enum": [
        "yes",
        "no"
      ],
      "default": "yes",
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {
    "/map/static/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\nThe static image service renders a user-defined, rectangular image containing a map section using a zoom level from 0 to 20.\nThe supported resolution range for the map image is from 1x1 to 8192x8192.\nIf you are deciding when to use the static image service over the map tile service, you may want to consider how you would like to interact with the rendered map. If the map contents will be relatively unchanging, a static map is a good choice. If you want to support a lot of zooming, panning and changing of the map content, the map tile service would be a better choice. <br><br>   _Note_ : Either **center** or **bbox** parameter must be supplied to the API. <br><br> The supported Lat and Lon ranges when using the **bbox** parameter, are as follows: <br><br>\n\n  |Zoom Level | Max Lon Range   | Max Lat Range|\n  |:----------|:----------------|:-------------|\n  |0          | 360.0           | 170.0        | \n  |1          | 360.0           | 170.0        |\n  |2          | 360.0           | 170.0        |\n  |3          | 360.0           | 170.0        |\n  |4          | 360.0           | 170.0        |\n  |5          | 180.0           | 85.0         |\n  |6          | 90.0            | 42.5         |\n  |7          | 45.0            | 21.25        |\n  |8          | 22.5            | 10.625       |\n  |9          | 11.25           | 5.3125       |\n  |10         | 5.625           | 2.62625      |\n  |11         | 2.8125          | 1.328125     |\n  |12         | 1.40625         | 0.6640625    |\n  |13         | 0.703125        | 0.33203125   |\n  |14         | 0.3515625       | 0.166015625  |\n  |15         | 0.17578125      | 0.0830078125 |  \n  |16         | 0.087890625     | 0.0415039063 | \n  |17         | 0.0439453125    | 0.0207519531 |\n  |18         | 0.0219726563    | 0.0103759766 |\n  |19         | 0.0109863281    | 0.0051879883 |\n  |20         | 0.0054931641    | 0.0025939941 |",
        "operationId": "Render_GetMapImage",
        "x-ms-examples": {
          "GetMapStaticImage": {
            "$ref": "./examples/GetMapImage.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/RasterTileFormat"
          },
          {
            "name": "path",
            "description": "Path style and locations. Use this parameter to optionally add lines, polygons or circles to the image.\nThe path style describes the appearance of the line and fill. (Be sure to properly URL-encode values of this\nparameter since it will contain reserved characters such as pipes and punctuation.)\n\nPath parameter is supported in Azure Maps account SKU starting with S1. Multiple instances of the path parameter \nallow to specify multiple geometries with their styles. Nuber of parameters per request is limited to 10 and\nnumber of locations is limited to 100 per path.\n\nTo render a circle with radius 100 meters and center point at latitude 45°N and longitude 122°W using the default style, add the\nquerystring parameter \n\n`path=r100||-122 45` \n\nNote that the longitude comes before the latitude.\nAfter URL encoding this will look like\n\n`path=r100%7C%7C45+-122`\n\nAll of the examples here show the path parameter without URL encoding, for clarity.\n\nTo render a line, separate each location with a pipe character. For example, use\n\n`path=||-122 45|-119.5 43.2|-121.67 47.12`\n\nTo render a polygon, last location must be equal to the start location. For example, use\n\n`path=||-122 45|-119.5 43.2|-121.67 47.12|-122 45`\n\n### Style Modifiers\n\nYou can modify the appearance of the path by adding style modifiers. These are added before the locations. \nStyle modifiers each have a two-letter name. These abbreviated names are used to help\nreduce the length of the URL.\n\nTo change the color of the outline, use the 'lc' style modifier and specify the color using the HTML/CSS RGB color\nformat which is a six-digit hexadecimal number (the three-digit form is not supported). For example, to use\na deep pink color which you would specify as #FF1493 in CSS, use\n\n`path=lcFF1493||-122 45|-119.5 43.2`\n\n### Getting Path locations from Azure Maps Data Storage\n\nFor all Azure Maps account SKUs other than S0, the path location information can be obtained from Azure Maps Data Storage. \nAfter uploading a GeoJSON document containing path locations, the Data Storage service returns a Unique Data ID (UDID) that you can use\nto reference the data in the path parameter.\n\nTo use the point geometry from an uploaded GeoJSON document as the path locations, specify the UDID in the locations\nsection of the path parameter. For example,\n\n`path=||udid-29dc105a-dee7-409f-a3f9-22b066ae4713`\n\nNote the it is not allowed to mix path locations from Data Storage with locations specified in the path parameter. \n\n### Style Modifier Summary\n\nModifier  | Description            | Range            \n:--------:|------------------------|------------------\nlc        | Line color             | 000000 to FFFFFF\nfc        | Fill color             | 000000 to FFFFFF\nla        | Line alpha (opacity)   | 0 to 1           \nfa        | Fill alpha (opacity)   | 0 to 1           \nlw        | Line width             | Greater than 0            \nra        | Circle radius (meters) | Greater than 0",
            "in": "query",
            "required": false,
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "x-publish": false
          },
          {
            "name": "layer",
            "in": "query",
            "description": "Map layer requested. If layer is set to labels or hybrid, the format should be png.",
            "required": false,
            "default": "basic",
            "type": "string",
            "enum": [
              "basic",
              "hybrid",
              "labels"
            ],
            "x-ms-enum": {
              "name": "StaticMapLayer",
              "modelAsString": false,
              "values": [
                {
                  "value": "basic",
                  "description": "Returns an image containing all map features including polygons, borders, roads and labels."
                },
                {
                  "value": "hybrid",
                  "description": "Returns an image containing borders, roads, and labels, and can be overlaid on other tiles (such as satellite imagery) to produce hybrid tiles."
                },
                {
                  "value": "labels",
                  "description": "Returns an image of just the map's label information."
                }
              ]
            }
          },
          {
            "name": "style",
            "in": "query",
            "description": "Map style to be returned. Currently, only style available is main.",
            "required": false,
            "default": "main",
            "type": "string",
            "enum": [
              "main"
            ]
          },
          {
            "name": "zoom",
            "in": "query",
            "description": "Desired zoom level of the map. Zoom value must be in the range: 0-20 (inclusive). Default value is 12.<br><br>Please see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid) for details.",
            "required": false,
            "default": 12,
            "type": "integer",
            "minimum": 0,
            "maximum": 20
          },
          {
            "name": "center",
            "in": "query",
            "description": "Coordinates of the center point. Format: 'lon,lat'. Projection used\n- EPSG:3857. Longitude range: -180 to 180. Latitude range: -85 to\n85. Note: Either center or bbox are required parameters. They are\nmutually exclusive.",
            "required": false,
            "type": "string"
          },
          {
            "name": "bbox",
            "in": "query",
            "description": "Bounding box. Projection used - EPSG:3857. Format : 'minLon, minLat,\nmaxLon, maxLat'. Note: Either bbox or center are required\nparameters. They are mutually exclusive. It shouldn’t be used with\nheight or width. \n\nThe maximum allowed ranges for Lat and Lon are defined for each zoom level\nin the table at the top of this page. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "description": "Height of the resulting image in pixels. Range is 1 to 8192. Default\nis 512. It shouldn’t be used with bbox.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 8192,
            "default": 512
          },
          {
            "name": "width",
            "in": "query",
            "description": "Width of the resulting image in pixels. Range is 1 to 8192. Default is 512. It shouldn’t be used with bbox.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "maximum": 8192,
            "default": 512
          },
          {
            "$ref": "#/parameters/Language"
          }
        ],
        "produces": [
          "image/png",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MapStaticResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/tile/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\nFetches map tiles in vector or raster format typically to be integrated into a new map control or SDK. By default, Azure uses vector map tiles for its web map control (see [Zoom Levels and Tile Grid](https://docs.microsoft.com/en-us/azure/location-based-services/zoom-levels-and-tile-grid))",
        "operationId": "Render_GetMapTile",
        "x-ms-examples": {
          "GetMapTile": {
            "$ref": "./examples/GetMapTile.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/TileFormat"
          },
          {
            "name": "layer",
            "in": "query",
            "description": "Map layer requested. Possible values are basic, hybrid and labels.",
            "required": true,
            "enum": [
              "basic",
              "hybrid",
              "labels"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "MapTileLayer",
              "modelAsString": false,
              "values": [
                {
                  "value": "basic",
                  "description": "Returns a tile containing all map features including polygons, borders, roads and labels."
                },
                {
                  "value": "hybrid",
                  "description": "Returns a tile containing borders, roads, and labels, and can be overlaid on other tiles (such as satellite imagery) to produce hybrid tiles."
                },
                {
                  "value": "labels",
                  "description": "Returns a tile of just the map's label information."
                }
              ]
            }
          },
          {
            "name": "style",
            "in": "query",
            "description": "Map style to be returned. Currently there is only one style, e.g. main.",
            "required": true,
            "type": "string",
            "enum": [
              "main"
            ],
            "x-ms-enum": {
              "name": "MapTileStyle",
              "modelAsString": false,
              "values": [
                {
                  "value": "main",
                  "description": "Azure Maps main style"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/RasterVectorZoom"
          },
          {
            "$ref": "#/parameters/xTileIndex"
          },
          {
            "$ref": "#/parameters/yTileIndex"
          },
          {
            "name": "tileSize",
            "in": "query",
            "description": "The size of the returned map tile in pixels.",
            "required": false,
            "type": "integer",
            "default": 256,
            "enum": [
              256,
              512
            ],
            "x-ms-enum": {
              "name": "MapTileSize",
              "modelAsString": false,
              "values": [
                {
                  "value": 256,
                  "description": "Return a 256 by 256 pixel tile."
                },
                {
                  "value": 512,
                  "description": "Return a 512 by 512 pixel tile."
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Language"
          }
        ],
        "produces": [
          "image/png",
          "image/pbf",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MapTileResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/copyright/caption/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\nCopyrights API is designed to serve copyright information for Render Tile  service. In addition to basic copyright for the whole map, API is serving  specific groups of copyrights for some countries.\nAs an alternative to copyrights for map request, one can receive captions  for displaying the map provider information on the map.",
        "operationId": "Render_GetCopyrightCaption",
        "x-ms-examples": {
          "GetCopyrightCaption": {
            "$ref": "./examples/GetCopyrightCaption.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/TextFormat"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CopyrightCaptionResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/imagery/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S1 pricing tier. Access from S0 pricing tier will be deprecated after February 4th' 2019.\n\n\nThis service returns a map image tile with size 256x256, given the x and y coordinates and zoom  level. Zoom level ranges from 0 to 18. The current available style value is 'satellite' which provides satellite  imagery alone.",
        "operationId": "Render_GetMapImageryTilePreview",
        "x-ms-examples": {
          "GetMapImagery": {
            "$ref": "./examples/GetMapImageryTile.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/RasterTileFormat"
          },
          {
            "name": "style",
            "in": "query",
            "description": "Map style to be returned. __Possible values:__ satellite.",
            "required": true,
            "type": "string",
            "enum": [
              "satellite"
            ],
            "x-ms-enum": {
              "name": "MapImageryStyle",
              "modelAsString": false,
              "values": [
                {
                  "value": "satellite",
                  "description": "Satellite imagery"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/RasterZoom"
          },
          {
            "$ref": "#/parameters/xTileIndex"
          },
          {
            "$ref": "#/parameters/yTileIndex"
          }
        ],
        "produces": [
          "image/png",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MapImageryResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/copyright/bounding/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\nReturns copyright information for a given bounding box. Bounding-box requests should specify the minimum and maximum longitude and latitude (EPSG-3857) coordinates",
        "operationId": "Render_GetCopyrightFromBoundingBox",
        "x-ms-examples": {
          "GetCopyrightBounding": {
            "$ref": "./examples/GetCopyrightFromBoundingBox.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/TextFormat"
          },
          {
            "name": "mincoordinates",
            "in": "query",
            "description": "Minimum coordinates of bounding box in latitude longitude coordinate system. E.g. 52.41064,4.84228",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxcoordinates",
            "in": "query",
            "description": "Maximum coordinates of bounding box in latitude longitude coordinate system. E.g. 52.41064,4.84228",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/Text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CopyrightBoundingResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/copyright/tile/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\n\nCopyrights API is designed to serve copyright information for Render Tile  service. In addition to basic copyright for the whole map, API is serving  specific groups of copyrights for some countries.\nReturns the copyright information for a given tile. To obtain the  copyright information for a particular tile, the request should specify  the tile's zoom level and x and y coordinates (see: Zoom Levels and Tile  Grid).",
        "operationId": "Render_GetCopyrightForTile",
        "x-ms-examples": {
          "GetCopyrightTile": {
            "$ref": "./examples/GetCopyrightForTile.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/TextFormat"
          },
          {
            "$ref": "#/parameters/RasterZoom"
          },
          {
            "$ref": "#/parameters/xTileIndex"
          },
          {
            "$ref": "#/parameters/yTileIndex"
          },
          {
            "$ref": "#/parameters/Text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CopyrightTileResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    },
    "/map/copyright/world/{format}": {
      "get": {
        "x-publish": true,
        "description": "**Applies to**: S0 and S1 pricing tiers.\n\n\nCopyrights API is designed to serve copyright information for Render Tile  service. In addition to basic copyright for the whole map, API is serving  specific groups of copyrights for some countries.\nReturns the copyright information for the world. To obtain the default copyright information for the whole world, do not specify a tile or bounding box.",
        "operationId": "Render_GetCopyrightForWorld",
        "x-ms-examples": {
          "GetCopyrightWorld": {
            "$ref": "./examples/GetCopyrightForWorld.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionKey"
          },
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/TextFormat"
          },
          {
            "$ref": "#/parameters/Text"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CopyrightWorldResult"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "500": {
            "$ref": "#/responses/500"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "type": "object",
      "description": "This response object is returned when an error occurs in the Maps API",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "Error": {
      "type": "object",
      "description": "This object is returned when an error occurs in the Maps API",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true,
          "description": "The HTTP status code."
        },
        "message": {
          "type": "string",
          "readOnly": true,
          "description": "If available, a human readable description of the error."
        }
      }
    },
    "CopyrightBoundingResult": {
      "description": "This object is returned from a successful Copyright Bounding call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "generalCopyrights": {
          "description": "General Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "regions": {
          "description": "Regions array",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "Region": {
      "type": "object",
      "properties": {
        "copyrights": {
          "description": "Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "country": {
          "description": "Country property",
          "type": "object",
          "readOnly": true,
          "properties": {
            "ISO3": {
              "description": "ISO3 property",
              "type": "string",
              "readOnly": true
            },
            "label": {
              "description": "Label property",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "CopyrightCaptionResult": {
      "description": "This object is returned from a successful Copyright Caption call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "copyrightsCaption": {
          "description": "Copyrights Caption property",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CopyrightWorldResult": {
      "description": "This object is returned from a successful Copyright World call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "generalCopyrights": {
          "description": "General Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "regions": {
          "description": "Regions array",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "CopyrightTileResult": {
      "description": "This object is returned from a successful Copyright Tile call",
      "type": "object",
      "properties": {
        "formatVersion": {
          "description": "Format Version property",
          "type": "string",
          "readOnly": true
        },
        "generalCopyrights": {
          "description": "General Copyrights array",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        },
        "regions": {
          "description": "Regions array",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Region"
          }
        }
      }
    },
    "MapStaticResult": {
      "description": "This image is returned from a successful Map Static call",
      "type": "string",
      "format": "binary",
      "readOnly": true
    },
    "MapTileResult": {
      "description": "This image is returned from a successful Map Tile call",
      "type": "string",
      "format": "binary",
      "readOnly": true
    },
    "MapImageryResult": {
      "description": "This image is returned from a successful Map Imagery call",
      "type": "string",
      "format": "binary",
      "readOnly": true
    }
  }
}